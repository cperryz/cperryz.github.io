/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

	__webpack_require__(2);
	__webpack_require__(6);
	__webpack_require__(8);
	__webpack_require__(10);
	__webpack_require__(12);
	__webpack_require__(14);
	__webpack_require__(16);

	__webpack_require__(18);
	__webpack_require__(19);
	__webpack_require__(20);
	__webpack_require__(21);
	__webpack_require__(22);
	__webpack_require__(23);

	window.moment=__webpack_require__(24);


/***/ }),
/* 1 */,
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(3);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(5)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/index.js!./model.less", function() {
				var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/index.js!./model.less");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(4)();
	exports.push([module.id, "p {\n  margin-bottom: 4rem;\n}\n@media only screen and (max-width:669px) {\n  h2,\n  h3 {\n    font-size: 3.5rem;\n  }\n}\nh5,\nh2,\nh3 {\n  font-size: 4rem;\n  font-family: Roboto;\n  font-weight: lighter;\n  text-transform: uppercase;\n  margin-bottom: 2.7rem;\n}\nh5 .subtitle,\nh2 .subtitle,\nh3 .subtitle {\n  color: white;\n  display: inline-block;\n  background-color: #82c21b;\n  font-size: 3rem;\n  font-style: italic;\n  font-weight: lighter;\n  padding: 1rem;\n  position: relative;\n  -webkit-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -moz-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -ms-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -o-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n}\n@media only screen and (max-width:669px) {\n  h5 .subtitle,\n  h2 .subtitle,\n  h3 .subtitle {\n    font-size: 2.5rem;\n  }\n}\n@media only screen and (max-width:669px) {\n  h5,\n  h2,\n  h3 {\n    font-size: 3.5rem;\n  }\n}\n.centered {\n  text-align: center;\n  padding-top: 7rem;\n}\n@media only screen and (max-width:669px) {\n  .centered {\n    padding-top: 4rem;\n  }\n}\n.block0,\n.block1 {\n  height: 63rem;\n  margin-bottom: 0;\n}\n.block0 .image-mobile,\n.block1 .image-mobile {\n  padding: 3rem;\n}\n.block0 .image-mobile > div,\n.block1 .image-mobile > div {\n  height: 20rem;\n  height: 56rem;\n  position: relative;\n  background-size: cover;\n  background-position: center;\n  overflow: hidden;\n}\n.block0 .image-mobile > div img,\n.block1 .image-mobile > div img {\n  position: absolute;\n  bottom: 0;\n  width: 280%;\n  max-width: 280%;\n}\n@media only screen and (min-width:1921px) {\n  .block0,\n  .block1 {\n    height: 74rem;\n  }\n}\n@media only screen and (max-width:669px) {\n  .block0,\n  .block1 {\n    height: auto;\n  }\n}\n.block0 .column,\n.block1 .column {\n  position: relative;\n  height: 100%;\n  display: table;\n}\n.block0 .column .boxcontent,\n.block1 .column .boxcontent {\n  display: table-cell;\n  vertical-align: middle;\n  padding: 6rem 0;\n}\n@media only screen and (max-width:669px) {\n  .block0 .column .boxcontent,\n  .block1 .column .boxcontent {\n    text-align: center;\n    padding: 6rem 3rem;\n  }\n}\n@media only screen and (max-width:669px) {\n  .block0,\n  .block1 {\n    height: auto;\n  }\n  .block0 > div,\n  .block1 > div {\n    height: auto;\n  }\n  .block0 > div .boxcontent,\n  .block1 > div .boxcontent {\n    display: block;\n    padding: 4rem;\n  }\n}\n.block0 .images,\n.block1 .images {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n@media only screen and (max-width:669px) {\n  .block0 .images,\n  .block1 .images {\n    display: none;\n  }\n}\n.block0 .images .skew,\n.block1 .images .skew {\n  position: absolute;\n}\n/*.block0{\n  padding:6rem 0 !important;\n}*/\n.carousel-top {\n  z-index: 1 !important;\n}\n.block0 {\n  overflow: visible;\n  z-index: 3;\n}\n@media only screen and (min-width:1921px) {\n  .block0 {\n    z-index: 0;\n  }\n}\n@media only screen and (max-width:669px) {\n  .block0 > div .boxcontent {\n    padding-top: 8rem;\n  }\n}\n.block0 .images .skew {\n  left: 50%;\n  width: 262.5rem;\n  height: 105rem;\n  width: 88.23529412rem;\n  top: -42rem;\n}\n@media only screen and (min-width:1921px) {\n  .block0 .images .skew {\n    top: -78rem;\n    width: 380rem;\n    height: 152rem;\n    width: 127.73109244rem;\n  }\n}\n.block1 .images .skew {\n  right: 50%;\n  width: 94.5rem;\n  height: 63rem;\n}\n@media only screen and (min-width:1921px) {\n  .block1 .images .skew {\n    width: 128rem;\n    height: 85rem;\n  }\n}\n.block1 .images img {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n}\n.block2 .boxcontent,\n.block4 .boxcontent {\n  padding: 12rem 0;\n}\n@media only screen and (max-width:669px) {\n  .block2 .boxcontent,\n  .block4 .boxcontent {\n    left: auto;\n    width: 100%;\n    padding: 4rem 0;\n    text-align: center;\n  }\n}\n.block2 .images-mobile,\n.block4 .images-mobile {\n  display: none;\n}\n@media only screen and (max-width:669px) {\n  .block2 .images-mobile,\n  .block4 .images-mobile {\n    display: block;\n  }\n}\n.block2 .images,\n.block4 .images {\n  position: relative;\n  height: 96rem;\n  z-index: 0;\n}\n@media only screen and (min-width:1921px) {\n  .block2 .images,\n  .block4 .images {\n    height: 120rem;\n  }\n}\n.block2 .images .titles,\n.block4 .images .titles {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 41.3rem;\n  display: table;\n}\n.block2 .images .titles > div,\n.block4 .images .titles > div {\n  width: 50%;\n  height: 100%;\n  position: relative;\n  text-align: center;\n  display: table-cell;\n  vertical-align: middle;\n}\n.block2 .images .titles > div h6,\n.block4 .images .titles > div h6 {\n  font-family: Roboto;\n  font-weight: 300;\n  font-size: 3.5rem;\n  text-transform: uppercase;\n  color: white;\n  display: inline-block;\n  text-align: left;\n  position: absolute;\n}\n@media only screen and (max-width:669px) {\n  .block2 .images .titles > div h6,\n  .block4 .images .titles > div h6 {\n    font-size: 2.8rem;\n  }\n}\n.block2 .images .titles > div h6.left,\n.block4 .images .titles > div h6.left {\n  top: 2.5rem;\n  right: 9rem;\n}\n@media only screen and (max-width:669px) {\n  .block2 .images .titles > div h6.left,\n  .block4 .images .titles > div h6.left {\n    right: 0;\n  }\n}\n.block2 .images .titles > div h6.right,\n.block4 .images .titles > div h6.right {\n  bottom: 2.5rem;\n  left: 9rem;\n}\n@media only screen and (max-width:669px) {\n  .block2 .images .titles > div h6.right,\n  .block4 .images .titles > div h6.right {\n    left: 0;\n  }\n}\n.block2 .images .titles > div h6 strong,\n.block4 .images .titles > div h6 strong {\n  font-weight: 900;\n}\n.block2 .images .titles > div h6 .yellow,\n.block4 .images .titles > div h6 .yellow {\n  display: inline-block;\n  background-color: #ddb321;\n  font-size: 3rem;\n  font-style: italic;\n  font-weight: lighter;\n  padding: 1rem;\n  position: relative;\n  -webkit-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -moz-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -ms-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -o-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n}\n@media only screen and (max-width:669px) {\n  .block2 .images .titles > div h6 .yellow,\n  .block4 .images .titles > div h6 .yellow {\n    font-size: 2.5rem;\n  }\n}\n.block2 .images .titles > div h6 .sub,\n.block4 .images .titles > div h6 .sub {\n  -webkit-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -moz-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -ms-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -o-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  overflow: hidden;\n}\n.block2 .images .titles > div h6 .sub:after,\n.block4 .images .titles > div h6 .sub:after {\n  -webkit-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -moz-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -ms-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -o-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  content: '\\e802';\n  font-family: 'fontello';\n  font-size: 2.2rem;\n  vertical-align: middle;\n  position: absolute;\n  right: -2rem;\n  font-style: normal;\n  top: 50%;\n  -webkit-transform: translateY(-50%);\n  -moz-transform: translateY(-50%);\n  -ms-transform: translateY(-50%);\n  -o-transform: translateY(-50%);\n}\n.block2 .images .titles > div h6:hover .sub,\n.block4 .images .titles > div h6:hover .sub {\n  margin-left: -3rem;\n  padding-right: 4rem;\n}\n.block2 .images .titles > div h6:hover .sub:after,\n.block4 .images .titles > div h6:hover .sub:after {\n  right: 1rem;\n}\n.block2 .images .skew-bottom,\n.block4 .images .skew-bottom {\n  width: 72rem;\n  height: 48rem;\n  top: 48rem;\n  right: calc(50% + 20.13839114825472rem);\n}\n@media only screen and (max-width:669px), only screen and (max-width:1024px) and (min-width:670px) {\n  .block2 .images .skew-bottom,\n  .block4 .images .skew-bottom {\n    display: none;\n  }\n}\n@media only screen and (min-width:1921px) {\n  .block2 .images .skew-bottom,\n  .block4 .images .skew-bottom {\n    width: 105rem;\n    height: 70rem;\n    top: 60rem;\n    right: calc(50% + 25.1729889353184rem);\n  }\n}\n.block2 .images .skew-left,\n.block4 .images .skew-left {\n  width: 120rem;\n  height: 48rem;\n  right: calc(50% - 20.13839114825472rem);\n}\n@media only screen and (min-width:1921px) {\n  .block2 .images .skew-left,\n  .block4 .images .skew-left {\n    width: 150rem;\n    height: 60rem;\n    right: calc(50% - 25.1729889353184rem);\n  }\n}\n.block2 .images .skew-right,\n.block4 .images .skew-right {\n  width: 120rem;\n  height: 48rem;\n  top: -6.7rem;\n  left: calc(50% - 14.516423619366945rem);\n}\n@media only screen and (min-width:1921px) {\n  .block2 .images .skew-right,\n  .block4 .images .skew-right {\n    width: 150rem;\n    height: 60rem;\n    left: calc(50% - 19.551021406430625rem);\n  }\n}\n.block2 .images .skew-top,\n.block4 .images .skew-top {\n  width: 72rem;\n  height: 48rem;\n  top: -54.7rem;\n  left: calc(50% + 25.760358677142495rem);\n}\n@media only screen and (min-width:1921px) {\n  .block2 .images .skew-top,\n  .block4 .images .skew-top {\n    width: 105rem;\n    height: 70rem;\n    top: -76.7rem;\n    left: calc(50% + 30.207586722382082rem);\n  }\n}\n@media only screen and (max-width:669px), only screen and (max-width:1024px) and (min-width:670px) {\n  .block2 .images .skew-top,\n  .block4 .images .skew-top {\n    display: none;\n  }\n}\n.block2 .thxqvello,\n.block4 .thxqvello {\n  margin-top: -48rem;\n  position: relative;\n  left: calc(50% - 14.516423619366945rem);\n  width: calc(50% + 14.516423619366945rem);\n}\n@media only screen and (min-width:1921px) {\n  .block2 .thxqvello,\n  .block4 .thxqvello {\n    margin-top: -55rem;\n  }\n}\n.block2 .thxqvello .boxcontent,\n.block4 .thxqvello .boxcontent {\n  padding: 0 10rem 6rem 0;\n  min-height: 40rem;\n}\n@media only screen and (max-width:669px) {\n  .block2 .thxqvello,\n  .block4 .thxqvello {\n    left: auto;\n    width: 100%;\n    padding: 4rem 0;\n  }\n  .block2 .thxqvello .boxcontent,\n  .block4 .thxqvello .boxcontent {\n    min-height: initial;\n    padding: 0;\n  }\n}\n@media only screen and (max-width:669px) {\n  .block2 .images {\n    display: none;\n  }\n}\n@media only screen and (max-width:669px) {\n  .block2 .thxqvello {\n    margin-top: auto;\n  }\n}\n@media only screen and (max-width:669px) {\n  .block4 h5 {\n    font-size: 3.5rem;\n  }\n}\n.block4 .images {\n  height: 60rem;\n}\n@media only screen and (max-width:669px) {\n  .block4 .images {\n    height: 69rem;\n  }\n  .block4 .images .skew-left,\n  .block4 .images .skew-right {\n    display: none;\n  }\n}\n.block4 .thxqvello .boxcontent .btn {\n  bottom: 4rem;\n  left: 50%;\n  -webkit-transform: translateX(-50%);\n  -moz-transform: translateX(-50%);\n  -ms-transform: translateX(-50%);\n  -o-transform: translateX(-50%);\n  position: absolute;\n}\n.block3 {\n  margin: 5rem 0;\n}\n@media only screen and (max-width:669px) {\n  .block3 {\n    margin: 0;\n  }\n}\n.block3 > div {\n  height: 48rem;\n}\n@media only screen and (min-width:1921px) {\n  .block3 > div {\n    height: 64rem;\n  }\n}\n.block3 > div:first-child {\n  padding-right: 1rem;\n}\n@media only screen and (max-width:669px) {\n  .block3 > div:first-child {\n    padding: 0;\n  }\n}\n.block3 > div .pic {\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center center;\n}\n.block5 {\n  margin-bottom: 6rem;\n  text-align: center;\n}\n@media only screen and (max-width:669px) {\n  .block5 {\n    margin-bottom: 0rem;\n  }\n}\n@media only screen and (max-width:669px) {\n  .block5 h5 {\n    font-size: 3.5rem;\n  }\n}\n.block5 .btnaside {\n  position: relative;\n  float: right;\n  margin-bottom: 8rem;\n}\n.block5 .columns > div {\n  position: relative;\n  /*      .borders{\n        display: none;\n\n        @media @tiny{\n          border-left:2px solid @yellow;\n          border-right:2px solid @yellow;\n          width:100%;\n          height:30rem;\n          position:absolute;\n          top:0;\n          left:0;\n        }\n      }*/\n  /*      &:first-child{\n        padding-left: 0;\n        padding-right: 2rem;\n      }\n\n      &:last-child{\n        padding-right: 0;\n        padding-left: 2rem;\n      }\n\n      @media @tiny{\n        padding: 0;\n\n        &:first-child{\n          padding: 0;\n        }\n\n        &:last-child{\n          padding: 0;\n        }\n      }*/\n}\n.block5 .columns > div:before {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 2px;\n  height: 32rem;\n  background-color: #ddb321;\n  display: none;\n}\n@media only screen and (max-width:669px) {\n  .block5 .columns > div:before {\n    display: block;\n  }\n}\n.block5 .columns > div:after {\n  content: '';\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 2px;\n  height: 32rem;\n  background-color: #ddb321;\n  display: none;\n}\n@media only screen and (max-width:669px) {\n  .block5 .columns > div:after {\n    display: block;\n  }\n}\n.block5 .columns > div .pic-holder {\n  display: table;\n  width: 100%;\n  height: 32rem;\n}\n.block5 .columns > div .pic {\n  height: 100%;\n  border: 2px solid #ddb321;\n  display: table-cell;\n  vertical-align: middle;\n  text-align: center;\n}\n@media only screen and (max-width:669px) {\n  .block5 .columns > div .pic {\n    border-left: none;\n    border-right: none;\n  }\n}\n.block5 .columns > div .pic img {\n  height: 80%;\n}\n.block5 .columns > div .bottom {\n  text-align: center;\n  top: -1rem;\n  position: relative;\n}\n.block5 .columns > div h5 {\n  font-size: 1.8rem;\n  background-color: white;\n  display: inline-block;\n  padding: 0 1rem;\n  text-transform: uppercase;\n  margin-bottom: 2rem;\n  font-weight: bold;\n  margin: 0 2rem;\n}\n.block5 .columns > div p {\n  padding: 0 1rem;\n}\n.blockaudio {\n  height: 52rem;\n  background-size: cover;\n  background-position: center top;\n  background-repeat: no-repeat;\n  text-align: center;\n  padding-top: 3rem;\n}\n.blockaudio h5 {\n  display: inline-block;\n  text-align: left;\n  color: white;\n}\n.blockaudio h5 .yellow {\n  display: inline-block;\n  background-color: #ddb321;\n  font-size: 3rem;\n  font-style: italic;\n  font-weight: lighter;\n  padding: 1rem;\n  position: relative;\n  color: white;\n  -webkit-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -moz-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -ms-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -o-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n}\n@media only screen and (max-width:669px) {\n  .blockaudio h5 .yellow {\n    font-size: 2.5rem;\n  }\n}\n.blocktechspec {\n  padding: 8rem 0;\n  background-repeat: no-repeat;\n  background-position: top center;\n}\n@media only screen and (min-width:1921px) {\n  .blocktechspec {\n    background-size: cover;\n  }\n}\n@media only screen and (max-width:669px) {\n  .blocktechspec {\n    padding: 6rem 0;\n  }\n}\n.blocktechspec h5 {\n  text-align: center;\n}\n.tabnav {\n  font-size: 1.6rem;\n  width: 100%;\n  position: relative;\n}\n.tabnav .icon-arrow-prev-tabs {\n  position: absolute;\n  left: -4rem;\n  top: .5rem;\n  font-size: 3rem;\n  line-height: 3rem;\n  display: inline-block;\n  cursor: pointer;\n  width: 3rem;\n}\n.tabnav .icon-arrow-prev-tabs:before {\n  margin: 0;\n}\n.tabnav .icon-arrow-prev-tabs.disabled {\n  opacity: 0;\n}\n.tabnav .icon-arrow-next-tabs {\n  position: absolute;\n  right: -4rem;\n  top: .5rem;\n  font-size: 3rem;\n  display: inline-block;\n  cursor: pointer;\n  width: 3rem;\n}\n.tabnav .icon-arrow-next-tabs:before {\n  margin: 0;\n}\n.tabnav .icon-arrow-next-tabs.disabled {\n  opacity: 0;\n}\n.tabnav .top {\n  text-transform: uppercase;\n  position: relative;\n  overflow: hidden;\n}\n.tabnav .top .icon-arrow-next {\n  position: absolute;\n  right: 0;\n  font-size: 3rem;\n}\n.tabnav .top .wrappertabs {\n  white-space: nowrap;\n  position: relative;\n  left: 0;\n}\n.tabnav .top span {\n  padding: 1rem 2rem;\n  display: inline-block;\n  font-weight: lighter;\n  font-family: Roboto;\n  cursor: pointer;\n  border-top: 3px solid transparent;\n  -webkit-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -moz-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -ms-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -o-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n}\n@media only screen and (max-width:669px) {\n  .tabnav .top span {\n    padding: .5rem 1rem;\n  }\n}\n.tabnav .top span.active {\n  background-color: #efefe8;\n  border-top: 3px solid #ddb321;\n}\n.tabnav .bottom {\n  background-color: #efefe8;\n  position: relative;\n  overflow: hidden;\n}\n.tabnav .bottom .icon-arrow-prev-mobile {\n  position: absolute;\n  left: 0;\n  font-size: 3rem;\n  top: 2.8rem;\n  display: none;\n  z-index: 1;\n}\n@media only screen and (max-width:669px), only screen and (max-width:1024px) and (min-width:670px) {\n  .tabnav .bottom .icon-arrow-prev-mobile {\n    display: block;\n  }\n}\n.tabnav .bottom .icon-arrow-next-mobile {\n  position: absolute;\n  right: 0;\n  font-size: 3rem;\n  top: 2.8rem;\n  display: none;\n  z-index: 1;\n}\n@media only screen and (max-width:669px), only screen and (max-width:1024px) and (min-width:670px) {\n  .tabnav .bottom .icon-arrow-next-mobile {\n    display: block;\n  }\n}\n@media only screen and (max-width:669px) {\n}\n.tabnav .bottom .wrapper {\n  position: relative;\n  left: 0;\n  top: 0;\n}\n.tabnav .bottom h5 {\n  font-size: 3rem;\n  margin-bottom: 3rem;\n}\n.tabnav .bottom ul {\n  position: relative;\n  display: inline-block;\n  vertical-align: top;\n  padding: 3rem;\n  list-style: none;\n}\n.tabnav .bottom ul li {\n  border-bottom: 1px solid #cbced1;\n  margin-bottom: 1rem;\n  padding: 1rem 0;\n  font-size: 1.4rem;\n}\n.tabnav .bottom ul li .label {\n  font-weight: bold;\n  display: inline-block;\n  white-space: pre;\n  text-transform: uppercase;\n}\n.tabnav .bottom ul li .data {\n  font-weight: lighter;\n  float: right;\n  max-width: 50%;\n  text-align: right;\n}\n.de-disclaimer {\n  margin-top: 2rem;\n  font-size: 1.4rem;\n  font-style: italic;\n  line-height: 2.2rem;\n}\n@media only screen and (max-width:669px) {\n  .de-disclaimer {\n    padding: 0 3rem;\n  }\n}\n/*.block7{\n\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: bottom center;\n  height:70rem;\n  position:relative;\n  margin-bottom:3px;\n\n  .title{\n    text-align:center;\n    h5{\n      display:inline-block;\n      text-align:left;\n    }\n  }\n  @media @biggie{\n    height:110rem;\n    background-size: cover;\n    background-position: center center;\n  }\n\n  @media @huge,@humongous{\n    height:90rem;\n    background-size: cover;\n  }\n\n  @media @small{\n    height:65rem;\n  }\n\n  @media @tiny{\n    height:40rem;\n    text-align:center;\n\n    h5{\n      margin-bottom: 6rem;\n    }\n  }\n\n  .subblock{\n    text-align:left;\n\n    @media @tiny{\n      text-align: center;\n      padding:0 4rem;\n    }\n\n    h6{\n      text-transform:uppercase;\n      font-weight: bold;\n      font-size:1.6rem;\n      margin-bottom:1rem;\n    }\n\n    p{\n      font-size:1.6rem;\n    }\n  }\n\n  .buttons{\n    width:100%;\n    text-align:center;\n    bottom:8rem;\n    position:absolute;\n\n    @media @small{\n      bottom:5rem;\n    }\n\n    @media @tiny{\n      bottom:2rem;\n    }\n  }\n}*/\n.block7 {\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center center;\n  height: 70rem;\n  height: auto;\n  position: relative;\n  margin-bottom: 3px;\n  /*\n  @media @biggie{\n    height:110rem;\n    height:auto;\n    background-size: cover;\n    background-position: center center;\n  }\n\n  @media @huge,@humongous{\n    height:90rem;\n    height:auto;\n    background-size: cover;\n  }\n\n  @media @small{\n    height:65rem;\n    height:auto;\n  }\n\n  @media @tiny{\n    height:40rem;\n    height:auto;\n    text-align:center;\n\n    h5{\n      margin-bottom: 6rem;\n    }\n  }*/\n}\n@media only screen and (max-width:669px) {\n  .block7 {\n    padding-top: 4rem !important;\n  }\n  .block7 img {\n    padding-top: 5rem;\n  }\n}\n.block7 img {\n  width: 100%;\n}\n.block7 .title {\n  text-align: center;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n}\n.block7 .title h2 {\n  margin-bottom: 1.5rem;\n}\n.block7 .title h5 {\n  display: inline-block;\n  text-align: left;\n}\n.block7 .subblock {\n  text-align: left;\n}\n@media only screen and (max-width:669px) {\n  .block7 .subblock {\n    text-align: center;\n    padding: 0 4rem;\n  }\n}\n.block7 .subblock h6 {\n  text-transform: uppercase;\n  font-weight: bold;\n  font-size: 1.6rem;\n  margin-bottom: 1rem;\n}\n.block7 .subblock p {\n  font-size: 1.6rem;\n}\n.block7 .buttons {\n  width: 100%;\n  text-align: center;\n  position: relative;\n}\n.block7 .buttons .btn {\n  margin: 0 !important;\n}\n", ""]);

/***/ }),
/* 4 */
/***/ (function(module, exports) {

	module.exports = function() {
		var list = [];
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
		return list;
	}

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0;

	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}

		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();

		var styles = listToStyles(list);
		addStylesToDom(styles, options);

		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}

	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}

	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}

	function createStyleElement() {
		var styleElement = document.createElement("style");
		var head = getHeadElement();
		styleElement.type = "text/css";
		head.appendChild(styleElement);
		return styleElement;
	}

	function createLinkElement() {
		var linkElement = document.createElement("link");
		var head = getHeadElement();
		linkElement.rel = "stylesheet";
		head.appendChild(linkElement);
		return linkElement;
	}

	function addStyle(obj, options) {
		var styleElement, update, remove;

		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement());
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement();
			update = updateLink.bind(null, styleElement);
			remove = function() {
				styleElement.parentNode.removeChild(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement();
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				styleElement.parentNode.removeChild(styleElement);
			};
		}

		update(obj);

		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}

	var replaceText = (function () {
		var textStore = [];

		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();

	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;

		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}

	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;
		var sourceMap = obj.sourceMap;

		if(media) {
			styleElement.setAttribute("media", media)
		}

		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}

	function updateLink(linkElement, obj) {
		var css = obj.css;
		var media = obj.media;
		var sourceMap = obj.sourceMap;

		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}

		var blob = new Blob([css], { type: "text/css" });

		var oldSrc = linkElement.href;

		linkElement.href = URL.createObjectURL(blob);

		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(7);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(5)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/index.js!./carousel-top.less", function() {
				var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/index.js!./carousel-top.less");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(4)();
	exports.push([module.id, ".carousel-top {\n  min-height: 70rem;\n  height: 70vh;\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  background-color: black;\n}\n.carousel-top .seo {\n  display: block;\n  color: red !important;\n  transform: translateY(-200px);\n}\n@media only screen and (max-width:669px) {\n  .carousel-top {\n    height: 100vh;\n  }\n}\n.carousel-top .arrowdown {\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  text-align: center;\n  overflow: hidden;\n}\n.carousel-top .arrowdown > div {\n  font-size: 8rem;\n  color: #ddb321;\n  transform-origin: center center;\n  -webkit-transform: rotate(90deg);\n  -moz-transform: rotate(90deg);\n  -ms-transform: rotate(90deg);\n  -o-transform: rotate(90deg);\n  height: 100%;\n  display: inline-block;\n}\n@media only screen and (max-width:669px) {\n}\n@media only screen and (max-width:669px) {\n}\n.carousel-top .wrapper .mobile-item {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center center;\n  opacity: 0;\n}\n.carousel-top video {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: none;\n}\n.carousel-top .fade {\n  opacity: .3;\n}\n.carousel-top .btn {\n  position: absolute;\n  bottom: 8rem;\n  left: calc(8.3% + 3rem);\n}\n@media only screen and (max-width:669px) {\n  .carousel-top .btn {\n    left: 3rem;\n    bottom: 40%;\n  }\n}\n.carousel-top .boxcontent {\n  padding-top: 10rem;\n  left: calc(8.3% + 3rem);\n  position: absolute;\n  top: 7rem;\n  top: 6rem;\n  width: calc(91.7% - 3rem);\n}\n@media only screen and (max-width:669px) {\n  .carousel-top .boxcontent {\n    left: 3rem;\n    top: 2rem;\n  }\n}\n.carousel-top .boxcontent p {\n  color: white;\n  font-size: 1.8rem;\n  font-weight: bold;\n  width: 44rem;\n  margin-top: 5rem;\n}\n@media only screen and (max-width:1599px) and (min-width:1440px) {\n  .carousel-top .boxcontent p {\n    font-size: 1.6rem;\n    margin-top: 4rem;\n  }\n}\n@media only screen and (max-width:1439px) and (min-width:1200px) {\n  .carousel-top .boxcontent p {\n    font-size: 1.4rem;\n    line-height: 1.8rem;\n    margin-top: 3rem;\n  }\n}\n@media only screen and (max-width:1199px) and (min-width:1025px) {\n  .carousel-top .boxcontent p {\n    font-size: 1.4rem;\n    line-height: 1.8rem;\n    margin-top: 3rem;\n  }\n}\n@media only screen and (max-width:1024px) and (min-width:670px) {\n  .carousel-top .boxcontent p {\n    font-size: 1.4rem;\n    line-height: 1.8rem;\n    margin-top: 2rem;\n  }\n}\n@media only screen and (max-width:669px) {\n  .carousel-top .boxcontent p {\n    width: 60%;\n    font-size: 1.3rem;\n    line-height: 1.6rem;\n    margin-top: 1rem;\n  }\n}\n.carousel-top.home,\n.carousel-top.model {\n  height: 100vh;\n  /*    .boxcontent{\n      padding-top:0;\n      position:absolute;\n      //left:5rem;\n      top:28%;\n\n      @media @large {\n        top:25%;\n      }\n      @media @midlarge {\n        top:23%;\n      }\n\n      @media @medium {\n        top:21%;\n      }\n\n      @media @small {\n        top:20%;\n      }\n\n      @media @tiny{\n        top:20%;\n      }\n    }*/\n}\n.carousel-top h1 {\n  position: absolute;\n}\n.carousel-top .h2,\n.carousel-top h1 {\n  font-family: Roboto;\n  color: white;\n  font-size: 6rem;\n  text-transform: uppercase;\n}\n@media only screen and (max-width:1799px) and (min-width:1600px) {\n  .carousel-top .h2,\n  .carousel-top h1 {\n    font-size: 5.5rem;\n  }\n}\n@media only screen and (max-width:1599px) and (min-width:1440px) {\n  .carousel-top .h2,\n  .carousel-top h1 {\n    font-size: 5rem;\n  }\n}\n@media only screen and (max-width:1439px) and (min-width:1200px) {\n  .carousel-top .h2,\n  .carousel-top h1 {\n    font-size: 4rem;\n  }\n}\n@media only screen and (max-width:1199px) and (min-width:1025px) {\n  .carousel-top .h2,\n  .carousel-top h1 {\n    font-size: 4rem;\n  }\n}\n@media only screen and (max-width:1024px) and (min-width:670px) {\n  .carousel-top .h2,\n  .carousel-top h1 {\n    font-size: 3.5rem;\n  }\n}\n@media only screen and (max-width: 768px) and (min-width: 670px) {\n  .carousel-top .h2,\n  .carousel-top h1 {\n    font-size: 5rem;\n  }\n}\n@media only screen and (max-width:669px) {\n  .carousel-top .h2,\n  .carousel-top h1 {\n    font-size: 3.5rem;\n  }\n}\n.carousel-top .h2 span,\n.carousel-top h1 span {\n  font-weight: lighter;\n}\n.carousel-top .h2 span.subtitle,\n.carousel-top h1 span.subtitle {\n  display: block;\n  font-style: italic;\n  font-size: 3.7rem;\n  color: black;\n  background-color: white;\n  display: inline-block;\n  padding: 1rem;\n  position: relative;\n  text-shadow: none;\n  white-space: pre;\n  visibility: hidden;\n}\n@media only screen and (max-width:1799px) and (min-width:1600px) {\n  .carousel-top .h2 span.subtitle,\n  .carousel-top h1 span.subtitle {\n    font-size: 3.5rem;\n  }\n}\n@media only screen and (max-width:1599px) and (min-width:1440px) {\n  .carousel-top .h2 span.subtitle,\n  .carousel-top h1 span.subtitle {\n    font-size: 3.4rem;\n  }\n}\n@media only screen and (max-width:1439px) and (min-width:1200px) {\n  .carousel-top .h2 span.subtitle,\n  .carousel-top h1 span.subtitle {\n    font-size: 3rem;\n    padding: .5rem;\n  }\n}\n@media only screen and (max-width:1199px) and (min-width:1025px) {\n  .carousel-top .h2 span.subtitle,\n  .carousel-top h1 span.subtitle {\n    font-size: 3rem;\n    padding: .5rem;\n  }\n}\n@media only screen and (max-width:1024px) and (min-width:670px) {\n  .carousel-top .h2 span.subtitle,\n  .carousel-top h1 span.subtitle {\n    font-size: 2.7rem;\n    padding: .5rem;\n  }\n}\n@media only screen and (max-width: 768px) and (min-width: 670px) {\n  .carousel-top .h2 span.subtitle,\n  .carousel-top h1 span.subtitle {\n    font-size: 3.5rem;\n    padding: .5rem;\n    max-width: 80%;\n    white-space: normal;\n  }\n}\n@media only screen and (max-width:669px) {\n  .carousel-top .h2 span.subtitle,\n  .carousel-top h1 span.subtitle {\n    font-size: 2.7rem;\n    padding: .5rem;\n    max-width: 100%;\n    white-space: normal;\n  }\n}\n.carousel-top .h2.centered,\n.carousel-top h1.centered {\n  text-align: center;\n  padding-top: 0;\n  position: relative;\n  left: calc(-8.3% - 3rem);\n  width: calc(100% + 8.3% + 3rem) !important;\n}\n@media only screen and (max-width:669px) {\n  .carousel-top .h2.centered,\n  .carousel-top h1.centered {\n    left: auto;\n    width: auto !important;\n  }\n}\n.carousel-top .h2.centered .subtitle,\n.carousel-top h1.centered .subtitle {\n  visibility: visible !important;\n}\n.carousel-top svg {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n}\n.carousel-top .carousel-top-nav {\n  list-style: none;\n  position: absolute;\n  bottom: 2rem;\n  left: 2rem;\n  z-index: 10;\n}\n@media only screen and (max-width:669px) {\n  .carousel-top .carousel-top-nav {\n    display: none;\n  }\n}\n.carousel-top .carousel-top-nav li {\n  position: relative;\n  color: red;\n  display: inline-block;\n  width: 5.5rem;\n  height: 4rem;\n  border-bottom: 2px solid;\n  border-color: white;\n  margin-right: 1rem;\n  cursor: pointer;\n  -webkit-transition: all 500ms cubic-bezier(0, 0, 0.58, 1);\n  -moz-transition: all 500ms cubic-bezier(0, 0, 0.58, 1);\n  -ms-transition: all 500ms cubic-bezier(0, 0, 0.58, 1);\n  -o-transition: all 500ms cubic-bezier(0, 0, 0.58, 1);\n  /* ease-out */\n}\n.carousel-top .carousel-top-nav li.active {\n  border-color: #ddb321;\n}\n", ""]);

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(9);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(5)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/index.js!./carousel-news.less", function() {
				var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/index.js!./carousel-news.less");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(4)();
	exports.push([module.id, ".carousel-news {\n  position: relative;\n  margin-bottom: 7rem;\n  padding-top: 7rem;\n}\n.carousel-news .btn-arrow {\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n  -moz-transform: translate(-50%, -50%);\n  -ms-transform: translate(-50%, -50%);\n  -o-transform: translate(-50%, -50%);\n  left: 50%;\n}\n.carousel-news .btn-arrow {\n  -webkit-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -moz-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -ms-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -o-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  /* easeInOutQuad */\n}\n.carousel-news .btn-arrow:hover {\n  color: #ddb321;\n}\n.carousel-news a.more {\n  padding: 1rem 5.5rem 1rem 2rem;\n  margin-top: 2rem;\n  background-color: transparent;\n  font-weight: lighter;\n  font-size: 1.8rem;\n  text-transform: uppercase;\n  text-decoration: none;\n  position: relative;\n  color: black;\n  border: 1px solid black;\n  left: 50%;\n  -webkit-transform: translateX(-50%);\n  -moz-transform: translateX(-50%);\n  -ms-transform: translateX(-50%);\n  -o-transform: translateX(-50%);\n  display: none;\n}\n@media only screen and (max-width:669px) {\n  .carousel-news a.more {\n    display: inline-block;\n  }\n}\n.carousel-news a.more:after {\n  content: '\\e810';\n  font-family: 'fontello';\n  position: absolute;\n  right: 1rem;\n  top: 50%;\n  -webkit-transform: translateY(-50%);\n  -moz-transform: translateY(-50%);\n  -ms-transform: translateY(-50%);\n  -o-transform: translateY(-50%);\n  font-size: 5rem;\n}\n.carousel-news .carousel-news-stripe {\n  position: relative;\n}\n.carousel-news .carousel-news-stripe .top {\n  width: calc(100% - 20rem);\n  width: 100%;\n  /*      @media @tiny{\n        width: ~\"calc(100% - 10rem)\";\n      }*/\n  position: relative;\n  overflow: hidden;\n}\n.carousel-news .carousel-news-stripe .top .wrapper {\n  position: relative;\n}\n.carousel-news .carousel-news-stripe .top .wrapper .item {\n  display: inline-block;\n  text-align: center;\n  position: relative;\n  vertical-align: top;\n  text-decoration: none;\n  color: black;\n}\n.carousel-news .carousel-news-stripe .top .wrapper .item:hover .holder .fade {\n  opacity: 1;\n}\n.carousel-news .carousel-news-stripe .top .wrapper .item .holder {\n  width: calc(100% - 4rem);\n}\n@media only screen and (max-width:669px) {\n  .carousel-news .carousel-news-stripe .top .wrapper .item .holder {\n    width: 100%;\n  }\n}\n.carousel-news .carousel-news-stripe .top .wrapper .item p {\n  font-size: 1.6rem;\n  font-family: Open Sans;\n  text-transform: uppercase;\n  position: relative;\n  text-align: left;\n  width: 100%;\n}\n.carousel-news .carousel-news-stripe .top .wrapper .item .pic {\n  width: 100%;\n  position: relative;\n  margin-bottom: 2rem;\n  height: auto;\n}\n.carousel-news .carousel-news-stripe .top .wrapper .item .pic .cat {\n  font-style: italic;\n  color: white;\n  padding: .5rem;\n  background-color: #ddb321;\n  position: absolute;\n  top: 0;\n  left: 0;\n  text-transform: uppercase;\n  font-size: 1.5rem;\n}\n.carousel-news .carousel-news-stripe .top .wrapper .item .pic .cat.pagetextcontrast1 {\n  background-color: black;\n  font-weight: bold;\n}\n.carousel-news .carousel-news-stripe .top .wrapper .item .pic .date {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n  background-color: #ddb321;\n  color: white;\n  padding: .5rem;\n  text-align: center;\n  display: none !important;\n}\n.carousel-news .carousel-news-stripe .top .wrapper .item .pic .date .monthday {\n  font-size: 2.4rem;\n  display: block;\n}\n.carousel-news .carousel-news-stripe .top .wrapper .item .pic .date .month {\n  font-size: 1.6rem;\n  display: block;\n  text-transform: uppercase;\n}\n.carousel-news .carousel-news-stripe .top .wrapper .item .pic .fade {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.6);\n  text-align: center;\n  opacity: 0;\n  -webkit-transition: all 400ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -moz-transition: all 400ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -ms-transition: all 400ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -o-transition: all 400ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n}\n.carousel-news .carousel-news-stripe .top .wrapper .item .pic .fade span {\n  color: white;\n  font-size: 1.5rem;\n  text-transform: uppercase;\n  position: relative;\n  display: inline-block;\n  top: 50%;\n  padding-right: 2.5rem;\n  -webkit-transform: translateY(-50%);\n  -moz-transform: translateY(-50%);\n  -ms-transform: translateY(-50%);\n  -o-transform: translateY(-50%);\n}\n.carousel-news .carousel-news-stripe .top .wrapper .item .pic .fade span:after {\n  content: '\\e810';\n  font-family: 'fontello';\n  position: absolute;\n  right: 0;\n  top: 50%;\n  -webkit-transform: translateY(-50%);\n  -moz-transform: translateY(-50%);\n  -ms-transform: translateY(-50%);\n  -o-transform: translateY(-50%);\n  font-size: 3rem;\n}\n.carousel-news .carousel-news-stripe .top .wrapper .item .pic img {\n  width: 100%;\n  position: relative;\n}\n", ""]);

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(11);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(5)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/index.js!./carousel-techspec.less", function() {
				var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/index.js!./carousel-techspec.less");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(4)();
	exports.push([module.id, ".carousel-techspec {\n  position: relative;\n}\n.carousel-techspec .btn-arrow {\n  position: absolute;\n  top: 15rem;\n  -webkit-transform: translateY(-50%);\n  -moz-transform: translateY(-50%);\n  -ms-transform: translateY(-50%);\n  -o-transform: translateY(-50%);\n}\n.carousel-techspec .btn-arrow.prev {\n  left: -5rem;\n}\n.carousel-techspec .btn-arrow.next {\n  right: -5rem;\n}\n.carousel-techspec .btn-arrow {\n  -webkit-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -moz-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -ms-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -o-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  /* easeInOutQuad */\n}\n.carousel-techspec .btn-arrow:hover {\n  color: #ddb321;\n}\n@media only screen and (max-width:669px) {\n  .carousel-techspec {\n    padding: 0 3rem;\n  }\n  .carousel-techspec .btn-arrow.prev {\n    left: -3rem;\n  }\n  .carousel-techspec .btn-arrow.next {\n    right: -3rem;\n  }\n}\n.carousel-techspec .top {\n  position: relative;\n  overflow: hidden;\n  width: 100%;\n}\n.carousel-techspec .wrapper {\n  width: 100%;\n  position: relative;\n}\n.carousel-techspec .wrapper .item {\n  width: 20%;\n  display: inline-block;\n  vertical-align: top;\n  -webkit-transition: all 1000ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -moz-transition: all 1000ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -ms-transition: all 1000ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -o-transition: all 1000ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  /* easeInOutQuad */\n}\n.carousel-techspec .wrapper .item.center {\n  padding: 0 .5rem;\n}\n.carousel-techspec .wrapper .item.left {\n  padding-right: 1rem;\n}\n.carousel-techspec .wrapper .item.right {\n  padding-left: 1rem;\n}\n", ""]);

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(13);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(5)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/index.js!./aside.less", function() {
				var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/index.js!./aside.less");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(4)();
	exports.push([module.id, "aside input,\naside textarea {\n  -webkit-user-select: text;\n  -khtml-user-select: text;\n  -moz-user-select: text;\n  -ms-user-select: text;\n  user-select: text;\n}\naside .flatpickr-month > span {\n  vertical-align: top;\n}\naside .flatpickr-month > span.flatpickr-prev-month,\naside .flatpickr-month > span.flatpickr-next-month {\n  position: absolute;\n  top: 50%;\n  -webkit-transform: translateY(-50%);\n  -moz-transform: translateY(-50%);\n  -ms-transform: translateY(-50%);\n  -o-transform: translateY(-50%);\n}\naside .flatpickr-month > span.flatpickr-prev-month {\n  left: 0;\n}\naside .flatpickr-month > span.flatpickr-next-month {\n  right: 0;\n}\naside .flatpickr-calendar:after,\naside .flatpickr-calendar:before {\n  display: none !important;\n}\naside .flatpickr-weekdays span,\naside .flatpickr-days span,\naside .flatpickr-current-month span {\n  font-family: Open Sans;\n}\naside .ps-container > .ps-scrollbar-y-rail {\n  opacity: 1 !important;\n  width: .5rem;\n  background-color: #ddd !important;\n}\naside .ps-container > .ps-scrollbar-y-rail .ps-scrollbar-y {\n  background-color: #ddd;\n  background-color: #ddb321;\n  width: .5rem;\n  opacity: 1 !important;\n}\naside .ps-container > .ps-scrollbar-y-rail:hover {\n  background-color: #ddd !important;\n}\naside .ps-container:hover.ps-in-scrolling.ps-y > .ps-scrollbar-y-rail {\n  background-color: #eee;\n  opacity: 0.9;\n}\naside .ps-container.ps-in-scrolling.ps-y > .ps-scrollbar-y-rail {\n  background-color: #eee;\n  opacity: 0.9;\n}\naside.classics .info,\naside.restoration .info {\n  margin-left: -1rem !important;\n}\n@media only screen and (max-width:1024px) and (min-width:670px), only screen and (max-width:669px) {\n  aside.classics .info p,\n  aside.restoration .info p {\n    margin-left: -3rem;\n  }\n}\naside.financial .select-holder {\n  position: relative;\n  height: 3rem;\n  display: inline-block;\n  border-bottom: 1px solid black;\n  width: 16rem;\n  margin-bottom: 3rem;\n}\naside.financial .select-holder:after {\n  content: '\\e805';\n  position: absolute;\n  font-family: 'fontello';\n  font-size: 2.3rem;\n  color: black;\n  right: 0;\n  line-height: 3rem;\n  transform-origin: center center;\n  transform: rotate(90deg);\n}\naside.financial .select-holder .placeholder {\n  position: relative;\n  font-size: 1.5rem;\n  line-height: 3rem;\n  height: 100%;\n  padding-left: 1rem;\n  text-transform: uppercase;\n}\naside.financial .select-holder select {\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  font-size: 1.5rem;\n}\naside.museum .priceblock {\n  font-family: Roboto;\n}\naside.museum .priceblock > div {\n  font-size: 1.8rem;\n  line-height: 2.2rem;\n}\naside.museum .priceblock h6 {\n  color: #ddb321;\n  margin-bottom: 1rem !important;\n}\naside.museum .priceblock .price {\n  font-weight: normal;\n  font-size: 2.8rem;\n}\naside.museum .priceblock p {\n  font-style: italic;\n  font-size: 1.4rem;\n}\naside.museum .notice-reservation {\n  margin-bottom: 4rem;\n}\naside.museum .notice-reservation h5 {\n  border-bottom: 1px solid black;\n  text-transform: uppercase;\n  font-size: 1.8rem;\n  padding-left: 2rem;\n  padding-bottom: 1rem;\n}\naside.museum .notice-reservation p {\n  font-style: italic;\n  margin-bottom: 3rem !important;\n}\naside.museum .notice-reservation a.btn {\n  margin-bottom: 5rem;\n}\naside.museum .closures h5 {\n  font-weight: bold;\n  font-size: 2rem;\n}\naside.museum .closures table {\n  width: 100%;\n  text-transform: uppercase;\n}\naside.museum .closures table .month {\n  width: 12rem;\n  vertical-align: bottom;\n  font-family: Open Sans;\n}\naside.museum .closures table span {\n  display: inline-block;\n  margin-right: .5rem;\n  background-color: #dedede;\n  padding: .8rem;\n  font-family: Open Sans;\n}\naside.museum .hours {\n  margin-bottom: 5rem !important;\n  font-family: Open Sans;\n}\naside.museum .hours h5 {\n  font-weight: bold;\n  font-size: 2rem;\n}\naside.museum .hours table {\n  width: 70%;\n}\naside.museum .hours table tr {\n  text-transform: uppercase;\n}\naside.museum .hours table tr:nth-child(odd) {\n  background-color: #dedede;\n}\naside.museum .availability {\n  width: 100%;\n  padding-bottom: 1rem;\n  font-size: 1.6rem;\n  text-align: center;\n  font-weight: bold;\n  text-transform: uppercase;\n  margin-bottom: 2rem;\n  border-bottom: 1px solid black;\n}\naside.museum .availability.highlighted {\n  color: red;\n  border-color: red;\n}\naside.museum .calendar .flatpickr-calendar {\n  width: 100%;\n}\naside.museum .calendar-slots {\n  margin-bottom: 3rem;\n}\naside.museum .calendar-slots .slots > span {\n  display: inline-block;\n  width: 20%;\n  font-weight: normal;\n  font-family: Open Sans;\n  cursor: pointer;\n}\naside.museum .calendar-slots .slots > span.disabled {\n  opacity: .5;\n  cursor: default;\n}\naside.museum .calendar-slots .slots > span.disabled:hover {\n  background-color: transparent;\n}\naside.museum .calendar-slots .slots > span:hover {\n  background-color: #e0e0e0;\n}\naside.museum .calendar-slots .slots > span.active {\n  cursor: default;\n  background-color: #ddb321;\n  color: white;\n}\naside.museum .calendar-slots .slots > span .label {\n  display: block;\n  text-align: center;\n  padding: 1rem 0;\n}\naside.museum .tabs.twochoices li {\n  width: 50%;\n}\naside.museum .tabs li {\n  display: inline-block;\n  width: 33.3%;\n  text-align: center;\n  opacity: .3;\n  cursor: pointer;\n}\naside.museum .tabs li.active {\n  opacity: 1;\n}\naside.museum .tabs li .sub {\n  display: block;\n  font-size: 1rem;\n  padding-top: 1rem;\n}\naside.museum .tabs li .icon {\n  display: block;\n  width: 100%;\n  text-align: center;\n  font-size: 5rem;\n}\naside section {\n  overflow: initial;\n  position: relative;\n}\naside .tt {\n  z-index: 2;\n  color: #4c4c4c;\n  font-style: italic;\n  font-weight: lighter;\n  background-color: #dad9d9;\n  padding: 1.2rem;\n  position: absolute;\n  top: 0;\n  left: 3rem;\n  visibility: visible;\n  opacity: 1;\n  -webkit-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -moz-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -ms-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -o-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n}\naside .tt p {\n  font-size: 1.2rem;\n  line-height: 1.5rem;\n}\naside .tt.inviso {\n  visibility: hidden;\n  opacity: 0;\n}\n@media only screen and (max-width:1024px) and (min-width:670px), only screen and (max-width:669px) {\n  aside .tt {\n    position: relative;\n    width: calc(100% - 3rem);\n  }\n  aside .tt.inviso {\n    visibility: visible;\n    opacity: 1;\n  }\n}\naside .privacy ul {\n  margin-left: 2rem;\n}\naside .privacy .highlighted,\naside .privacy .highlighted > li > label {\n  color: red;\n  border-color: red;\n}\naside input[type=\"checkbox\"] {\n  margin-left: 1rem;\n}\naside input[type=\"radio\"] {\n  display: none;\n}\naside input[type=\"radio\"] + label {\n  display: inline-block;\n}\naside input[type=\"radio\"] + label:before {\n  content: '';\n  display: inline-block;\n  width: 3.2rem;\n  height: 3.2rem;\n  background: url('/themes/custom/lambo/img/base/radio-off.png') no-repeat center;\n  vertical-align: middle;\n}\naside input[type=\"radio\"]:checked + label:before {\n  content: '';\n  background: url('/themes/custom/lambo/img/base/radio-on.png') no-repeat center;\n}\naside .field-privacy1 label {\n  display: inline-block !important;\n  text-transform: none;\n}\naside .holder .btnback {\n  font-size: 1.2rem;\n  color: black;\n  font-weight: lighter;\n  text-transform: uppercase;\n  display: inline-block;\n  background-color: transparent;\n  border: none;\n  position: absolute;\n  top: 3.7rem;\n  left: 8rem;\n  padding-left: 2rem;\n  -webkit-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -moz-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -ms-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -o-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  /* easeInOutQuad */\n}\naside .holder .btnback:hover {\n  color: #ddb321;\n}\naside .holder .btnback:before {\n  content: '\\e805';\n  transform-origin: center center ;\n  transform: scaleX(-1);\n  font-family: 'fontello';\n  position: absolute;\n  left: .5rem;\n  font-size: 1.8rem;\n  line-height: 1.2rem;\n}\naside .holder .wrapper {\n  position: relative;\n  overflow-y: hidden;\n}\naside .holder .wrapper .content {\n  /*        img{\n          display:block;\n          width:90%;\n          left:5%;\n          position: relative;\n          margin:3rem 0;\n        }*/\n}\naside .holder .wrapper .content a:not(.btn) {\n  color: #ddb321;\n  font-weight: bold;\n}\naside .holder .wrapper .content .btn-holder {\n  margin-top: 4rem;\n  text-align: center;\n}\naside .holder .wrapper .notice {\n  padding: 1.5rem;\n  background-color: #ddb321;\n  color: white;\n  font-size: 1.8rem;\n  line-height: 2.2rem;\n  font-weight: bold;\n  text-transform: uppercase;\n  margin-bottom: 3rem;\n  font-family: Open Sans;\n}\naside .holder .wrapper .notice .note {\n  font-weight: lighter;\n  font-size: 1.4rem;\n  font-style: italic;\n  display: block;\n}\naside .holder .wrapper ul.steps {\n  width: 100%;\n  position: relative;\n  margin-bottom: 4rem;\n}\naside .holder .wrapper ul.steps:before {\n  content: '';\n  height: 1px;\n  background-color: #ddb321;\n  opacity: .3;\n  position: absolute;\n  top: 50%;\n  z-index: 1;\n  width: 100%;\n}\naside .holder .wrapper ul.steps li {\n  display: inline-block;\n  width: 33.3%;\n  position: relative;\n  z-index: 2;\n}\naside .holder .wrapper ul.steps li.active span {\n  opacity: 1;\n}\naside .holder .wrapper ul.steps li div {\n  padding: 2rem;\n  background-color: #eee;\n  position: relative;\n  display: inline-block;\n}\naside .holder .wrapper ul.steps li div > span {\n  color: white;\n  background-color: #ddb321;\n  padding: 1rem;\n  font-size: 1.2rem;\n  text-transform: uppercase;\n  position: relative;\n  display: inline-block;\n  opacity: .5;\n  -webkit-transition: all 500ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -moz-transition: all 500ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -ms-transition: all 500ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -o-transition: all 500ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  /* easeInOutQuad */\n}\naside .holder .wrapper ul.steps li div > span span {\n  font-size: 1.4rem;\n  background-color: transparent;\n  padding: 0;\n}\naside .holder .wrapper ul.steps li:nth-child(2) {\n  text-align: center;\n}\naside .holder .wrapper ul.steps li:nth-child(3) {\n  text-align: right;\n}\naside .holder .wrapper .mandatory {\n  display: inline-block;\n  position: relative;\n  width: 3rem;\n  height: 100%;\n  background-image: url('/themes/custom/lambo/img/base/required.png');\n  background-repeat: no-repeat;\n  background-position: center;\n}\naside .holder .wrapper .mandatory.hidden {\n  visibility: hidden;\n}\naside .holder .wrapper .step {\n  color: black;\n  font-weight: lighter;\n  font-size: 1.4rem;\n  position: relative;\n}\naside .holder .wrapper .step button.submit,\naside .holder .wrapper .step button.btnform {\n  background-color: #dfb400;\n  position: relative;\n  opacity: .5;\n  cursor: default;\n  color: white;\n  border: none;\n  padding-right: 3rem;\n  padding-left: 1rem;\n  text-transform: uppercase;\n  font-size: 1.5rem;\n  height: 4rem;\n  font-family: Roboto;\n  -webkit-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -moz-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -ms-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -o-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  opacity: 1;\n  cursor: pointer;\n}\naside .holder .wrapper .step button.submit.disabled,\naside .holder .wrapper .step button.btnform.disabled {\n  opacity: .5;\n  cursor: default;\n}\naside .holder .wrapper .step button.submit:before,\naside .holder .wrapper .step button.btnform:before {\n  content: '\\e823';\n  font-family: 'fontello';\n  position: absolute;\n  font-size: 2.4rem;\n  right: .5rem;\n  top: .1rem;\n  line-height: 4rem;\n}\naside .holder .wrapper .step button.submit > span.label,\naside .holder .wrapper .step button.btnform > span.label {\n  display: block;\n  text-align: left;\n  lineheight: 2rem;\n}\naside .holder .wrapper .step button.submit > span.label.default,\naside .holder .wrapper .step button.btnform > span.label.default {\n  display: block;\n}\naside .holder .wrapper .step button.submit > span.label.valid,\naside .holder .wrapper .step button.btnform > span.label.valid,\naside .holder .wrapper .step button.submit > span.label.notvalid,\naside .holder .wrapper .step button.btnform > span.label.notvalid,\naside .holder .wrapper .step button.submit > span.label.sending,\naside .holder .wrapper .step button.btnform > span.label.sending,\naside .holder .wrapper .step button.submit > span.label.sent,\naside .holder .wrapper .step button.btnform > span.label.sent,\naside .holder .wrapper .step button.submit > span.label.check,\naside .holder .wrapper .step button.btnform > span.label.check {\n  display: none;\n}\naside .holder .wrapper .step button.submit.check,\naside .holder .wrapper .step button.btnform.check {\n  background-color: #e8543c;\n  opacity: 1;\n}\naside .holder .wrapper .step button.submit.check .label.default,\naside .holder .wrapper .step button.btnform.check .label.default {\n  display: none;\n}\naside .holder .wrapper .step button.submit.check .label.check,\naside .holder .wrapper .step button.btnform.check .label.check {\n  display: block;\n}\naside .holder .wrapper .step button.submit.sending,\naside .holder .wrapper .step button.btnform.sending {\n  opacity: 1;\n  cursor: default;\n}\naside .holder .wrapper .step button.submit.sending .label.default,\naside .holder .wrapper .step button.btnform.sending .label.default {\n  display: none;\n}\naside .holder .wrapper .step button.submit.sending .label.sending,\naside .holder .wrapper .step button.btnform.sending .label.sending {\n  display: block;\n}\naside .holder .wrapper .step button.submit.check,\naside .holder .wrapper .step button.btnform.check {\n  opacity: 1;\n}\naside .holder .wrapper .step button.submit.check .label.default,\naside .holder .wrapper .step button.btnform.check .label.default {\n  display: none;\n}\naside .holder .wrapper .step button.submit.check .label.check,\naside .holder .wrapper .step button.btnform.check .label.check {\n  display: block;\n}\naside .holder .wrapper .step button.submit.sent,\naside .holder .wrapper .step button.btnform.sent {\n  background-color: #a0cc5b;\n  opacity: 1;\n  cursor: default;\n}\naside .holder .wrapper .step button.submit.sent .label.default,\naside .holder .wrapper .step button.btnform.sent .label.default,\naside .holder .wrapper .step button.submit.sent .label.sending,\naside .holder .wrapper .step button.btnform.sent .label.sending {\n  display: none;\n}\naside .holder .wrapper .step button.submit.sent .label.sent,\naside .holder .wrapper .step button.btnform.sent .label.sent {\n  display: block;\n}\naside .holder .wrapper .step button.submit.boot > span.label,\naside .holder .wrapper .step button.btnform.boot > span.label {\n  display: block !important;\n}\naside .holder .wrapper .step .info {\n  width: calc(50% - 3rem);\n  margin-left: 1rem;\n  display: inline-block;\n  position: relative;\n}\n@media only screen and (max-width:1024px) and (min-width:670px), only screen and (max-width:669px) {\n  aside .holder .wrapper .step .info {\n    position: relative;\n    width: 100%;\n    margin: 0;\n  }\n}\naside .holder .wrapper .step .info .icon {\n  position: relative;\n  display: inline-block;\n  font-size: 3rem;\n  z-index: 2;\n  width: 3rem;\n  cursor: pointer;\n}\naside .holder .wrapper .step .info .icon:before {\n  margin: 0;\n}\n@media only screen and (max-width:1024px) and (min-width:670px), only screen and (max-width:669px) {\n  aside .holder .wrapper .step .info .icon {\n    display: none;\n  }\n}\naside .holder .wrapper .step ul {\n  list-style: none;\n  margin-bottom: 2rem;\n}\naside .holder .wrapper .step ul li.ib {\n  display: inline-block;\n  color: black;\n}\naside .holder .wrapper .step ul li.ib.highlighted label {\n  color: red;\n}\naside .holder .wrapper .step ul.owned {\n  position: relative;\n  width: 50%;\n  margin: 1rem 0;\n  padding-left: 3rem;\n}\n@media only screen and (max-width:1024px) and (min-width:670px), only screen and (max-width:669px) {\n  aside .holder .wrapper .step ul.owned {\n    width: 100%;\n  }\n}\naside .holder .wrapper .step ul.owned li {\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  background-color: #bfbdbd;\n  color: white;\n  padding: .8rem;\n  margin-bottom: 1rem;\n}\naside .holder .wrapper .step section {\n  margin-bottom: 3rem;\n}\naside .holder .wrapper .step section h6 {\n  margin-bottom: 2rem;\n  text-transform: uppercase;\n  font-size: 1.6rem;\n  position: relative;\n}\naside .holder .wrapper .step section h6.highlighted {\n  color: red;\n  border-color: red;\n}\naside .holder .wrapper .step section h6.mand {\n  padding-left: 3rem;\n}\naside .holder .wrapper .step section h6.mand:before {\n  content: '';\n  width: 3rem;\n  position: absolute;\n  height: 100%;\n  left: 0;\n  background-image: url('/themes/custom/lambo/img/base/required.png');\n  background-repeat: no-repeat;\n  background-position: center;\n}\naside .holder .wrapper .step section h6.sub {\n  font-weight: lighter;\n  font-size: 1.4rem;\n  padding-left: 3rem;\n  margin-bottom: 2rem;\n}\naside .holder .wrapper .step section .recaptcha-holder {\n  margin-bottom: 3rem;\n  /*            br, >div{\n              display: none;\n            }*/\n}\naside .holder .wrapper .step section .recaptcha-holder > img {\n  float: none !important;\n  margin: 0 1rem 0 3rem;\n  padding: 0 !important;\n  width: calc(50% - 3rem);\n}\n@media only screen and (max-width:1024px) and (min-width:670px), only screen and (max-width:669px) {\n  aside .holder .wrapper .step section .recaptcha-holder > img {\n    width: 80%;\n    margin-left: 10%;\n    margin-right: auto;\n  }\n}\n@media only screen and (max-width:1199px) and (min-width:1025px), only screen and (max-width: 1024px) and (min-width: 769px) {\n  aside .holder .wrapper .step section .recaptcha-holder > img {\n    width: 60%;\n    margin-left: 20%;\n    margin-right: auto;\n  }\n}\naside .holder .wrapper .step section .recaptcha-holder a img {\n  vertical-align: inherit !important;\n  width: 3.2rem !important;\n  height: 3.2rem !important;\n}\naside .holder .wrapper .step section .recaptcha-holder input {\n  vertical-align: bottom !important;\n  position: relative;\n  margin-left: 3rem;\n  margin-top: 3rem;\n  width: calc(50% - 3rem);\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  border-bottom: 1px solid #a6a6a6;\n}\naside .holder .wrapper .step section .recaptcha-holder input.highlighted {\n  color: red !important;\n  border-color: red !important;\n}\n@media only screen and (max-width:1024px) and (min-width:670px), only screen and (max-width:669px) {\n  aside .holder .wrapper .step section .recaptcha-holder input {\n    width: 80%;\n    margin-left: 10%;\n    margin-right: auto;\n  }\n}\n@media only screen and (max-width:1199px) and (min-width:1025px), only screen and (max-width: 1024px) and (min-width: 769px) {\n  aside .holder .wrapper .step section .recaptcha-holder input {\n    width: 60%;\n    margin-left: 20%;\n    margin-right: auto;\n  }\n}\naside .holder .wrapper .step section .recaptcha-holder iframe {\n  border: 1px solid transparent;\n}\naside .holder .wrapper .step section .recaptcha-holder.highlighted iframe {\n  border: 1px solid red;\n}\naside .holder .wrapper .step .btnfield {\n  position: absolute;\n  width: 3rem;\n  height: 100%;\n  right: 0;\n  top: 0;\n  cursor: pointer;\n  -webkit-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -moz-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -ms-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -o-transition: all 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n}\naside .holder .wrapper .step .btnfield:after {\n  content: '\\e80c';\n  color: red;\n  position: absolute;\n  font-family: 'fontello';\n  font-size: 1.8rem;\n  line-height: 2.5rem;\n  text-align: center;\n  display: inline-block;\n  width: 3rem;\n  color: black;\n  -webkit-transition: color 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -moz-transition: color 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -ms-transition: color 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -o-transition: color 300ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n}\naside .holder .wrapper .step .btnfield:hover:after {\n  color: #ddb321;\n}\naside .holder .wrapper .step .btnfield.minus {\n  background-color: #dad9d9;\n}\naside .holder .wrapper .step .btnfield.minus:after {\n  line-height: 3rem;\n  transform-origin: center center;\n  transform: rotate(45deg);\n  font-size: 2rem;\n  color: white;\n}\naside .holder .wrapper .step .btnfield.minus:hover {\n  background-color: #ddb321;\n}\naside .holder .wrapper .step .field {\n  display: inline-block;\n  position: relative;\n  width: 50%;\n  height: 2.5rem;\n  margin-bottom: 2rem;\n  vertical-align: top;\n}\naside .holder .wrapper .step .field.highlighted input[type=text] {\n  border-color: red;\n  color: red;\n}\naside .holder .wrapper .step .field.highlighted input[type=text]::-webkit-input-placeholder {\n  color: red;\n}\naside .holder .wrapper .step .field.highlighted .inputparent {\n  border-color: red;\n}\naside .holder .wrapper .step .field.highlighted .inputparent:after {\n  color: red;\n}\naside .holder .wrapper .step .field.highlighted .inputparent .placeholder {\n  color: red;\n}\naside .holder .wrapper .step .field.req {\n  font-weight: bold;\n  margin-bottom: 3rem;\n}\naside .holder .wrapper .step .field.req span {\n  vertical-align: middle;\n  display: inline-block;\n  font-family: Roboto;\n}\naside .holder .wrapper .step .field.fullwidth {\n  width: 100%;\n}\naside .holder .wrapper .step .field.field-title {\n  width: 100%;\n}\naside .holder .wrapper .step .field.field-title .inputparent {\n  width: 25%;\n}\n@media only screen and (max-width:1024px) and (min-width:670px), only screen and (max-width:669px) {\n  aside .holder .wrapper .step .field {\n    width: 100%;\n  }\n}\naside .holder .wrapper .step .field .inputparent {\n  border-bottom: 1px solid #a6a6a6;\n  position: relative;\n  width: calc(100% - 3rem);\n  display: inline-block;\n  height: 100%;\n}\naside .holder .wrapper .step .field .inputparent.disabled {\n  opacity: .3;\n}\naside .holder .wrapper .step .field .inputparent.disabled select {\n  display: none;\n}\naside .holder .wrapper .step .field .inputparent:after {\n  content: '\\e805';\n  position: absolute;\n  font-family: 'fontello';\n  font-size: 2rem;\n  color: black;\n  right: 0;\n  top: 0;\n  transform-origin: center center;\n  transform: rotate(90deg);\n}\naside .holder .wrapper .step .field .inputparent .placeholder {\n  z-index: 1;\n  color: black;\n  opacity: 1;\n  position: absolute;\n  left: 0;\n  width: 100%;\n  font-family: Roboto;\n  padding-top: .5rem;\n}\naside .holder .wrapper .step .field .inputparent .placeholder.pristine {\n  opacity: .5;\n}\naside .holder .wrapper .step .field select,\naside .holder .wrapper .step .field input {\n  position: relative;\n  display: inline-block;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  width: auto;\n  min-width: initial;\n  max-width: initial;\n  vertical-align: top;\n}\naside .holder .wrapper .step .field input[type=text] {\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid #a6a6a6;\n  width: calc(100% - 3rem);\n  max-width: initial;\n}\naside .holder .wrapper .step .field input[type=text]::-webkit-input-placeholder {\n  color: black;\n  opacity: .5;\n  font-family: Roboto;\n}\naside .holder .wrapper .step .field select {\n  background-color: transparent;\n  border: none;\n  border-bottom: 1px solid #a6a6a6;\n  width: calc(100% - 3rem);\n  width: 100%;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 2;\n}\naside .holder .wrapper .step .privacybox {\n  position: relative;\n  display: block;\n  width: calc(100% - 3rem);\n  width: 100%;\n  height: 10rem;\n  overflow-y: scroll;\n  padding-right: 2rem;\n  padding-left: 3rem;\n  font-size: 1.2rem;\n  font-style: italic;\n  margin-bottom: 3rem;\n  line-height: 1.8rem;\n}\naside .holder .wrapper .step .privacybox p {\n  font-size: 1.2rem;\n  line-height: 1.6rem;\n  position: relative;\n}\n@media only screen and (max-width:1024px) and (min-width:670px), only screen and (max-width:669px) {\n  aside .holder .wrapper .step .privacybox {\n    display: none;\n  }\n}\naside .holder .wrapper .step .pri {\n  padding-left: 3rem;\n  margin-bottom: 2rem;\n  display: none;\n}\naside .holder .wrapper .step .pri > p {\n  font-size: 1.4rem;\n}\n@media only screen and (max-width:1024px) and (min-width:670px), only screen and (max-width:669px) {\n  aside .holder .wrapper .step .pri {\n    display: inline-block;\n  }\n}\naside .holder .wrapper .step .textarea-wrapper {\n  position: relative;\n}\naside .holder .wrapper .step .textarea-placeholder {\n  display: inline-block;\n  position: absolute;\n  top: 0;\n  left: 3rem;\n  opacity: .5;\n  font-family: Roboto;\n}\naside .holder .wrapper .step textarea {\n  resize: none;\n  background-color: transparent;\n  height: 10rem;\n  border: none;\n  border-bottom: 1px solid #a6a6a6;\n  width: calc(100% - 3rem - 5px);\n  max-width: 100%;\n  position: relative;\n  margin-left: 3rem;\n  font-family: Open Sans;\n}\naside .holder .wrapper .step textarea.highlighted {\n  border-color: red;\n}\naside .holder .wrapper .step .charcounter {\n  display: inline-block;\n  float: right;\n  position: relative;\n  font-family: Open Sans;\n  font-size: 1.2rem;\n  padding-top: .5rem;\n}\naside .holder .wrapper .step.step0 ul li,\naside .holder .wrapper .step.step1 ul li {\n  text-transform: uppercase;\n}\naside .holder .wrapper .step.step0 ul li label,\naside .holder .wrapper .step.step1 ul li label {\n  display: block;\n}\n", ""]);

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(15);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(5)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/index.js!./gallery.less", function() {
				var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/index.js!./gallery.less");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(4)();
	exports.push([module.id, ".gallery {\n  height: 65rem;\n  background-color: black;\n  vertical-align: top;\n  overflow: hidden;\n}\n.gallery .loading {\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(221, 179, 33, 0);\n  z-index: 6;\n  display: none;\n}\n.gallery .loading.visible {\n  display: block;\n}\n.gallery .loading .spinner {\n  left: 50%;\n  top: 50%;\n  margin-left: -2.5em;\n  margin-top: -2.5em;\n  font-size: 8px;\n  position: relative;\n  text-indent: -9999em;\n  border-top: 0.5em solid rgba(221, 179, 33, 0);\n  border-right: 0.5em solid rgba(221, 179, 33, 0);\n  border-bottom: 0.5em solid #ddb321;\n  border-left: 0.5em solid #ddb321;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n  -webkit-animation: load8 1.1s infinite linear;\n  animation: load8 1.1s infinite linear;\n  border-radius: 50%;\n  width: 5em;\n  height: 5em;\n}\n.gallery .loading .spinner:after {\n  border-radius: 50%;\n  width: 10em;\n  height: 10em;\n}\n@-webkit-keyframes load8 {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n@keyframes load8 {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n@-webkit-keyframes load3 {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n@keyframes load3 {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n.gallery .ps-scrollbar-x-rail {\n  z-index: 5;\n}\n.gallery h6 {\n  background-color: #ddb321;\n  position: absolute;\n  display: inline-block;\n  top: 0;\n  margin: 0;\n  padding: 0;\n  color: white;\n  font-size: 2.2rem;\n  font-family: Roboto;\n  text-transform: uppercase;\n  font-style: italic;\n  font-weight: bold;\n  text-align: right;\n  padding-right: 1rem;\n  z-index: 1;\n}\n.gallery h6.pagetextcontrast1 {\n  background-color: black !important;\n}\n.gallery > div {\n  display: inline-block;\n  height: 100%;\n  position: relative;\n  text-align: center;\n}\n.gallery > div .btn-holder {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  z-index: 3;\n}\n.gallery > div .btn-holder .btn {\n  bottom: 2rem;\n}\n.gallery > div .btn-holder .btn:after {\n  content: '\\e80c';\n}\n.gallery > div.thumbnails {\n  width: 21%;\n  position: relative;\n  overflow: hidden;\n  background-color: black;\n}\n@media only screen and (max-width:669px) {\n  .gallery > div.thumbnails {\n    width: 100%;\n    position: absolute;\n    bottom: 0;\n  }\n}\n.gallery > div.thumbnails .wrapper {\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  text-align: left;\n  z-index: 2;\n}\n.gallery > div.thumbnails .wrapper .col {\n  vertical-align: top;\n  display: inline-block;\n  position: relative;\n}\n.gallery > div.thumbnails .wrapper .item {\n  width: 100%;\n  position: relative;\n  cursor: pointer;\n}\n@media only screen and (max-width:669px) {\n  .gallery > div.thumbnails .wrapper .item {\n    display: inline-block;\n  }\n}\n.gallery > div.thumbnails .wrapper .item .icon-play {\n  position: absolute;\n  color: white;\n  font-size: 6rem;\n  z-index: 3;\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n  -moz-transform: translate(-50%, -50%);\n  -ms-transform: translate(-50%, -50%);\n  -o-transform: translate(-50%, -50%);\n}\n.gallery > div.thumbnails .wrapper .item img {\n  width: 100%;\n  position: relative;\n  z-index: 1;\n}\n.gallery > div.thumbnails .wrapper .item .fade {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.6);\n  opacity: 1;\n  -webkit-box-shadow: inset 0px 0px 33px -4px rgba(0, 0, 0, 0.45);\n  -moz-box-shadow: inset 0px 0px 33px -4px rgba(0, 0, 0, 0.45);\n  box-shadow: inset 0px 0px 33px -4px rgba(0, 0, 0, 0.45);\n  -webkit-transition: all 500ms cubic-bezier(0, 0, 0.58, 1);\n  -moz-transition: all 500ms cubic-bezier(0, 0, 0.58, 1);\n  -ms-transition: all 500ms cubic-bezier(0, 0, 0.58, 1);\n  -o-transition: all 500ms cubic-bezier(0, 0, 0.58, 1);\n  /* ease-out */\n  z-index: 2;\n}\n.gallery > div.thumbnails .wrapper .item:hover .fade {\n  opacity: 0;\n}\n.gallery > div.thumbnails .wrapper .item.active {\n  cursor: default;\n}\n.gallery > div.thumbnails .wrapper .item.active .fade {\n  opacity: 0;\n}\n.gallery > div .subscribe-holder {\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 1;\n  padding: 2rem 2rem 0 0;\n  text-align: right;\n  display: none;\n}\n.gallery > div.player {\n  width: 79%;\n  position: absolute;\n  left: 21%;\n  top: 0;\n  background-color: #eee;\n  background-position: center center;\n  background-size: cover;\n  -webkit-box-shadow: 0px 0px 26px 0px rgba(0, 0, 0, 0.35);\n  -moz-box-shadow: 0px 0px 26px 0px rgba(0, 0, 0, 0.35);\n  box-shadow: 0px 0px 26px 0px rgba(0, 0, 0, 0.35);\n}\n.gallery > div.player .at_share {\n  position: absolute;\n  display: inline-block;\n  width: auto;\n  z-index: 1;\n  padding: 2rem 0 0 2rem;\n}\n.gallery > div.player .at_share a {\n  display: inline-block;\n  position: relative;\n  float: none;\n  vertical-align: top;\n}\n.gallery > div.player .at_share a svg {\n  position: relative;\n  width: 2.4rem !important;\n  height: 2.4rem !important;\n}\n.gallery > div.player .at_share a span {\n  line-height: 2.4rem !important;\n  width: 2.4rem !important;\n  height: 2.4rem !important;\n}\n.gallery > div.player.jwplayer {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n", ""]);

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(17);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(5)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/index.js!./blockbottom.less", function() {
				var newContent = require("!!../../node_modules/css-loader/index.js!../../node_modules/less-loader/index.js!./blockbottom.less");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(4)();
	exports.push([module.id, ".blockbottom {\n  position: relative;\n  margin-top: 2rem;\n}\n.blockbottom .box-half,\n.blockbottom .box-full {\n  position: relative;\n  padding-bottom: 59.73%;\n  height: 100%;\n  width: 100%;\n  background-color: #ccc;\n  text-align: center;\n  background-position: center center;\n  background-size: cover;\n  overflow: hidden;\n}\n.blockbottom .box-half h5,\n.blockbottom .box-full h5 {\n  color: white;\n  background-color: transparent;\n  font-size: 3rem;\n  font-weight: bold;\n  text-transform: uppercase;\n  position: absolute;\n  z-index: 3;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n.blockbottom .box-half h5 .small,\n.blockbottom .box-full h5 .small {\n  font-weight: lighter;\n}\n.blockbottom .box-half > a,\n.blockbottom .box-full > a {\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  z-index: 3;\n}\n.blockbottom .box-half > a img,\n.blockbottom .box-full > a img {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: 1;\n  transform: none;\n  -webkit-transition: all 900ms cubic-bezier(0, 0, 0.58, 1);\n  -moz-transition: all 900ms cubic-bezier(0, 0, 0.58, 1);\n  -ms-transition: all 900ms cubic-bezier(0, 0, 0.58, 1);\n  -o-transition: all 900ms cubic-bezier(0, 0, 0.58, 1);\n  /* ease-out */\n}\n.blockbottom .box-half > a:after,\n.blockbottom .box-full > a:after {\n  content: '';\n  background-color: rgba(0, 0, 0, 0.5);\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  position: absolute;\n  z-index: 2;\n  opacity: 1;\n  -webkit-box-shadow: inset 0px 0px 33px -4px rgba(0, 0, 0, 0.45);\n  -moz-box-shadow: inset 0px 0px 33px -4px rgba(0, 0, 0, 0.45);\n  box-shadow: inset 0px 0px 33px -4px rgba(0, 0, 0, 0.45);\n  -webkit-transition: all 400ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -moz-transition: all 400ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -ms-transition: all 400ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n  -o-transition: all 400ms cubic-bezier(0.455, 0.03, 0.515, 0.955);\n}\n.blockbottom .box-half > a:hover img,\n.blockbottom .box-full > a:hover img {\n  transform: scale(1.06, 1.06);\n}\n.blockbottom .box-half > a:hover:after,\n.blockbottom .box-full > a:hover:after {\n  opacity: 0;\n}\n.blockbottom .box-full {\n  padding-bottom: 29.865%;\n}\n@media only screen and (max-width:669px) {\n  .blockbottom .box-full {\n    padding-bottom: 59.73%;\n  }\n}\n", ""]);

/***/ }),
/* 18 */
/***/ (function(module, exports) {

	'use strict';

	app.directive('carouselTop', ["$compile", "$timeout", function ($compile, $timeout) {
	    return {
	        restrict: 'A',
	        scope: true,
	        link: function postLink(scope, element, attributes) {
	            scope.data = JSON.parse(attributes.carouselTop);
	            element.attr('carousel-top','');

	            console.log(scope.data);

	            scope.currentScroll=scope.$root.bodyEl.scrollTop;
	            scope.currentitem = scope.data.children[0];

	            var updateScroll=function(){
	                scope.$root.bodyEl.scrollTop=scope.currentScroll;
	            }

	            if(!Globals.MOBILE_DETECT.is_mobile)
	            {
	                var $arrowDown=angular.element('<div class="arrowdown"><div class="icon-arrow-next" ng-click="scrollByArrow()"></div></div>');
	                element.append($arrowDown);
	                $compile($arrowDown)(scope);

	                var $arrow=angular.element($arrowDown[0].querySelector('.icon-arrow-next'));
	                $arrow.css('cursor','pointer');

	                var isTweeningArrow=true;

	                TweenMax.to($arrow,.5,{ease:Expo.easeOut,y:'+=10',yoyo:true,repeat:-1});
	            }
	            
	            scope.scrollByArrow=function(){
	                var menuHeight=document.querySelector('.black').offsetHeight;
	                var carouselHeight=element[0].offsetHeight;
	                scope.currentScroll=scope.$root.bodyEl.scrollTop;
	                TweenLite.to(scope,1,{ease:Expo.easeInOut,currentScroll:carouselHeight-menuHeight,onUpdate:updateScroll});
	            }


	            var INTERVAL=3000;

	            var highlightedId=0;

	            var getVideoTag=function(mp4,loop){
	                return '<video muted '+(loop?'loop':'')+'><source src="'+mp4+'" type="video/mp4"></video>';
	            };

	            if(scope.data.children.length===1) angular.element(element[0].querySelector('.carousel-top-nav')).remove();

	            element.attr('carousel-top', '');

	            var $wrapper = angular.element(element[0].querySelector('.wrapper'));
	            var $wrapperBlack = angular.element(element[0].querySelector('.wrapper-black'));
	            var $title = angular.element(element[0].querySelector('.boxcontent'));
	            var $disablearea=angular.element('<div class="disablearea"></div>')

	            if(!element.hasClass('home')  && scope.data.blackfade)
	            {
	                var fade=angular.element('<svg xmlns="http://www.w3.org/2000/svg"><svg viewBox="0 0 1.778 1" height="100%" width="100%" preserveAspectRatio="xMidYMid slice"><polygon class="fade" fill="black" points="0 0, 1.3557 0, 0.5166 1 , 0 1, 0 0"/></svg></svg>');
	                $wrapperBlack.append(fade);
	            }

	            scope.currentItemId = 0;

	            var to,to2,to3,to4;
	            var tan = 0.83909963117728;

	            var killTimeout = function () {
	                if (to) {
	                    $timeout.cancel(to);
	                    to = undefined;
	                }
	                if (to2) {
	                    $timeout.cancel(to2);
	                    to2 = undefined;
	                }

	                if (to3) {
	                    $timeout.cancel(to3);
	                    to3 = undefined;
	                }

	                if (to4) {
	                    $timeout.cancel(to4);
	                    to4 = undefined;
	                }


	            };

	            var incrementIndex=function(){
	                if (scope.currentItemId < scope.data.children.length - 1) {
	                    scope.currentItemId++;
	                }
	                else {
	                    scope.currentItemId = 0;
	                }
	            }

	            var createTimeout = function () {

	                killTimeout();
	                if(scope.$root.carouselTimer) to = $timeout(incrementIndex, INTERVAL);
	            };

	            var oldTitleColor,titleColor;

	            var setCurrentItem=function(immediately){


	                $timeout(function(){
	                    scope.currentitem=scope.data.children[scope.currentItemId];

	                     titleColor=scope.currentitem.color||'#ffffff';

	                    if(titleColor != oldTitleColor)
	                    {
	                        var b= parseInt(color2color( titleColor ,'hsl').split(',')[2].split('%')[0]);

	                        TweenLite.to($title[0].querySelector('span'),!oldTitleColor?0:.8,{ease:Expo.easeOut,css:{color:titleColor}});
	                        TweenLite.to($title[0].querySelector('.subtitle'),!oldTitleColor?0:.8,{ease:Expo.easeOut,css:{backgroundColor:titleColor}});
	                        TweenLite.to($title[0].querySelector('.subtitle'),!oldTitleColor?0:.8,{ease:Expo.easeOut,css:{backgroundColor:titleColor}});
	                        TweenLite.to($title[0].querySelector('.subtitle'),!oldTitleColor?0:.8,{ease:Expo.easeOut,css:{color:b>=50?'#000':'#fff'}});

	                        oldTitleColor=titleColor;
	                    }

	                    var oldText=scope.currentText;
	                    var newText=('text' in scope.currentitem)?scope.currentitem.text:scope.data.text;

	                    var p=element[0].querySelector('.boxcontent>p');
	                    var b=element[0].querySelector('a.btn');

	                    if(oldText!==newText)
	                    {
	                        if(oldText)
	                        {
	                            TweenLite.to(p,1.4,{ease:Expo.easeOut,alpha:0,x:-400,onComplete:function(){
	                                $timeout(function(){
	                                    TweenLite.set(p,{x:0});
	                                    scope.currentText=newText;
	                                    TweenLite.to(p,.5,{ease:Expo.easeOut,alpha:1});
	                                });
	                            }})
	                       }
	                       else
	                        {
	                            scope.currentText=newText;
	                        }

	                    }

	/*                   if(angular.isDefined(scope.currentbutton) && scope.currentbutton.visible)
	                    {
	                        TweenLite.to(b,.5,{alpha:0,ease:Expo.easeOut,onComplete:function(){
	                            angular.element(b).css('display','none');
	                        }});
	                    }*/

	                    scope.currentbutton=scope.currentitem.button;

	                    if(scope.currentbutton && scope.currentbutton.visible)
	                    {
	                        angular.element(b).css('display','block');
	                        //TweenLite.to(b,1,{alpha:1,ease:Expo.easeOut});
	                    }
	                    else
	                    {
	                        angular.element(b).css('display','none');
	                    }


	/*                    if(oldText){
	                        to2=$timeout(function(){
	                            scope.currentbutton=scope.currentitem.button;

	                            if(scope.currentbutton.visible)
	                            {
	                                angular.element(b).css('display','block');
	                                TweenLite.to(b,1,{alpha:1,ease:Expo.easeOut});
	                            }

	                            to2=undefined;

	                        },isMobile?800:1400);
	                    }
	                    else
	                    {
	                        scope.currentbutton=scope.currentitem.button;
	                        if(scope.currentbutton)
	                        {
	                            TweenLite.set(b,{alpha:scope.currentbutton.visible?1:0});
	                            angular.element(b).css('display',scope.currentbutton.visible?'block':'none');
	                        }

	                    }*/



	                })

	            }

	            scope.$watch('currentItemId', function (newVal, oldVal) {

	                if (newVal != oldVal) {
	                    if (to) {
	                        addItem(true);
	                    }
	                    else {
	                        addItem(newVal > oldVal);
	                    }

	                }




	            });

	            var points;
	            var whitepoints;

	            var setPoints = function () {
	                points = {
	                    tlx: 0,
	                    tly: 0,
	                    trx: 1.778 + tan,
	                    try: 0,
	                    brx: 1.778,
	                    bry: 1,
	                    blx: 0,
	                    bly: 1
	                };

	                whitepoints = {
	                    tlx: 0,
	                    tly: 0,
	                    trx: 1.778 + tan,
	                    try: 0,
	                    brx: 1.778,
	                    bry: 1,
	                    blx: 0,
	                    bly: 1
	                }
	            };



	            var $item;
	            var $oldItem;

	            var createItem = function (i, isNext) {

	                setPoints();

	                var image=scope.data.children[i].images.desktop.src;

	                $item = angular.element('<svg id="carousel-top-item-' + i + '" xmlns="http://www.w3.org/2000/svg"><defs><filter id="blurFilter" x="0" y="0" width="1" height="1" ><feBlend in="SourceGraphic" mode="screen" result="A"/><feGaussianBlur in="A" stdDeviation=".009"/></filter></defs><svg viewBox="0 0 1.778 1" height="100%" width="100%" preserveAspectRatio="'+(element.hasClass('model')?'xMidYMin':'xMidYMid')+' slice"><clipPath id="mask-' + i + '"><polygon id="maskpoly-' + i + '" class="maskpoly" points="' + points.tlx + ' ' + points.tly + ',' + points.trx + ' ' + points.try + ',' + points.brx + ' ' + points.bry + ',' + points.blx + ' ' + points.bly + ',' + points.tlx + ' ' + points.tly + '"/></clipPath><clipPath id="maskwhite-' + i + '"><polygon class="whitepoly" fill="white" points="' + whitepoints.tlx + ' ' + whitepoints.tly + ',' + whitepoints.trx + ' ' + whitepoints.try + ',' + whitepoints.brx + ' ' + whitepoints.bry + ',' + whitepoints.blx + ' ' + whitepoints.bly + ',' + whitepoints.tlx + ' ' + whitepoints.tly + '"/></clipPath><image class="img2" clip-path="url(#maskwhite-' + i + ')" style="" preserveAspectRatio="xMidYMid slice" height="100%" width="100%" xlink:href="' + image + '"/><image class="img" clip-path="url(#mask-' + i + ')" preserveAspectRatio="xMidYMid slice" height="100%" width="100%" xlink:href="' + image + '"/></svg></svg>');


	                $wrapper.prepend($item);

	                $compile($item)(scope);



	            };

	            var updatePointsPosition = function () {

	                $oldItem[0].querySelector('.maskpoly').setAttribute('points',
	                    points.tlx + ' ' + points.tly + ',' +
	                    points.trx + ' ' + points.try + ',' +
	                    points.brx + ' ' + points.bry + ',' +
	                    points.blx + ' ' + points.bly + ',' +
	                    points.tlx + ' ' + points.tly
	                );

	            };

	            var updateWhitePointsPosition = function () {

	                if($oldItem)
	                {
	                    $oldItem[0].querySelector('.whitepoly').setAttribute('points',
	                        whitepoints.tlx + ' ' + whitepoints.tly + ',' +
	                        whitepoints.trx + ' ' + whitepoints.try + ',' +
	                        whitepoints.brx + ' ' + whitepoints.bry + ',' +
	                        whitepoints.blx + ' ' + whitepoints.bly + ',' +
	                        whitepoints.tlx + ' ' + whitepoints.tly
	                    );
	                }

	            };

	            scope.build = function (data) {
	                scope.data = data;

	                if(isMobile)
	                {
	                    createItemMobile(scope.currentItemId);
	                }
	                else
	                {
	                    createItem(scope.currentItemId, true);
	                }

	            };

	            var createItemMobile=function(i){

	                var $mobileItem=angular.element('<div class="mobile-item" style="background-image:url('+scope.data.children[i].images.mobile.src+')"></div>');
	                $wrapper.append($mobileItem);

	                TweenLite.to($mobileItem,1,{ease:Expo.easeOut,alpha:1,onComplete:function(){

	                    if($wrapper.children().length>1) angular.element($wrapper.children()[0]).remove();
	                    createTimeout();

	                }});


	                setCurrentItem();

	                if(element.hasClass('home'))
	                {
	                    $timeout(function(){
	                        $title.find('.h2').isolateScope().updatePos();
	                        TweenLite.set($title,{x:0});
	                        TweenLite.to($title,1,{ease:Expo.easeOut,alpha:1});
	                    });
	                }
	            }

	            scope.dotClick = function (i) {

	                if (i !== scope.currentItemId) {

	                    highlightedId=i;

	                    TweenMax.killAll(true);

	                    if(element.find('video').length===0)
	                    {
	                        killTimeout();
	                        scope.currentItemId = i;
	                    }
	                    else
	                    {
	                        scope.toggleBoxContent(true);

	                        TweenLite.to(videoEl,.2,{alpha:0,onComplete:function(){
	                            videoEl.removeEventListener('ended',scope.onVideoEnded,false);
	                            videoEl.removeEventListener('canplaythrough',onVideoCanPlayThrough,false);
	                            window.removeEventListener('resize', onRes);
	                            angular.element(videoEl).remove();
	                            videoEl=null;

	                            $timeout(function(){
	                                scope.currentItemId = i;
	                            })

	                        }});

	                        TweenLite.to(element[0].querySelectorAll('image'),.2,{alpha:1});

	                    }

	                }
	            };

	            scope.getClass = function (i) {
	                return i === highlightedId ? 'active' : '';
	            };




	            var videoEl;

	            var removeVideo=function(){
	                if(videoEl)
	                {
	                    videoEl.removeEventListener('ended',scope.onVideoEnded,false);
	                    videoEl.removeEventListener('canplaythrough',onVideoCanPlayThrough,false);
	                    window.removeEventListener('resize', onRes);
	                    angular.element(videoEl).remove();
	                    videoEl=null;
	                }

	            }

	            scope.toggleBoxContent=function(toggle){
	                TweenLite.to(element[0].querySelector('.boxcontent'),.5,{ease:Expo.easeOut,alpha:toggle?1:0});
	            }

	            scope.onVideoEnded=function(){

	                if(scope.data.children.length>1 && scope.$root.carouselTimer)
	                {
	                    scope.toggleBoxContent(true);

	                    TweenLite.to(videoEl,.5,{alpha:0.4,onComplete:function(){

	                        removeVideo();
	                        $timeout(incrementIndex);
	                    }});

	                    TweenLite.to(element[0].querySelectorAll('image'),.5,{alpha:1});
	                }

	            }

	            var onVideoCanPlayThrough=function(){
	                angular.element(videoEl).css('display','block');
	                TweenLite.to(element[0].querySelectorAll('image'),.5,{alpha:0});
	                if(scope.data.children.length>1) scope.toggleBoxContent(false);

	            }

	            var onRes=function(){
	                if(videoEl)
	                {
	                    var RATIO=16/9;
	                    var wRatio=window.innerWidth/window.innerHeight;
	                    var targetW,targetH;

	                    if(wRatio>RATIO)
	                    {
	                        targetW=window.innerWidth;
	                        targetH=window.innerWidth*(1/RATIO);
	                    }
	                    else
	                    {
	                        targetW=window.innerHeight*RATIO;
	                        targetH=window.innerHeight;
	                    }

	                    angular.element(videoEl).css('width',targetW+'px');
	                    angular.element(videoEl).css('height',targetH+'px');
	                    angular.element(videoEl).css('top',((window.innerHeight - targetH)/2)+'px');
	                    angular.element(videoEl).css('left',((window.innerWidth - targetW)/2)+'px');
	                }
	            }

	            var onTransitionComplete = function () {

	                if ($oldItem) {
	                    $oldItem.remove();
	                    $oldItem = null;
	                }

	                $disablearea.remove();

	                if('video' in scope.data.children[scope.currentItemId])
	                {
	                    element.prepend(getVideoTag(scope.data.children[scope.currentItemId].video.src,scope.data.children.length===1));
	                    videoEl=element.find('video')[0];
	                    videoEl.addEventListener('ended',scope.onVideoEnded,false);
	                    videoEl.addEventListener('canplaythrough',onVideoCanPlayThrough,false);

	                    videoEl.play();

	                    window.addEventListener('resize', onRes);
	                    onRes();


	                }
	                else
	                {
	                    createTimeout();
	                }

	                //setCurrentItem();

	/*                if(element.hasClass('home'))
	                {
	                    $timeout(function(){
	                        $title.find('h2').isolateScope().updatePos();
	                        TweenLite.set($title,{x:0});
	                        TweenLite.to($title,1,{ease:Expo.easeOut,alpha:1});
	                    });
	                }*/



	            };

	            var addItem = function (isNext) {


	                scope.$root.preload(scope.data.children[scope.currentItemId].images[isMobile?'mobile':'desktop'].src).then(function(){


	                    if(!isMobile)
	                    {
	                        createItem(scope.currentItemId, isNext);

	                        if ($wrapper.children().length > 1) {

	                            to3=$timeout(function(){
	                                highlightedId=scope.currentItemId;
	                                to3=undefined;
	                            },2000);

	                            to4=$timeout(setCurrentItem,1600);
	                           // setCurrentItem();

	                            $oldItem = angular.element($wrapper.children()[1]);



	                            TweenLite.to(points, 3, {
	                                tlx: 0,
	                                tly: 0,
	                                trx: 0,
	                                try: 0,
	                                brx: -tan,
	                                bry: 1,
	                                blx: -tan,
	                                bly: 1,
	                                ease: Expo.easeInOut,
	                                onUpdate: updatePointsPosition,
	                                onComplete: onTransitionComplete
	                            });

	                            TweenLite.to(whitepoints, 2.7, {
	                                tlx: 0,
	                                tly: 0,
	                                trx: 0,
	                                try: 0,
	                                brx: -tan,
	                                bry: 1,
	                                blx: -tan,
	                                bly: 1,
	                                delay:.3,
	                                ease: Expo.easeInOut,
	                                onUpdate: updateWhitePointsPosition
	                            });

	                            if(element.hasClass('home')) TweenLite.to($title,1,{delay:1,ease:Expo.easeInOut,x:-500,alpha:0});

	                        }
	                        else {

	                            onTransitionComplete();
	                        }
	                    }
	                    else
	                    {
	                        createItemMobile(scope.currentItemId);
	                    }









	                })




	            };




	            var isMobile=Globals.MQ==='tiny';

	            var onMqChange=function(e,newVal,oldVal){

	                if(newVal==='tiny' && oldVal!=='tiny')
	                {
	                    isMobile=true;
	                    TweenMax.killAll(true);
	                    killTimeout();

	                    removeVideo();

	                    while ($wrapper[0].firstChild) {
	                        $wrapper[0].removeChild($wrapper[0].firstChild);
	                    }

	                    addItem(true);
	                }
	                else if(newVal!=='tiny' && oldVal==='tiny')
	                {
	                    isMobile=false;
	                    TweenMax.killAll(true);

	                    killTimeout();

	                    while ($wrapper[0].firstChild) {
	                        $wrapper[0].removeChild($wrapper[0].firstChild);
	                    }

	                    addItem(true);
	                }


	            };



	            scope.$on('mqchange',onMqChange);









	            addItem(true);
	            setCurrentItem();

	        }
	    }
	}]);



/***/ }),
/* 19 */
/***/ (function(module, exports) {

	'use strict';

	app.directive('carouselNews', ["$compile", "$parse", "$interval", function ($compile, $parse, $interval) {
	    return {
	        restrict: 'A',
	        scope: true,
	        link: function postLink(scope, element, attributes) {
	            var index = 0;
	            var ITEMS_PER_PAGE;

	            scope.moment=moment;

	            scope.next = function () {
	                if (index < $wrapper.children().length - (ITEMS_PER_PAGE)) {
	                    index++;
	                    slide();
	                    handleNextPrev();
	                }
	            }

	            scope.getCurrentLink=function(){
	                return angular.element($wrapper.children()[index]).attr('href');
	            }

	            scope.prev = function () {
	                if (index > 0) {
	                    index--;
	                    slide();
	                    handleNextPrev();
	                }
	            }

	            var handleNextPrev = function () {

	                if($wrapper.children().length<=ITEMS_PER_PAGE)
	                {
	                    $btnPrev.addClass('disabled');
	                    $btnNext.addClass('disabled');
	                }
	                else if (index === 0) {
	                    $btnPrev.addClass('disabled');
	                    $btnNext.removeClass('disabled');
	                }
	                else if (index === $wrapper.children().length - (ITEMS_PER_PAGE)) {
	                    $btnPrev.removeClass('disabled');
	                    $btnNext.addClass('disabled');
	                }
	                else {
	                    $btnPrev.removeClass('disabled');
	                    $btnNext.removeClass('disabled');
	                }
	            };

	            var slide = function (immediately) {

	                if(ITEMS_PER_PAGE===3 && $wrapper.children().length>=ITEMS_PER_PAGE)
	                {
	                    angular.forEach($wrapper.children(), function (child,i) {
	                        if(i<=index || i>index+2)
	                        {
	                            TweenMax.to(child.querySelector('.holder'),immediately?0:1,{onUpdate:function(){scope.$broadcast('lazycheck');},ease: Expo.easeInOut, css: {marginLeft:0}});
	                        }
	                    });

	                    TweenMax.to($wrapper.children()[index+1].querySelector('.holder'),immediately?0:1,{ease: Expo.easeInOut, css: {marginLeft:'2rem'}});
	                    TweenMax.to($wrapper.children()[index+2].querySelector('.holder'),immediately?0:1,{ease: Expo.easeInOut, css: {marginLeft:'4rem'}});

	                }
	                else
	                {
	                    angular.forEach($wrapper.children(), function (child,i) {

	                        TweenMax.to(child.querySelector('.holder'),immediately?0:1,{ease: Expo.easeInOut, css: {marginLeft:0}});

	                    });
	                }

	                if($wrapper.children().length===1 && Globals.MQ!=='tiny')
	                {
	                    TweenLite.to($wrapper, immediately?0:1, {ease: Expo.easeInOut, css: {left:'25%',width:'50%'}});
	                }
	                else if($wrapper.children().length<ITEMS_PER_PAGE)
	                {
	                    TweenLite.to($wrapper, immediately?0:1, {ease: Expo.easeInOut, css: {left:  (33.333/2) + '%'}});
	                }
	                else
	                {
	                    TweenLite.to($wrapper, immediately?0:1, {ease: Expo.easeInOut, css: {left: -index * (100 / ITEMS_PER_PAGE) + '%'}});
	                }


	            };

	            var $wrapper = angular.element(element[0].querySelector('.wrapper'));
	            var $btnPrev = angular.element(element[0].querySelector('.prev'));
	            var $btnNext = angular.element(element[0].querySelector('.next'));

	            $btnPrev.addClass('disabled');

	            var setsizes=function(){

	                angular.forEach($wrapper.children(), function (child,i) {
	                    angular.element(child).css('width', (100 / $wrapper.children().length) + '%');

	                });


	                $wrapper.css('width', ((( (100) / ITEMS_PER_PAGE) * $wrapper.children().length))+ '%');


	            }

	            var mqcheck=function(e,val,old){

	                if(val!=='tiny' && (old==='tiny' || old===undefined))
	                {
	                    ITEMS_PER_PAGE=3;
	                    setsizes();
	                    index=Math.min(index,$wrapper.children().length-ITEMS_PER_PAGE);
	                    slide(true);
	                }
	                else if(val==='tiny' && (old!=='tiny' || old===undefined))
	                {
	                    ITEMS_PER_PAGE=1;
	                    setsizes();
	                    index=Math.min(index,$wrapper.children().length-ITEMS_PER_PAGE);
	                    slide(true);
	                }

	                console.warn('mqcheck------------------------------->'+ITEMS_PER_PAGE);
	            };


	            scope.$on('mqchange',mqcheck);

	            mqcheck( undefined,Globals.MQ,undefined);


	            var onRes=function(){
	                angular.element(element.find('button')).css('top',element.find('img')[0].clientHeight/2+'px');

	            };


	            window.addEventListener('resize', onRes);

	            var int=$interval(function(){
	                if(element.find('img')[0].clientHeight > 0)
	                {
	                    $interval.cancel(int);
	                    handleNextPrev();
	                    onRes();
	                }
	            },300);

	        }
	    }
	}]);



/***/ }),
/* 20 */
/***/ (function(module, exports) {

	'use strict';

	app.directive('tabnav', ["$compile", "$timeout", "$interval", function ($compile, $timeout,$interval) {
	    return {
	        restrict: 'A',
	        scope: true,
	        link: function postLink(scope, element, attributes) {

	            scope.currentTabIndex=0;

	            var $wrappertabs=angular.element(element[0].querySelector('.wrappertabs'));

	            var $wrapper=angular.element(element[0].querySelector('.wrapper'));
	            $wrapper.css('width',($wrapper.children().length*100)+'%');
	            angular.element($wrapper[0].querySelectorAll('.tabcontent')).css('width',(100/$wrapper.children().length)+'%');

	            scope.tabLength=$wrapper.children().length;

	            var isTweeningTabs=false;

	            scope.showTab=function(e,i){

	                var btnBounds=e.target.getBoundingClientRect();
	                var topBounds=element[0].querySelector('.top').getBoundingClientRect();

	                var l=parseFloat($wrappertabs.css('left').split('px')[0]);
	                if(isNaN(l))l=0;

	                if(btnBounds.right>topBounds.right)
	                {
	                    isTweeningTabs=true;
	                    TweenLite.to($wrappertabs,.5,{ease:Expo.easeOut,css:{left:(l+(topBounds.right-btnBounds.right))+'px'},onComplete:function(){
	                        scope.$apply();
	                    }})
	                }
	                else if(btnBounds.left<topBounds.left)
	                {
	                    isTweeningTabs=true;
	                    TweenLite.to($wrappertabs,.5,{ease:Expo.easeOut,css:{left:(l+(topBounds.left-btnBounds.left))+'px'},onComplete:function(){
	                        scope.$apply();
	                    }})
	                }

	                scope.currentTabIndex=i;
	                slide();
	            }

	            scope.prev=function(){
	                if(scope.currentTabIndex>0) scope.currentTabIndex--;
	                slide();
	            }

	            scope.next=function(){
	                if(scope.currentTabIndex<scope.tabLength-1) scope.currentTabIndex++;
	                slide();
	            }

	            var slide=function(){
	                TweenLite.to($wrapper,1,{ease:Expo.easeInOut,css:{left:-(scope.currentTabIndex*100)+'%'}})
	            }

	            var TAB_SPEED=9;
	            var tabInterval;
	            var posDir;

	            var createInterval=function(){
	                killInterval();
	                tabInterval=$interval(function(){
	                    var l=parseFloat($wrappertabs.css('left').split('px')[0]);
	                    if(isNaN(l))l=0;

	                    if(posDir)
	                    {
	                        l-=TAB_SPEED;
	                    }
	                    else
	                    {
	                        l+=TAB_SPEED;
	                    }

	                    l=Math.min(0,Math.max(l,element[0].clientWidth-$wrappertabs[0].scrollWidth))
	                    $wrappertabs.css('left',l+'px')

	                },10);
	            }

	            var killInterval=function(){
	                if(tabInterval)
	                {
	                    $interval.cancel(tabInterval);
	                    tabInterval=null;
	                }
	            }

	            scope.arrowKeyUp=function(){
	                killInterval();
	            }

	            scope.nextTab=function(){
	                //TweenLite.to($wrapper,1,{ease:Expo.easeOut,css:{left:(-TAB_INTERVAL)+'px'}});

	                posDir=true;
	               createInterval();
	            }

	            scope.prevTab=function(){
	                posDir=false;
	                createInterval();
	            }

	            var $btnPrev=angular.element(element[0].querySelector('.icon-arrow-prev-tabs'));
	            var $btnNext=angular.element(element[0].querySelector('.icon-arrow-next-tabs'));

	            scope.getArrowClass=function(isPrev){

	                var l=parseFloat($wrappertabs.css('left').split('px')[0]);
	                if(isNaN(l)) l=0;

	                if(isPrev)
	                {
	                    return l==0?'disabled':'';
	                }
	                else
	                {
	                    return (l<=element[0].clientWidth-$wrappertabs[0].scrollWidth || $wrappertabs[0].scrollWidth<=element[0].clientWidth )?'disabled':'';
	                }
	            }

	            var onRes=function(){

	                var l=parseFloat($wrappertabs.css('left').split('px')[0]);
	                if(isNaN(l)) l=0;
	                l=Math.min(0,Math.max(l,element[0].clientWidth-$wrappertabs[0].scrollWidth));
	                $wrappertabs.css('left',l+'px');

	            }


	/*            if('s' in urlParams && document.querySelector('#'+urlParams.s))
	            {
	                scope.$root.anchorScroll(urlParams.s,('a' in urlParams));
	            }*/



	            window.addEventListener('resize',onRes);
	        }
	    }
	}]);



/***/ }),
/* 21 */
/***/ (function(module, exports) {

	'use strict';

	app.directive('btnaside', ["$compile", "$timeout", function ($compile, $timeout) {
	    return {
	        restrict: 'A',
	        scope: {},
	        link: function postLink(scope, element, attributes) {

	            console.log('---------------------->'+element[0].querySelector('.label').clientWidth);

	            var fs=parseInt(window.getComputedStyle(scope.$root.bodyEl).getPropertyValue('font-size').split('px')[0]);

	            angular.element(element[0].querySelector('.label'));

	            element.css('margin-right',(3+fs*2.6)-element[0].querySelector('.label').clientWidth+'px');

	        }
	    }
	}]);



/***/ }),
/* 22 */
/***/ (function(module, exports) {

	'use strict';

	app.directive('gallery', ["$compile", "$window", "$timeout", "$interval", function ($compile, $window, $timeout, $interval) {
	    return {
	        restrict: 'A',
	        scope: true,
	        link: function postLink(scope, element, attributes) {

	            var int;


	            function loadScript(src, callback) {
	                var s,
	                    r,
	                    t;
	                r = false;
	                s = document.createElement('script');
	                s.type = 'text/javascript';
	                s.src = src;
	                s.onload = s.onreadystatechange = function () {
	                    //console.log( this.readyState ); //uncomment this line to see which ready states are called.
	                    if (!r && (!this.readyState || this.readyState == 'complete')) {
	                        r = true;
	                        callback();
	                    }
	                };
	                t = document.getElementsByTagName('script')[0];
	                t.parentNode.insertBefore(s, t);
	            }

	            var $subscribeBtn;

	            scope.createSubscribeButton = function () {
	                $subscribeBtn = angular.element(document.querySelector('.subscribe-holder'));
	                if (currentPlayer) $subscribeBtn.css('display', 'inline-block');
	            };

	            if (window.dataloc !== 0) loadScript('https://apis.google.com/js/platform.js', scope.createSubscribeButton);

	            var $shareBtn;

	            scope.createShareButton = function () {
	                $shareBtn = angular.element(document.querySelector('.share-holder'));
	                $shareBtn.css('display', 'inline-block');
	            };


	            // loadScript('//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-5786155e5f2efeaf',scope.createShareButton);


	            scope.data = JSON.parse(attributes.gallery);

	            console.log('gallery:',scope.data);
	            
	            scope.isOpen = false;

	            element.attr('gallery', '');

	            //var $loading=angular.element('<div class="loading" ng-if="isLoading"><img class="spinner" src="/themes/custom/lambo/img/base/loading-spin.svg"/></div>');
	            var $loading = angular.element('<div class="loading" ng-class="isLoading?\'visible\':\'\'"><div class="spinner"></div></div>');
	            $compile($loading)(scope);
	            element.append($loading);

	            var $wrapper = angular.element(element[0].querySelector('.wrapper'));
	            var $thumbnails = angular.element(element[0].querySelector('.thumbnails'));
	            var $player = angular.element(element[0].querySelector('.player'));
	            var $title = angular.element(element[0].querySelector('h6'));


	            var rows = 4;
	            var cols = Math.ceil(scope.data.children.length / rows);

	            scope.cols = [];


	            var col = -1;
	            angular.forEach(scope.data.children, function (val, i) {
	                val.i = i;
	                if ((i % rows) === 0)col++;
	                if (!scope.cols[col]) scope.cols[col] = [];
	                scope.cols[col].push(val);

	            });

	            var unbindchildren;

	            var unbind = scope.$watch(function () {
	                return $wrapper.children().length;
	            }, function (val, oldval) {

	                if (val === cols) {
	                    unbind();
	                    unbindchildren = scope.$watch(function () {
	                        return angular.element($wrapper.children()[0]).children().length;
	                    }, function (newv, old) {
	                        if (newv > 0) {
	                            unbindchildren();
	                            onRes();

	                            if (scope.data.children.length <= 8) angular.element($thumbnails [0].querySelector('.btn-holder')).css('visibility', 'hidden');

	                        }

	                    });
	                }
	            });

	            var destroyScrollbar = function () {
	                Ps.destroy($thumbnails[0]);
	            }

	            var setupScrollbar = function () {
	                Ps.initialize($thumbnails[0], {suppressScrollY: true});
	            }

	            scope.toggleOpen = function () {

	                if (!scope.isOpen) {
	                    var targetW = Math.min(cols, 6) * thumbsize;
	                    TweenLite.to($thumbnails, 1, {ease: Expo.easeInOut, width: targetW, onComplete: setupScrollbar});
	                    TweenLite.to($player, 1, {ease: Expo.easeInOut, left: targetW});

	                    scope.isOpen = true;
	                }
	                else {
	                    var targetW = 2 * thumbsize;
	                    TweenLite.to($thumbnails, 1, {
	                        ease: Expo.easeInOut, width: targetW, onComplete: function () {
	                            $timeout(function () {
	                                destroyScrollbar();
	                                scope.isOpen = false;
	                            })

	                        }
	                    });
	                    TweenLite.to($player, 1, {ease: Expo.easeInOut, left: targetW});
	                    TweenLite.to($thumbnails, 1, {ease: Expo.easeInOut, scrollLeft: 0});


	                }

	            }

	            var currentVideoDuration = 0;

	            var getVideoDuration = function () {
	                currentVideoDuration = jwplayer().getDuration();

	                if (currentVideoDuration === 0) {
	                    $timeout(getVideoDuration, 500);
	                }
	                else {
	                    scope.$root.doTrack({
	                        'event': 'video.play',
	                        'DL_video.title': scope.data.children[scope.currentItemId].video,
	                        'DL_video.duration': currentVideoDuration,
	                        'DL_video.currentTime': 0
	                    });
	                }
	            }

	            /////


	            if ('i' in urlParams) {
	                scope.currentItemId=parseInt(urlParams.i);
	            }
	            else
	            {
	                scope.currentItemId=0;
	            }


	            scope.getClass=function(i){
	                return i===scope.currentItemId?'active':'';
	            }

	            var currentPlayer;
	            var lastTrackedInterval=0;

	            var checkVideoTime=function(){
	                if(Math.floor(jwplayer().getPosition()/5)>lastTrackedInterval){

	                    lastTrackedInterval=Math.floor(jwplayer().getPosition()/5);

	                    scope.$root.doTrack({
	                        'event': 'video.position',
	                        'DL_video.title': scope.data.children[scope.currentItemId].video,
	                        'DL_video.duration': currentVideoDuration, //Intero che esprime i secondi totali del video
	                        'DL_video.currentTime': lastTrackedInterval*5
	                    })
	                }
	            }

	            var $shareEl;

	            scope.$watch('currentItemId',function(i){

	/*
	                if(!$shareEl)
	                {
	                    $shareEl=angular.element('<div class="share-holder"><a class="addthis_button_tweet"></a></div>');
	                    $player.append($shareEl);
	                    addthis.toolbox('.share-holder', {}, {});
	                }
	*/


	                if(int)
	                {
	                    $interval.cancel(int);
	                    int=undefined;
	                }

	                lastTrackedInterval=0;
	                currentVideoDuration=0;

	                var vo=scope.data.children[i];

	                if(currentPlayer)
	                {
	                    currentPlayer.remove();
	                    currentPlayer=null;

	                    if($subscribeBtn)
	                    {
	                        $subscribeBtn.css('display','none');
	                    }

	                }

	                if('video' in vo)
	                {
	                   // currentPlayer=jwplayer($player[0].firstChild).setup({
	                    
	                    
	                    var o={
	                        "sources":[
	                        {
	                            "file":'//content.jwplatform.com/manifests/'+vo.video.split('/').pop().split('-')[0]+'.m3u8'
	                        },
	                        {
	                            "file":vo.video
	                        }
	                        ],
	                        "width": '100%',
	                        "height": '100%',
	                        "autostart": false,
	                        "preload":'none',
	                        "image": vo.images.fullsize.src,
	                        'modes': [{ type: "html5"}],
	                        "primary":"html5",
	                        hlshtml: true,
	                        "mediaid":vo.video.split('/').pop().split('-')[0]
	                    };

	                    var getSubLabel=function(name){
	                        var filename=name.split('/').pop();
	                        return filename.split('.')[0];
	                    }

	                    if('subtitles' in vo && vo.subtitles.length>0)
	                    {
	                        o.tracks=[];

	                        for(var n=0;n<vo.subtitles.length;n++)
	                        {
	                            o.tracks.push({
	                                file: vo.subtitles[n], 
	                                label: getSubLabel(vo.subtitles[n]),
	                                kind: "captions",
	                            });
	                        }
	                    }

	                    currentPlayer=jwplayer($player[0].querySelector('.player-holder')).setup(o);

	/*                    console.log({
	                        "file": vo.video,
	                        "width": '100%',
	                        "height": '100%',
	                        "autostart": false,
	                        "preload":'none',
	                        "image": vo.images.fullsize.src,
	                        'modes': [{ type: "html5"}],
	                        "primary":"html5",
	                        hlshtml: true,
	                        "mediaid":vo.video.split('/').pop().split('-')[0]
	                    });*/
	                    
	                    jwplayer().on('pause',function(){
	                        if(int)
	                        {
	                            $interval.cancel(int);
	                            int=undefined;
	                        }

	                        scope.$root.doTrack({
	                            'event': 'video.pause',
	                            'DL_video.title': scope.data.children[scope.currentItemId].video,
	                            'DL_video.duration': currentVideoDuration,
	                            'DL_video.currentTime': jwplayer().getPosition()
	                        });

	                    });

	                    jwplayer().on('complete',function(){
	                        scope.$root.doTrack({
	                            'event': 'video.complete',
	                            'DL_video.title': scope.data.children[scope.currentItemId].video,
	                            'DL_video.duration': currentVideoDuration,
	                            'DL_video.currentTime': currentVideoDuration
	                        });

	                        if(int)
	                        {
	                            $interval.cancel(int);
	                            int=undefined;
	                        }

	                        lastTrackedInterval=0;
	                        currentVideoDuration=0;

	                    });

	                    jwplayer().on('play',function(){

	                        if(scope.isOpen) scope.toggleOpen();

	                        if(currentVideoDuration===0)
	                        {
	                            getVideoDuration();
	                        }
	                        else
	                        {
	                            scope.$root.doTrack({
	                                'event': 'video.play',
	                                'DL_video.title': scope.data.children[scope.currentItemId].video,
	                                'DL_video.duration': currentVideoDuration,
	                                'DL_video.currentTime': jwplayer().getPosition()
	                            });
	                        }

	                        int=$interval(checkVideoTime,200);

	                    });

	                    if($subscribeBtn)
	                    {
	                        $subscribeBtn.css('display','inline-block');
	                    }
	                }



	            });

	            scope.isLoading=false;

	            var setCurrentItemId=function(i){
	                scope.currentItemId=i;
	                if(scope.isOpen) scope.toggleOpen();

	                scope.isLoading=false;
	            }

	            scope.itemClick=function(i){


	                if('video' in scope.data.children[i])
	                {
	                    setCurrentItemId(i);

	                    scope.$root.doTrack({
	                        'event': 'gallery',
	                        'eventCategory': 'gallery',
	                        'eventAction': 'open',
	                        'eventLabel': scope.data.children[i].video
	                    });
	                }
	                else
	                {
	                    scope.isLoading=true;
	                    scope.$root.preload(scope.data.children[i].images.fullsize.src).then(function(){
	                        setCurrentItemId(i);
	                    });

	                    scope.$root.doTrack({
	                        'event': 'gallery',
	                        'eventCategory': 'gallery',
	                        'eventAction': 'open',
	                        'eventLabel': scope.data.children[i].images.fullsize.src
	                    });

	                }





	            };




	            scope.prev=function(){
	                if(index>0 && Globals.MQ==='tiny')
	                {
	                    index--;
	                    slide();
	                }

	            }

	            scope.next=function(){
	                if(index<Math.ceil((scope.data.children.length-1)/ITEMS_PER_PAGE) && Globals.MQ==='tiny')
	                {
	                    index++;
	                    slide();
	                }
	            }







	            var ITEMS_PER_PAGE=4;
	            var index=0;

	            var slide = function (immediately) {
	                //TweenLite.to($wrapper, immediately?0:1, {ease: Expo.easeInOut, css: {left: -index * (100) + '%'}});

	                var targetL=Math.max(window.innerWidth-$wrapper[0].clientWidth,-index * (thumbsize*ITEMS_PER_PAGE));
	                TweenLite.to($wrapper, immediately?0:1, {onUpdate:function(){scope.$broadcast('lazycheck');},ease: Expo.easeInOut, css: {left:  targetL + 'px'}});
	            };




	            var thumbsize;

	            var onRes=function(){



	                if(Globals.MQ!='tiny')
	                {
	                    thumbsize=Math.floor((window.innerWidth*.21)/2);
	                    var targetH=window.innerWidth*.79*(9/16);
	                    element.css('height',targetH+'px');

	                    $wrapper.css('height',(thumbsize*4)+'px');
	                    $wrapper.css('width',(thumbsize*cols)+'px');

	                    $thumbnails.css('width',(scope.isOpen?Math.min(cols,6)*thumbsize:2*thumbsize)+'px');
	                    $thumbnails.css('height','100%');

	                    $player.css('left',(scope.isOpen?Math.min(cols,6)*thumbsize:2*thumbsize)+'px');
	                    $player.css('width','79%');
	                    $player.css('height','100%');

	                    angular.element(element[0].querySelector('.spinner')).css('left',($thumbnails[0].offsetWidth+($player[0].offsetWidth/2))+'px');

	                    angular.forEach($wrapper.children(),function(child){
	                        var size=Math.floor((window.innerWidth*.21)/2);
	                        angular.element(child).css('width',thumbsize+'px');

	                        angular.forEach(angular.element(child).children(),function(item){
	                            angular.element(item).css('width',thumbsize+'px');
	                            angular.element(item).css('height',thumbsize+'px');
	                        });
	                    });

	                    $title.css('top',0);
	                    $title.css('width',2*thumbsize+'px');
	                    $title.css('height',(element[0].clientHeight-$wrapper[0].clientHeight)+'px');
	                    $title.css('line-height',(element[0].clientHeight-$wrapper[0].clientHeight)+'px');
	                }
	                else
	                {
	                    thumbsize=Math.floor(window.innerWidth/4);
	                    $thumbnails.css('width',window.innerWidth+'px');
	                    $thumbnails.css('height',thumbsize+'px');
	                    var targetH=window.innerWidth*(9/16);
	                    $player.css('left',0);
	                    $player.css('width',window.innerWidth+'px');
	                    $player.css('height',targetH+'px');

	                    $title.css('top',targetH+'px')
	                    $title.css('width',thumbsize+'px');
	                    $title.css('height','26px');
	                    $title.css('line-height','26px');


	                    angular.element(element[0].querySelector('.spinner')).css('top',(targetH/2)+'px');
	                   // angular.element(element[0].querySelector('.spinner')).css('left',($thumbnails[0].offsetWidth+($player[0].offsetWidth/2))+'px');



	                    element.css('height',(thumbsize+targetH+26)+'px');

	                    $wrapper.css('height',(thumbsize)+'px');
	                    $wrapper.css('width',(thumbsize*scope.data.children.length)+'px');
	                    $wrapper.css('left',0);

	                    angular.forEach($wrapper.children(),function(child){
	                        angular.element(child).css('width','auto');
	                        angular.element(child).css('height','100%');

	                        angular.forEach(angular.element(child).children(),function(item){
	                            angular.element(item).css('width',thumbsize+'px');
	                            angular.element(item).css('height',thumbsize+'px');
	                        });

	                    });

	                }


	            };

	            angular.element($window).bind('resize',onRes);



	        }
	    }
	}]);



/***/ }),
/* 23 */
/***/ (function(module, exports) {

	'use strict';

	app.directive('carouselTechspec', ["$compile", "$timeout", function ($compile, $timeout) {
	    return {
	        restrict: 'A',
	        scope: true,
	        link: function postLink(scope, element, attributes) {

	            var index=0;


	            scope.next = function () {

	                if (index < $wrapper.children().length - (Globals.MQ==='tiny'?1:3)) {
	                    index++;
	                    slide();
	                    handleNextPrev();
	                }
	            }

	            scope.prev = function () {
	                if (index > 0) {
	                    index--;
	                    slide();
	                    handleNextPrev();
	                }
	            }

	            var handleNextPrev = function () {
	                if($wrapper.children().length<=3)
	                {
	                    $btnPrev.addClass('disabled');
	                    $btnNext.addClass('disabled');
	                    return;
	                }

	                if (index === 0) {
	                    $btnPrev.addClass('disabled');
	                    $btnNext.removeClass('disabled');
	                }
	                else if (index === $wrapper.children().length - (Globals.MQ==='tiny'?1:3)) {
	                    $btnPrev.removeClass('disabled');
	                    $btnNext.addClass('disabled');
	                }
	                else {
	                    $btnPrev.removeClass('disabled');
	                    $btnNext.removeClass('disabled');
	                }
	            };


	            var slide = function (immediately) {

	                TweenLite.to($wrapper, immediately?0:1, {onUpdate:function(){scope.$broadcast('lazycheck');},ease: Expo.easeInOut, css: {left: -index * (Globals.MQ==='tiny'?100:33.3333333 ) + '%'}});

	            };

	            var $wrapper = angular.element(element[0].querySelector('.wrapper'));
	            var $btnPrev = angular.element(element[0].querySelector('.prev'));
	            var $btnNext = angular.element(element[0].querySelector('.next'));

	            $btnPrev.addClass('disabled');

	            scope.getItemClass=function(i){

	                if(Globals.MQ!=='tiny')
	                {
	                    if(i===index) return 'left';
	                    if(i===index+1) return 'center';
	                    if(i===index+2) return 'right';
	                }



	            }

	            var setsizes=function(){

	                angular.forEach($wrapper.children(), function (child,i) {
	                    angular.element(child).css('width', (100 / $wrapper.children().length) + '%');

	                });


	                $wrapper.css('width', ((100/(Globals.MQ==='tiny'?1:3)) * $wrapper.children().length)+ '%');

	                handleNextPrev();
	            }

	           setsizes();




	            scope.$on('mqchange',function(e,newVal,oldVal){
	                if(newVal==='tiny' && oldVal!=='tiny')
	                {
	                    index=0;
	                    setsizes();
	                    slide();
	                }
	                else if(newVal!=='tiny' && oldVal==='tiny')
	                {
	                    index=0;
	                    setsizes();
	                    slide();
	                }
	            })
	        }
	    }
	}]);



/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

	var require;/* WEBPACK VAR INJECTION */(function(module) {//! moment.js
	//! version : 2.20.1
	//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
	//! license : MIT
	//! momentjs.com

	;(function (global, factory) {
	     true ? module.exports = factory() :
	    typeof define === 'function' && define.amd ? define(factory) :
	    global.moment = factory()
	}(this, (function () { 'use strict';

	var hookCallback;

	function hooks () {
	    return hookCallback.apply(null, arguments);
	}

	// This is done to register the method called with moment()
	// without creating circular dependencies.
	function setHookCallback (callback) {
	    hookCallback = callback;
	}

	function isArray(input) {
	    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
	}

	function isObject(input) {
	    // IE8 will treat undefined and null as object if it wasn't for
	    // input != null
	    return input != null && Object.prototype.toString.call(input) === '[object Object]';
	}

	function isObjectEmpty(obj) {
	    if (Object.getOwnPropertyNames) {
	        return (Object.getOwnPropertyNames(obj).length === 0);
	    } else {
	        var k;
	        for (k in obj) {
	            if (obj.hasOwnProperty(k)) {
	                return false;
	            }
	        }
	        return true;
	    }
	}

	function isUndefined(input) {
	    return input === void 0;
	}

	function isNumber(input) {
	    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
	}

	function isDate(input) {
	    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
	}

	function map(arr, fn) {
	    var res = [], i;
	    for (i = 0; i < arr.length; ++i) {
	        res.push(fn(arr[i], i));
	    }
	    return res;
	}

	function hasOwnProp(a, b) {
	    return Object.prototype.hasOwnProperty.call(a, b);
	}

	function extend(a, b) {
	    for (var i in b) {
	        if (hasOwnProp(b, i)) {
	            a[i] = b[i];
	        }
	    }

	    if (hasOwnProp(b, 'toString')) {
	        a.toString = b.toString;
	    }

	    if (hasOwnProp(b, 'valueOf')) {
	        a.valueOf = b.valueOf;
	    }

	    return a;
	}

	function createUTC (input, format, locale, strict) {
	    return createLocalOrUTC(input, format, locale, strict, true).utc();
	}

	function defaultParsingFlags() {
	    // We need to deep clone this object.
	    return {
	        empty           : false,
	        unusedTokens    : [],
	        unusedInput     : [],
	        overflow        : -2,
	        charsLeftOver   : 0,
	        nullInput       : false,
	        invalidMonth    : null,
	        invalidFormat   : false,
	        userInvalidated : false,
	        iso             : false,
	        parsedDateParts : [],
	        meridiem        : null,
	        rfc2822         : false,
	        weekdayMismatch : false
	    };
	}

	function getParsingFlags(m) {
	    if (m._pf == null) {
	        m._pf = defaultParsingFlags();
	    }
	    return m._pf;
	}

	var some;
	if (Array.prototype.some) {
	    some = Array.prototype.some;
	} else {
	    some = function (fun) {
	        var t = Object(this);
	        var len = t.length >>> 0;

	        for (var i = 0; i < len; i++) {
	            if (i in t && fun.call(this, t[i], i, t)) {
	                return true;
	            }
	        }

	        return false;
	    };
	}

	function isValid(m) {
	    if (m._isValid == null) {
	        var flags = getParsingFlags(m);
	        var parsedParts = some.call(flags.parsedDateParts, function (i) {
	            return i != null;
	        });
	        var isNowValid = !isNaN(m._d.getTime()) &&
	            flags.overflow < 0 &&
	            !flags.empty &&
	            !flags.invalidMonth &&
	            !flags.invalidWeekday &&
	            !flags.weekdayMismatch &&
	            !flags.nullInput &&
	            !flags.invalidFormat &&
	            !flags.userInvalidated &&
	            (!flags.meridiem || (flags.meridiem && parsedParts));

	        if (m._strict) {
	            isNowValid = isNowValid &&
	                flags.charsLeftOver === 0 &&
	                flags.unusedTokens.length === 0 &&
	                flags.bigHour === undefined;
	        }

	        if (Object.isFrozen == null || !Object.isFrozen(m)) {
	            m._isValid = isNowValid;
	        }
	        else {
	            return isNowValid;
	        }
	    }
	    return m._isValid;
	}

	function createInvalid (flags) {
	    var m = createUTC(NaN);
	    if (flags != null) {
	        extend(getParsingFlags(m), flags);
	    }
	    else {
	        getParsingFlags(m).userInvalidated = true;
	    }

	    return m;
	}

	// Plugins that add properties should also add the key here (null value),
	// so we can properly clone ourselves.
	var momentProperties = hooks.momentProperties = [];

	function copyConfig(to, from) {
	    var i, prop, val;

	    if (!isUndefined(from._isAMomentObject)) {
	        to._isAMomentObject = from._isAMomentObject;
	    }
	    if (!isUndefined(from._i)) {
	        to._i = from._i;
	    }
	    if (!isUndefined(from._f)) {
	        to._f = from._f;
	    }
	    if (!isUndefined(from._l)) {
	        to._l = from._l;
	    }
	    if (!isUndefined(from._strict)) {
	        to._strict = from._strict;
	    }
	    if (!isUndefined(from._tzm)) {
	        to._tzm = from._tzm;
	    }
	    if (!isUndefined(from._isUTC)) {
	        to._isUTC = from._isUTC;
	    }
	    if (!isUndefined(from._offset)) {
	        to._offset = from._offset;
	    }
	    if (!isUndefined(from._pf)) {
	        to._pf = getParsingFlags(from);
	    }
	    if (!isUndefined(from._locale)) {
	        to._locale = from._locale;
	    }

	    if (momentProperties.length > 0) {
	        for (i = 0; i < momentProperties.length; i++) {
	            prop = momentProperties[i];
	            val = from[prop];
	            if (!isUndefined(val)) {
	                to[prop] = val;
	            }
	        }
	    }

	    return to;
	}

	var updateInProgress = false;

	// Moment prototype object
	function Moment(config) {
	    copyConfig(this, config);
	    this._d = new Date(config._d != null ? config._d.getTime() : NaN);
	    if (!this.isValid()) {
	        this._d = new Date(NaN);
	    }
	    // Prevent infinite loop in case updateOffset creates new moment
	    // objects.
	    if (updateInProgress === false) {
	        updateInProgress = true;
	        hooks.updateOffset(this);
	        updateInProgress = false;
	    }
	}

	function isMoment (obj) {
	    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
	}

	function absFloor (number) {
	    if (number < 0) {
	        // -0 -> 0
	        return Math.ceil(number) || 0;
	    } else {
	        return Math.floor(number);
	    }
	}

	function toInt(argumentForCoercion) {
	    var coercedNumber = +argumentForCoercion,
	        value = 0;

	    if (coercedNumber !== 0 && isFinite(coercedNumber)) {
	        value = absFloor(coercedNumber);
	    }

	    return value;
	}

	// compare two arrays, return the number of differences
	function compareArrays(array1, array2, dontConvert) {
	    var len = Math.min(array1.length, array2.length),
	        lengthDiff = Math.abs(array1.length - array2.length),
	        diffs = 0,
	        i;
	    for (i = 0; i < len; i++) {
	        if ((dontConvert && array1[i] !== array2[i]) ||
	            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
	            diffs++;
	        }
	    }
	    return diffs + lengthDiff;
	}

	function warn(msg) {
	    if (hooks.suppressDeprecationWarnings === false &&
	            (typeof console !==  'undefined') && console.warn) {
	        console.warn('Deprecation warning: ' + msg);
	    }
	}

	function deprecate(msg, fn) {
	    var firstTime = true;

	    return extend(function () {
	        if (hooks.deprecationHandler != null) {
	            hooks.deprecationHandler(null, msg);
	        }
	        if (firstTime) {
	            var args = [];
	            var arg;
	            for (var i = 0; i < arguments.length; i++) {
	                arg = '';
	                if (typeof arguments[i] === 'object') {
	                    arg += '\n[' + i + '] ';
	                    for (var key in arguments[0]) {
	                        arg += key + ': ' + arguments[0][key] + ', ';
	                    }
	                    arg = arg.slice(0, -2); // Remove trailing comma and space
	                } else {
	                    arg = arguments[i];
	                }
	                args.push(arg);
	            }
	            warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
	            firstTime = false;
	        }
	        return fn.apply(this, arguments);
	    }, fn);
	}

	var deprecations = {};

	function deprecateSimple(name, msg) {
	    if (hooks.deprecationHandler != null) {
	        hooks.deprecationHandler(name, msg);
	    }
	    if (!deprecations[name]) {
	        warn(msg);
	        deprecations[name] = true;
	    }
	}

	hooks.suppressDeprecationWarnings = false;
	hooks.deprecationHandler = null;

	function isFunction(input) {
	    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
	}

	function set (config) {
	    var prop, i;
	    for (i in config) {
	        prop = config[i];
	        if (isFunction(prop)) {
	            this[i] = prop;
	        } else {
	            this['_' + i] = prop;
	        }
	    }
	    this._config = config;
	    // Lenient ordinal parsing accepts just a number in addition to
	    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
	    // TODO: Remove "ordinalParse" fallback in next major release.
	    this._dayOfMonthOrdinalParseLenient = new RegExp(
	        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
	            '|' + (/\d{1,2}/).source);
	}

	function mergeConfigs(parentConfig, childConfig) {
	    var res = extend({}, parentConfig), prop;
	    for (prop in childConfig) {
	        if (hasOwnProp(childConfig, prop)) {
	            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
	                res[prop] = {};
	                extend(res[prop], parentConfig[prop]);
	                extend(res[prop], childConfig[prop]);
	            } else if (childConfig[prop] != null) {
	                res[prop] = childConfig[prop];
	            } else {
	                delete res[prop];
	            }
	        }
	    }
	    for (prop in parentConfig) {
	        if (hasOwnProp(parentConfig, prop) &&
	                !hasOwnProp(childConfig, prop) &&
	                isObject(parentConfig[prop])) {
	            // make sure changes to properties don't modify parent config
	            res[prop] = extend({}, res[prop]);
	        }
	    }
	    return res;
	}

	function Locale(config) {
	    if (config != null) {
	        this.set(config);
	    }
	}

	var keys;

	if (Object.keys) {
	    keys = Object.keys;
	} else {
	    keys = function (obj) {
	        var i, res = [];
	        for (i in obj) {
	            if (hasOwnProp(obj, i)) {
	                res.push(i);
	            }
	        }
	        return res;
	    };
	}

	var defaultCalendar = {
	    sameDay : '[Today at] LT',
	    nextDay : '[Tomorrow at] LT',
	    nextWeek : 'dddd [at] LT',
	    lastDay : '[Yesterday at] LT',
	    lastWeek : '[Last] dddd [at] LT',
	    sameElse : 'L'
	};

	function calendar (key, mom, now) {
	    var output = this._calendar[key] || this._calendar['sameElse'];
	    return isFunction(output) ? output.call(mom, now) : output;
	}

	var defaultLongDateFormat = {
	    LTS  : 'h:mm:ss A',
	    LT   : 'h:mm A',
	    L    : 'MM/DD/YYYY',
	    LL   : 'MMMM D, YYYY',
	    LLL  : 'MMMM D, YYYY h:mm A',
	    LLLL : 'dddd, MMMM D, YYYY h:mm A'
	};

	function longDateFormat (key) {
	    var format = this._longDateFormat[key],
	        formatUpper = this._longDateFormat[key.toUpperCase()];

	    if (format || !formatUpper) {
	        return format;
	    }

	    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
	        return val.slice(1);
	    });

	    return this._longDateFormat[key];
	}

	var defaultInvalidDate = 'Invalid date';

	function invalidDate () {
	    return this._invalidDate;
	}

	var defaultOrdinal = '%d';
	var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

	function ordinal (number) {
	    return this._ordinal.replace('%d', number);
	}

	var defaultRelativeTime = {
	    future : 'in %s',
	    past   : '%s ago',
	    s  : 'a few seconds',
	    ss : '%d seconds',
	    m  : 'a minute',
	    mm : '%d minutes',
	    h  : 'an hour',
	    hh : '%d hours',
	    d  : 'a day',
	    dd : '%d days',
	    M  : 'a month',
	    MM : '%d months',
	    y  : 'a year',
	    yy : '%d years'
	};

	function relativeTime (number, withoutSuffix, string, isFuture) {
	    var output = this._relativeTime[string];
	    return (isFunction(output)) ?
	        output(number, withoutSuffix, string, isFuture) :
	        output.replace(/%d/i, number);
	}

	function pastFuture (diff, output) {
	    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
	    return isFunction(format) ? format(output) : format.replace(/%s/i, output);
	}

	var aliases = {};

	function addUnitAlias (unit, shorthand) {
	    var lowerCase = unit.toLowerCase();
	    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
	}

	function normalizeUnits(units) {
	    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
	}

	function normalizeObjectUnits(inputObject) {
	    var normalizedInput = {},
	        normalizedProp,
	        prop;

	    for (prop in inputObject) {
	        if (hasOwnProp(inputObject, prop)) {
	            normalizedProp = normalizeUnits(prop);
	            if (normalizedProp) {
	                normalizedInput[normalizedProp] = inputObject[prop];
	            }
	        }
	    }

	    return normalizedInput;
	}

	var priorities = {};

	function addUnitPriority(unit, priority) {
	    priorities[unit] = priority;
	}

	function getPrioritizedUnits(unitsObj) {
	    var units = [];
	    for (var u in unitsObj) {
	        units.push({unit: u, priority: priorities[u]});
	    }
	    units.sort(function (a, b) {
	        return a.priority - b.priority;
	    });
	    return units;
	}

	function zeroFill(number, targetLength, forceSign) {
	    var absNumber = '' + Math.abs(number),
	        zerosToFill = targetLength - absNumber.length,
	        sign = number >= 0;
	    return (sign ? (forceSign ? '+' : '') : '-') +
	        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
	}

	var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

	var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

	var formatFunctions = {};

	var formatTokenFunctions = {};

	// token:    'M'
	// padded:   ['MM', 2]
	// ordinal:  'Mo'
	// callback: function () { this.month() + 1 }
	function addFormatToken (token, padded, ordinal, callback) {
	    var func = callback;
	    if (typeof callback === 'string') {
	        func = function () {
	            return this[callback]();
	        };
	    }
	    if (token) {
	        formatTokenFunctions[token] = func;
	    }
	    if (padded) {
	        formatTokenFunctions[padded[0]] = function () {
	            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
	        };
	    }
	    if (ordinal) {
	        formatTokenFunctions[ordinal] = function () {
	            return this.localeData().ordinal(func.apply(this, arguments), token);
	        };
	    }
	}

	function removeFormattingTokens(input) {
	    if (input.match(/\[[\s\S]/)) {
	        return input.replace(/^\[|\]$/g, '');
	    }
	    return input.replace(/\\/g, '');
	}

	function makeFormatFunction(format) {
	    var array = format.match(formattingTokens), i, length;

	    for (i = 0, length = array.length; i < length; i++) {
	        if (formatTokenFunctions[array[i]]) {
	            array[i] = formatTokenFunctions[array[i]];
	        } else {
	            array[i] = removeFormattingTokens(array[i]);
	        }
	    }

	    return function (mom) {
	        var output = '', i;
	        for (i = 0; i < length; i++) {
	            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
	        }
	        return output;
	    };
	}

	// format date using native date object
	function formatMoment(m, format) {
	    if (!m.isValid()) {
	        return m.localeData().invalidDate();
	    }

	    format = expandFormat(format, m.localeData());
	    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

	    return formatFunctions[format](m);
	}

	function expandFormat(format, locale) {
	    var i = 5;

	    function replaceLongDateFormatTokens(input) {
	        return locale.longDateFormat(input) || input;
	    }

	    localFormattingTokens.lastIndex = 0;
	    while (i >= 0 && localFormattingTokens.test(format)) {
	        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
	        localFormattingTokens.lastIndex = 0;
	        i -= 1;
	    }

	    return format;
	}

	var match1         = /\d/;            //       0 - 9
	var match2         = /\d\d/;          //      00 - 99
	var match3         = /\d{3}/;         //     000 - 999
	var match4         = /\d{4}/;         //    0000 - 9999
	var match6         = /[+-]?\d{6}/;    // -999999 - 999999
	var match1to2      = /\d\d?/;         //       0 - 99
	var match3to4      = /\d\d\d\d?/;     //     999 - 9999
	var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
	var match1to3      = /\d{1,3}/;       //       0 - 999
	var match1to4      = /\d{1,4}/;       //       0 - 9999
	var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

	var matchUnsigned  = /\d+/;           //       0 - inf
	var matchSigned    = /[+-]?\d+/;      //    -inf - inf

	var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
	var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

	var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

	// any word (or two) characters or numbers including two/three word month in arabic.
	// includes scottish gaelic two word and hyphenated months
	var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;


	var regexes = {};

	function addRegexToken (token, regex, strictRegex) {
	    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
	        return (isStrict && strictRegex) ? strictRegex : regex;
	    };
	}

	function getParseRegexForToken (token, config) {
	    if (!hasOwnProp(regexes, token)) {
	        return new RegExp(unescapeFormat(token));
	    }

	    return regexes[token](config._strict, config._locale);
	}

	// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
	function unescapeFormat(s) {
	    return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
	        return p1 || p2 || p3 || p4;
	    }));
	}

	function regexEscape(s) {
	    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	}

	var tokens = {};

	function addParseToken (token, callback) {
	    var i, func = callback;
	    if (typeof token === 'string') {
	        token = [token];
	    }
	    if (isNumber(callback)) {
	        func = function (input, array) {
	            array[callback] = toInt(input);
	        };
	    }
	    for (i = 0; i < token.length; i++) {
	        tokens[token[i]] = func;
	    }
	}

	function addWeekParseToken (token, callback) {
	    addParseToken(token, function (input, array, config, token) {
	        config._w = config._w || {};
	        callback(input, config._w, config, token);
	    });
	}

	function addTimeToArrayFromToken(token, input, config) {
	    if (input != null && hasOwnProp(tokens, token)) {
	        tokens[token](input, config._a, config, token);
	    }
	}

	var YEAR = 0;
	var MONTH = 1;
	var DATE = 2;
	var HOUR = 3;
	var MINUTE = 4;
	var SECOND = 5;
	var MILLISECOND = 6;
	var WEEK = 7;
	var WEEKDAY = 8;

	// FORMATTING

	addFormatToken('Y', 0, 0, function () {
	    var y = this.year();
	    return y <= 9999 ? '' + y : '+' + y;
	});

	addFormatToken(0, ['YY', 2], 0, function () {
	    return this.year() % 100;
	});

	addFormatToken(0, ['YYYY',   4],       0, 'year');
	addFormatToken(0, ['YYYYY',  5],       0, 'year');
	addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

	// ALIASES

	addUnitAlias('year', 'y');

	// PRIORITIES

	addUnitPriority('year', 1);

	// PARSING

	addRegexToken('Y',      matchSigned);
	addRegexToken('YY',     match1to2, match2);
	addRegexToken('YYYY',   match1to4, match4);
	addRegexToken('YYYYY',  match1to6, match6);
	addRegexToken('YYYYYY', match1to6, match6);

	addParseToken(['YYYYY', 'YYYYYY'], YEAR);
	addParseToken('YYYY', function (input, array) {
	    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
	});
	addParseToken('YY', function (input, array) {
	    array[YEAR] = hooks.parseTwoDigitYear(input);
	});
	addParseToken('Y', function (input, array) {
	    array[YEAR] = parseInt(input, 10);
	});

	// HELPERS

	function daysInYear(year) {
	    return isLeapYear(year) ? 366 : 365;
	}

	function isLeapYear(year) {
	    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
	}

	// HOOKS

	hooks.parseTwoDigitYear = function (input) {
	    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
	};

	// MOMENTS

	var getSetYear = makeGetSet('FullYear', true);

	function getIsLeapYear () {
	    return isLeapYear(this.year());
	}

	function makeGetSet (unit, keepTime) {
	    return function (value) {
	        if (value != null) {
	            set$1(this, unit, value);
	            hooks.updateOffset(this, keepTime);
	            return this;
	        } else {
	            return get(this, unit);
	        }
	    };
	}

	function get (mom, unit) {
	    return mom.isValid() ?
	        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
	}

	function set$1 (mom, unit, value) {
	    if (mom.isValid() && !isNaN(value)) {
	        if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
	            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
	        }
	        else {
	            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
	        }
	    }
	}

	// MOMENTS

	function stringGet (units) {
	    units = normalizeUnits(units);
	    if (isFunction(this[units])) {
	        return this[units]();
	    }
	    return this;
	}


	function stringSet (units, value) {
	    if (typeof units === 'object') {
	        units = normalizeObjectUnits(units);
	        var prioritized = getPrioritizedUnits(units);
	        for (var i = 0; i < prioritized.length; i++) {
	            this[prioritized[i].unit](units[prioritized[i].unit]);
	        }
	    } else {
	        units = normalizeUnits(units);
	        if (isFunction(this[units])) {
	            return this[units](value);
	        }
	    }
	    return this;
	}

	function mod(n, x) {
	    return ((n % x) + x) % x;
	}

	var indexOf;

	if (Array.prototype.indexOf) {
	    indexOf = Array.prototype.indexOf;
	} else {
	    indexOf = function (o) {
	        // I know
	        var i;
	        for (i = 0; i < this.length; ++i) {
	            if (this[i] === o) {
	                return i;
	            }
	        }
	        return -1;
	    };
	}

	function daysInMonth(year, month) {
	    if (isNaN(year) || isNaN(month)) {
	        return NaN;
	    }
	    var modMonth = mod(month, 12);
	    year += (month - modMonth) / 12;
	    return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);
	}

	// FORMATTING

	addFormatToken('M', ['MM', 2], 'Mo', function () {
	    return this.month() + 1;
	});

	addFormatToken('MMM', 0, 0, function (format) {
	    return this.localeData().monthsShort(this, format);
	});

	addFormatToken('MMMM', 0, 0, function (format) {
	    return this.localeData().months(this, format);
	});

	// ALIASES

	addUnitAlias('month', 'M');

	// PRIORITY

	addUnitPriority('month', 8);

	// PARSING

	addRegexToken('M',    match1to2);
	addRegexToken('MM',   match1to2, match2);
	addRegexToken('MMM',  function (isStrict, locale) {
	    return locale.monthsShortRegex(isStrict);
	});
	addRegexToken('MMMM', function (isStrict, locale) {
	    return locale.monthsRegex(isStrict);
	});

	addParseToken(['M', 'MM'], function (input, array) {
	    array[MONTH] = toInt(input) - 1;
	});

	addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
	    var month = config._locale.monthsParse(input, token, config._strict);
	    // if we didn't find a month name, mark the date as invalid.
	    if (month != null) {
	        array[MONTH] = month;
	    } else {
	        getParsingFlags(config).invalidMonth = input;
	    }
	});

	// LOCALES

	var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
	var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
	function localeMonths (m, format) {
	    if (!m) {
	        return isArray(this._months) ? this._months :
	            this._months['standalone'];
	    }
	    return isArray(this._months) ? this._months[m.month()] :
	        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
	}

	var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
	function localeMonthsShort (m, format) {
	    if (!m) {
	        return isArray(this._monthsShort) ? this._monthsShort :
	            this._monthsShort['standalone'];
	    }
	    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
	        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
	}

	function handleStrictParse(monthName, format, strict) {
	    var i, ii, mom, llc = monthName.toLocaleLowerCase();
	    if (!this._monthsParse) {
	        // this is not used
	        this._monthsParse = [];
	        this._longMonthsParse = [];
	        this._shortMonthsParse = [];
	        for (i = 0; i < 12; ++i) {
	            mom = createUTC([2000, i]);
	            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
	            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
	        }
	    }

	    if (strict) {
	        if (format === 'MMM') {
	            ii = indexOf.call(this._shortMonthsParse, llc);
	            return ii !== -1 ? ii : null;
	        } else {
	            ii = indexOf.call(this._longMonthsParse, llc);
	            return ii !== -1 ? ii : null;
	        }
	    } else {
	        if (format === 'MMM') {
	            ii = indexOf.call(this._shortMonthsParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf.call(this._longMonthsParse, llc);
	            return ii !== -1 ? ii : null;
	        } else {
	            ii = indexOf.call(this._longMonthsParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf.call(this._shortMonthsParse, llc);
	            return ii !== -1 ? ii : null;
	        }
	    }
	}

	function localeMonthsParse (monthName, format, strict) {
	    var i, mom, regex;

	    if (this._monthsParseExact) {
	        return handleStrictParse.call(this, monthName, format, strict);
	    }

	    if (!this._monthsParse) {
	        this._monthsParse = [];
	        this._longMonthsParse = [];
	        this._shortMonthsParse = [];
	    }

	    // TODO: add sorting
	    // Sorting makes sure if one month (or abbr) is a prefix of another
	    // see sorting in computeMonthsParse
	    for (i = 0; i < 12; i++) {
	        // make the regex if we don't have it already
	        mom = createUTC([2000, i]);
	        if (strict && !this._longMonthsParse[i]) {
	            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
	            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
	        }
	        if (!strict && !this._monthsParse[i]) {
	            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
	            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
	        }
	        // test the regex
	        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
	            return i;
	        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
	            return i;
	        } else if (!strict && this._monthsParse[i].test(monthName)) {
	            return i;
	        }
	    }
	}

	// MOMENTS

	function setMonth (mom, value) {
	    var dayOfMonth;

	    if (!mom.isValid()) {
	        // No op
	        return mom;
	    }

	    if (typeof value === 'string') {
	        if (/^\d+$/.test(value)) {
	            value = toInt(value);
	        } else {
	            value = mom.localeData().monthsParse(value);
	            // TODO: Another silent failure?
	            if (!isNumber(value)) {
	                return mom;
	            }
	        }
	    }

	    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
	    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
	    return mom;
	}

	function getSetMonth (value) {
	    if (value != null) {
	        setMonth(this, value);
	        hooks.updateOffset(this, true);
	        return this;
	    } else {
	        return get(this, 'Month');
	    }
	}

	function getDaysInMonth () {
	    return daysInMonth(this.year(), this.month());
	}

	var defaultMonthsShortRegex = matchWord;
	function monthsShortRegex (isStrict) {
	    if (this._monthsParseExact) {
	        if (!hasOwnProp(this, '_monthsRegex')) {
	            computeMonthsParse.call(this);
	        }
	        if (isStrict) {
	            return this._monthsShortStrictRegex;
	        } else {
	            return this._monthsShortRegex;
	        }
	    } else {
	        if (!hasOwnProp(this, '_monthsShortRegex')) {
	            this._monthsShortRegex = defaultMonthsShortRegex;
	        }
	        return this._monthsShortStrictRegex && isStrict ?
	            this._monthsShortStrictRegex : this._monthsShortRegex;
	    }
	}

	var defaultMonthsRegex = matchWord;
	function monthsRegex (isStrict) {
	    if (this._monthsParseExact) {
	        if (!hasOwnProp(this, '_monthsRegex')) {
	            computeMonthsParse.call(this);
	        }
	        if (isStrict) {
	            return this._monthsStrictRegex;
	        } else {
	            return this._monthsRegex;
	        }
	    } else {
	        if (!hasOwnProp(this, '_monthsRegex')) {
	            this._monthsRegex = defaultMonthsRegex;
	        }
	        return this._monthsStrictRegex && isStrict ?
	            this._monthsStrictRegex : this._monthsRegex;
	    }
	}

	function computeMonthsParse () {
	    function cmpLenRev(a, b) {
	        return b.length - a.length;
	    }

	    var shortPieces = [], longPieces = [], mixedPieces = [],
	        i, mom;
	    for (i = 0; i < 12; i++) {
	        // make the regex if we don't have it already
	        mom = createUTC([2000, i]);
	        shortPieces.push(this.monthsShort(mom, ''));
	        longPieces.push(this.months(mom, ''));
	        mixedPieces.push(this.months(mom, ''));
	        mixedPieces.push(this.monthsShort(mom, ''));
	    }
	    // Sorting makes sure if one month (or abbr) is a prefix of another it
	    // will match the longer piece.
	    shortPieces.sort(cmpLenRev);
	    longPieces.sort(cmpLenRev);
	    mixedPieces.sort(cmpLenRev);
	    for (i = 0; i < 12; i++) {
	        shortPieces[i] = regexEscape(shortPieces[i]);
	        longPieces[i] = regexEscape(longPieces[i]);
	    }
	    for (i = 0; i < 24; i++) {
	        mixedPieces[i] = regexEscape(mixedPieces[i]);
	    }

	    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	    this._monthsShortRegex = this._monthsRegex;
	    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
	    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
	}

	function createDate (y, m, d, h, M, s, ms) {
	    // can't just apply() to create a date:
	    // https://stackoverflow.com/q/181348
	    var date = new Date(y, m, d, h, M, s, ms);

	    // the date constructor remaps years 0-99 to 1900-1999
	    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
	        date.setFullYear(y);
	    }
	    return date;
	}

	function createUTCDate (y) {
	    var date = new Date(Date.UTC.apply(null, arguments));

	    // the Date.UTC function remaps years 0-99 to 1900-1999
	    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
	        date.setUTCFullYear(y);
	    }
	    return date;
	}

	// start-of-first-week - start-of-year
	function firstWeekOffset(year, dow, doy) {
	    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
	        fwd = 7 + dow - doy,
	        // first-week day local weekday -- which local weekday is fwd
	        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

	    return -fwdlw + fwd - 1;
	}

	// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
	function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
	    var localWeekday = (7 + weekday - dow) % 7,
	        weekOffset = firstWeekOffset(year, dow, doy),
	        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
	        resYear, resDayOfYear;

	    if (dayOfYear <= 0) {
	        resYear = year - 1;
	        resDayOfYear = daysInYear(resYear) + dayOfYear;
	    } else if (dayOfYear > daysInYear(year)) {
	        resYear = year + 1;
	        resDayOfYear = dayOfYear - daysInYear(year);
	    } else {
	        resYear = year;
	        resDayOfYear = dayOfYear;
	    }

	    return {
	        year: resYear,
	        dayOfYear: resDayOfYear
	    };
	}

	function weekOfYear(mom, dow, doy) {
	    var weekOffset = firstWeekOffset(mom.year(), dow, doy),
	        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
	        resWeek, resYear;

	    if (week < 1) {
	        resYear = mom.year() - 1;
	        resWeek = week + weeksInYear(resYear, dow, doy);
	    } else if (week > weeksInYear(mom.year(), dow, doy)) {
	        resWeek = week - weeksInYear(mom.year(), dow, doy);
	        resYear = mom.year() + 1;
	    } else {
	        resYear = mom.year();
	        resWeek = week;
	    }

	    return {
	        week: resWeek,
	        year: resYear
	    };
	}

	function weeksInYear(year, dow, doy) {
	    var weekOffset = firstWeekOffset(year, dow, doy),
	        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
	    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
	}

	// FORMATTING

	addFormatToken('w', ['ww', 2], 'wo', 'week');
	addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

	// ALIASES

	addUnitAlias('week', 'w');
	addUnitAlias('isoWeek', 'W');

	// PRIORITIES

	addUnitPriority('week', 5);
	addUnitPriority('isoWeek', 5);

	// PARSING

	addRegexToken('w',  match1to2);
	addRegexToken('ww', match1to2, match2);
	addRegexToken('W',  match1to2);
	addRegexToken('WW', match1to2, match2);

	addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
	    week[token.substr(0, 1)] = toInt(input);
	});

	// HELPERS

	// LOCALES

	function localeWeek (mom) {
	    return weekOfYear(mom, this._week.dow, this._week.doy).week;
	}

	var defaultLocaleWeek = {
	    dow : 0, // Sunday is the first day of the week.
	    doy : 6  // The week that contains Jan 1st is the first week of the year.
	};

	function localeFirstDayOfWeek () {
	    return this._week.dow;
	}

	function localeFirstDayOfYear () {
	    return this._week.doy;
	}

	// MOMENTS

	function getSetWeek (input) {
	    var week = this.localeData().week(this);
	    return input == null ? week : this.add((input - week) * 7, 'd');
	}

	function getSetISOWeek (input) {
	    var week = weekOfYear(this, 1, 4).week;
	    return input == null ? week : this.add((input - week) * 7, 'd');
	}

	// FORMATTING

	addFormatToken('d', 0, 'do', 'day');

	addFormatToken('dd', 0, 0, function (format) {
	    return this.localeData().weekdaysMin(this, format);
	});

	addFormatToken('ddd', 0, 0, function (format) {
	    return this.localeData().weekdaysShort(this, format);
	});

	addFormatToken('dddd', 0, 0, function (format) {
	    return this.localeData().weekdays(this, format);
	});

	addFormatToken('e', 0, 0, 'weekday');
	addFormatToken('E', 0, 0, 'isoWeekday');

	// ALIASES

	addUnitAlias('day', 'd');
	addUnitAlias('weekday', 'e');
	addUnitAlias('isoWeekday', 'E');

	// PRIORITY
	addUnitPriority('day', 11);
	addUnitPriority('weekday', 11);
	addUnitPriority('isoWeekday', 11);

	// PARSING

	addRegexToken('d',    match1to2);
	addRegexToken('e',    match1to2);
	addRegexToken('E',    match1to2);
	addRegexToken('dd',   function (isStrict, locale) {
	    return locale.weekdaysMinRegex(isStrict);
	});
	addRegexToken('ddd',   function (isStrict, locale) {
	    return locale.weekdaysShortRegex(isStrict);
	});
	addRegexToken('dddd',   function (isStrict, locale) {
	    return locale.weekdaysRegex(isStrict);
	});

	addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
	    var weekday = config._locale.weekdaysParse(input, token, config._strict);
	    // if we didn't get a weekday name, mark the date as invalid
	    if (weekday != null) {
	        week.d = weekday;
	    } else {
	        getParsingFlags(config).invalidWeekday = input;
	    }
	});

	addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
	    week[token] = toInt(input);
	});

	// HELPERS

	function parseWeekday(input, locale) {
	    if (typeof input !== 'string') {
	        return input;
	    }

	    if (!isNaN(input)) {
	        return parseInt(input, 10);
	    }

	    input = locale.weekdaysParse(input);
	    if (typeof input === 'number') {
	        return input;
	    }

	    return null;
	}

	function parseIsoWeekday(input, locale) {
	    if (typeof input === 'string') {
	        return locale.weekdaysParse(input) % 7 || 7;
	    }
	    return isNaN(input) ? null : input;
	}

	// LOCALES

	var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
	function localeWeekdays (m, format) {
	    if (!m) {
	        return isArray(this._weekdays) ? this._weekdays :
	            this._weekdays['standalone'];
	    }
	    return isArray(this._weekdays) ? this._weekdays[m.day()] :
	        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
	}

	var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
	function localeWeekdaysShort (m) {
	    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
	}

	var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
	function localeWeekdaysMin (m) {
	    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
	}

	function handleStrictParse$1(weekdayName, format, strict) {
	    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
	    if (!this._weekdaysParse) {
	        this._weekdaysParse = [];
	        this._shortWeekdaysParse = [];
	        this._minWeekdaysParse = [];

	        for (i = 0; i < 7; ++i) {
	            mom = createUTC([2000, 1]).day(i);
	            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
	            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
	            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
	        }
	    }

	    if (strict) {
	        if (format === 'dddd') {
	            ii = indexOf.call(this._weekdaysParse, llc);
	            return ii !== -1 ? ii : null;
	        } else if (format === 'ddd') {
	            ii = indexOf.call(this._shortWeekdaysParse, llc);
	            return ii !== -1 ? ii : null;
	        } else {
	            ii = indexOf.call(this._minWeekdaysParse, llc);
	            return ii !== -1 ? ii : null;
	        }
	    } else {
	        if (format === 'dddd') {
	            ii = indexOf.call(this._weekdaysParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf.call(this._shortWeekdaysParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf.call(this._minWeekdaysParse, llc);
	            return ii !== -1 ? ii : null;
	        } else if (format === 'ddd') {
	            ii = indexOf.call(this._shortWeekdaysParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf.call(this._weekdaysParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf.call(this._minWeekdaysParse, llc);
	            return ii !== -1 ? ii : null;
	        } else {
	            ii = indexOf.call(this._minWeekdaysParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf.call(this._weekdaysParse, llc);
	            if (ii !== -1) {
	                return ii;
	            }
	            ii = indexOf.call(this._shortWeekdaysParse, llc);
	            return ii !== -1 ? ii : null;
	        }
	    }
	}

	function localeWeekdaysParse (weekdayName, format, strict) {
	    var i, mom, regex;

	    if (this._weekdaysParseExact) {
	        return handleStrictParse$1.call(this, weekdayName, format, strict);
	    }

	    if (!this._weekdaysParse) {
	        this._weekdaysParse = [];
	        this._minWeekdaysParse = [];
	        this._shortWeekdaysParse = [];
	        this._fullWeekdaysParse = [];
	    }

	    for (i = 0; i < 7; i++) {
	        // make the regex if we don't have it already

	        mom = createUTC([2000, 1]).day(i);
	        if (strict && !this._fullWeekdaysParse[i]) {
	            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\.?') + '$', 'i');
	            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\.?') + '$', 'i');
	            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\.?') + '$', 'i');
	        }
	        if (!this._weekdaysParse[i]) {
	            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
	            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
	        }
	        // test the regex
	        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
	            return i;
	        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
	            return i;
	        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
	            return i;
	        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
	            return i;
	        }
	    }
	}

	// MOMENTS

	function getSetDayOfWeek (input) {
	    if (!this.isValid()) {
	        return input != null ? this : NaN;
	    }
	    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
	    if (input != null) {
	        input = parseWeekday(input, this.localeData());
	        return this.add(input - day, 'd');
	    } else {
	        return day;
	    }
	}

	function getSetLocaleDayOfWeek (input) {
	    if (!this.isValid()) {
	        return input != null ? this : NaN;
	    }
	    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
	    return input == null ? weekday : this.add(input - weekday, 'd');
	}

	function getSetISODayOfWeek (input) {
	    if (!this.isValid()) {
	        return input != null ? this : NaN;
	    }

	    // behaves the same as moment#day except
	    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
	    // as a setter, sunday should belong to the previous week.

	    if (input != null) {
	        var weekday = parseIsoWeekday(input, this.localeData());
	        return this.day(this.day() % 7 ? weekday : weekday - 7);
	    } else {
	        return this.day() || 7;
	    }
	}

	var defaultWeekdaysRegex = matchWord;
	function weekdaysRegex (isStrict) {
	    if (this._weekdaysParseExact) {
	        if (!hasOwnProp(this, '_weekdaysRegex')) {
	            computeWeekdaysParse.call(this);
	        }
	        if (isStrict) {
	            return this._weekdaysStrictRegex;
	        } else {
	            return this._weekdaysRegex;
	        }
	    } else {
	        if (!hasOwnProp(this, '_weekdaysRegex')) {
	            this._weekdaysRegex = defaultWeekdaysRegex;
	        }
	        return this._weekdaysStrictRegex && isStrict ?
	            this._weekdaysStrictRegex : this._weekdaysRegex;
	    }
	}

	var defaultWeekdaysShortRegex = matchWord;
	function weekdaysShortRegex (isStrict) {
	    if (this._weekdaysParseExact) {
	        if (!hasOwnProp(this, '_weekdaysRegex')) {
	            computeWeekdaysParse.call(this);
	        }
	        if (isStrict) {
	            return this._weekdaysShortStrictRegex;
	        } else {
	            return this._weekdaysShortRegex;
	        }
	    } else {
	        if (!hasOwnProp(this, '_weekdaysShortRegex')) {
	            this._weekdaysShortRegex = defaultWeekdaysShortRegex;
	        }
	        return this._weekdaysShortStrictRegex && isStrict ?
	            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
	    }
	}

	var defaultWeekdaysMinRegex = matchWord;
	function weekdaysMinRegex (isStrict) {
	    if (this._weekdaysParseExact) {
	        if (!hasOwnProp(this, '_weekdaysRegex')) {
	            computeWeekdaysParse.call(this);
	        }
	        if (isStrict) {
	            return this._weekdaysMinStrictRegex;
	        } else {
	            return this._weekdaysMinRegex;
	        }
	    } else {
	        if (!hasOwnProp(this, '_weekdaysMinRegex')) {
	            this._weekdaysMinRegex = defaultWeekdaysMinRegex;
	        }
	        return this._weekdaysMinStrictRegex && isStrict ?
	            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
	    }
	}


	function computeWeekdaysParse () {
	    function cmpLenRev(a, b) {
	        return b.length - a.length;
	    }

	    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
	        i, mom, minp, shortp, longp;
	    for (i = 0; i < 7; i++) {
	        // make the regex if we don't have it already
	        mom = createUTC([2000, 1]).day(i);
	        minp = this.weekdaysMin(mom, '');
	        shortp = this.weekdaysShort(mom, '');
	        longp = this.weekdays(mom, '');
	        minPieces.push(minp);
	        shortPieces.push(shortp);
	        longPieces.push(longp);
	        mixedPieces.push(minp);
	        mixedPieces.push(shortp);
	        mixedPieces.push(longp);
	    }
	    // Sorting makes sure if one weekday (or abbr) is a prefix of another it
	    // will match the longer piece.
	    minPieces.sort(cmpLenRev);
	    shortPieces.sort(cmpLenRev);
	    longPieces.sort(cmpLenRev);
	    mixedPieces.sort(cmpLenRev);
	    for (i = 0; i < 7; i++) {
	        shortPieces[i] = regexEscape(shortPieces[i]);
	        longPieces[i] = regexEscape(longPieces[i]);
	        mixedPieces[i] = regexEscape(mixedPieces[i]);
	    }

	    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
	    this._weekdaysShortRegex = this._weekdaysRegex;
	    this._weekdaysMinRegex = this._weekdaysRegex;

	    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
	    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
	    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
	}

	// FORMATTING

	function hFormat() {
	    return this.hours() % 12 || 12;
	}

	function kFormat() {
	    return this.hours() || 24;
	}

	addFormatToken('H', ['HH', 2], 0, 'hour');
	addFormatToken('h', ['hh', 2], 0, hFormat);
	addFormatToken('k', ['kk', 2], 0, kFormat);

	addFormatToken('hmm', 0, 0, function () {
	    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
	});

	addFormatToken('hmmss', 0, 0, function () {
	    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
	        zeroFill(this.seconds(), 2);
	});

	addFormatToken('Hmm', 0, 0, function () {
	    return '' + this.hours() + zeroFill(this.minutes(), 2);
	});

	addFormatToken('Hmmss', 0, 0, function () {
	    return '' + this.hours() + zeroFill(this.minutes(), 2) +
	        zeroFill(this.seconds(), 2);
	});

	function meridiem (token, lowercase) {
	    addFormatToken(token, 0, 0, function () {
	        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
	    });
	}

	meridiem('a', true);
	meridiem('A', false);

	// ALIASES

	addUnitAlias('hour', 'h');

	// PRIORITY
	addUnitPriority('hour', 13);

	// PARSING

	function matchMeridiem (isStrict, locale) {
	    return locale._meridiemParse;
	}

	addRegexToken('a',  matchMeridiem);
	addRegexToken('A',  matchMeridiem);
	addRegexToken('H',  match1to2);
	addRegexToken('h',  match1to2);
	addRegexToken('k',  match1to2);
	addRegexToken('HH', match1to2, match2);
	addRegexToken('hh', match1to2, match2);
	addRegexToken('kk', match1to2, match2);

	addRegexToken('hmm', match3to4);
	addRegexToken('hmmss', match5to6);
	addRegexToken('Hmm', match3to4);
	addRegexToken('Hmmss', match5to6);

	addParseToken(['H', 'HH'], HOUR);
	addParseToken(['k', 'kk'], function (input, array, config) {
	    var kInput = toInt(input);
	    array[HOUR] = kInput === 24 ? 0 : kInput;
	});
	addParseToken(['a', 'A'], function (input, array, config) {
	    config._isPm = config._locale.isPM(input);
	    config._meridiem = input;
	});
	addParseToken(['h', 'hh'], function (input, array, config) {
	    array[HOUR] = toInt(input);
	    getParsingFlags(config).bigHour = true;
	});
	addParseToken('hmm', function (input, array, config) {
	    var pos = input.length - 2;
	    array[HOUR] = toInt(input.substr(0, pos));
	    array[MINUTE] = toInt(input.substr(pos));
	    getParsingFlags(config).bigHour = true;
	});
	addParseToken('hmmss', function (input, array, config) {
	    var pos1 = input.length - 4;
	    var pos2 = input.length - 2;
	    array[HOUR] = toInt(input.substr(0, pos1));
	    array[MINUTE] = toInt(input.substr(pos1, 2));
	    array[SECOND] = toInt(input.substr(pos2));
	    getParsingFlags(config).bigHour = true;
	});
	addParseToken('Hmm', function (input, array, config) {
	    var pos = input.length - 2;
	    array[HOUR] = toInt(input.substr(0, pos));
	    array[MINUTE] = toInt(input.substr(pos));
	});
	addParseToken('Hmmss', function (input, array, config) {
	    var pos1 = input.length - 4;
	    var pos2 = input.length - 2;
	    array[HOUR] = toInt(input.substr(0, pos1));
	    array[MINUTE] = toInt(input.substr(pos1, 2));
	    array[SECOND] = toInt(input.substr(pos2));
	});

	// LOCALES

	function localeIsPM (input) {
	    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
	    // Using charAt should be more compatible.
	    return ((input + '').toLowerCase().charAt(0) === 'p');
	}

	var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
	function localeMeridiem (hours, minutes, isLower) {
	    if (hours > 11) {
	        return isLower ? 'pm' : 'PM';
	    } else {
	        return isLower ? 'am' : 'AM';
	    }
	}


	// MOMENTS

	// Setting the hour should keep the time, because the user explicitly
	// specified which hour he wants. So trying to maintain the same hour (in
	// a new timezone) makes sense. Adding/subtracting hours does not follow
	// this rule.
	var getSetHour = makeGetSet('Hours', true);

	// months
	// week
	// weekdays
	// meridiem
	var baseConfig = {
	    calendar: defaultCalendar,
	    longDateFormat: defaultLongDateFormat,
	    invalidDate: defaultInvalidDate,
	    ordinal: defaultOrdinal,
	    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
	    relativeTime: defaultRelativeTime,

	    months: defaultLocaleMonths,
	    monthsShort: defaultLocaleMonthsShort,

	    week: defaultLocaleWeek,

	    weekdays: defaultLocaleWeekdays,
	    weekdaysMin: defaultLocaleWeekdaysMin,
	    weekdaysShort: defaultLocaleWeekdaysShort,

	    meridiemParse: defaultLocaleMeridiemParse
	};

	// internal storage for locale config files
	var locales = {};
	var localeFamilies = {};
	var globalLocale;

	function normalizeLocale(key) {
	    return key ? key.toLowerCase().replace('_', '-') : key;
	}

	// pick the locale from the array
	// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
	// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
	function chooseLocale(names) {
	    var i = 0, j, next, locale, split;

	    while (i < names.length) {
	        split = normalizeLocale(names[i]).split('-');
	        j = split.length;
	        next = normalizeLocale(names[i + 1]);
	        next = next ? next.split('-') : null;
	        while (j > 0) {
	            locale = loadLocale(split.slice(0, j).join('-'));
	            if (locale) {
	                return locale;
	            }
	            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
	                //the next array item is better than a shallower substring of this one
	                break;
	            }
	            j--;
	        }
	        i++;
	    }
	    return null;
	}

	function loadLocale(name) {
	    var oldLocale = null;
	    // TODO: Find a better way to register and load all the locales in Node
	    if (!locales[name] && (typeof module !== 'undefined') &&
	            module && module.exports) {
	        try {
	            oldLocale = globalLocale._abbr;
	            var aliasedRequire = require;
	            __webpack_require__(26)("./" + name);
	            getSetGlobalLocale(oldLocale);
	        } catch (e) {}
	    }
	    return locales[name];
	}

	// This function will load locale and then set the global locale.  If
	// no arguments are passed in, it will simply return the current global
	// locale key.
	function getSetGlobalLocale (key, values) {
	    var data;
	    if (key) {
	        if (isUndefined(values)) {
	            data = getLocale(key);
	        }
	        else {
	            data = defineLocale(key, values);
	        }

	        if (data) {
	            // moment.duration._locale = moment._locale = data;
	            globalLocale = data;
	        }
	    }

	    return globalLocale._abbr;
	}

	function defineLocale (name, config) {
	    if (config !== null) {
	        var parentConfig = baseConfig;
	        config.abbr = name;
	        if (locales[name] != null) {
	            deprecateSimple('defineLocaleOverride',
	                    'use moment.updateLocale(localeName, config) to change ' +
	                    'an existing locale. moment.defineLocale(localeName, ' +
	                    'config) should only be used for creating a new locale ' +
	                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
	            parentConfig = locales[name]._config;
	        } else if (config.parentLocale != null) {
	            if (locales[config.parentLocale] != null) {
	                parentConfig = locales[config.parentLocale]._config;
	            } else {
	                if (!localeFamilies[config.parentLocale]) {
	                    localeFamilies[config.parentLocale] = [];
	                }
	                localeFamilies[config.parentLocale].push({
	                    name: name,
	                    config: config
	                });
	                return null;
	            }
	        }
	        locales[name] = new Locale(mergeConfigs(parentConfig, config));

	        if (localeFamilies[name]) {
	            localeFamilies[name].forEach(function (x) {
	                defineLocale(x.name, x.config);
	            });
	        }

	        // backwards compat for now: also set the locale
	        // make sure we set the locale AFTER all child locales have been
	        // created, so we won't end up with the child locale set.
	        getSetGlobalLocale(name);


	        return locales[name];
	    } else {
	        // useful for testing
	        delete locales[name];
	        return null;
	    }
	}

	function updateLocale(name, config) {
	    if (config != null) {
	        var locale, tmpLocale, parentConfig = baseConfig;
	        // MERGE
	        tmpLocale = loadLocale(name);
	        if (tmpLocale != null) {
	            parentConfig = tmpLocale._config;
	        }
	        config = mergeConfigs(parentConfig, config);
	        locale = new Locale(config);
	        locale.parentLocale = locales[name];
	        locales[name] = locale;

	        // backwards compat for now: also set the locale
	        getSetGlobalLocale(name);
	    } else {
	        // pass null for config to unupdate, useful for tests
	        if (locales[name] != null) {
	            if (locales[name].parentLocale != null) {
	                locales[name] = locales[name].parentLocale;
	            } else if (locales[name] != null) {
	                delete locales[name];
	            }
	        }
	    }
	    return locales[name];
	}

	// returns locale data
	function getLocale (key) {
	    var locale;

	    if (key && key._locale && key._locale._abbr) {
	        key = key._locale._abbr;
	    }

	    if (!key) {
	        return globalLocale;
	    }

	    if (!isArray(key)) {
	        //short-circuit everything else
	        locale = loadLocale(key);
	        if (locale) {
	            return locale;
	        }
	        key = [key];
	    }

	    return chooseLocale(key);
	}

	function listLocales() {
	    return keys(locales);
	}

	function checkOverflow (m) {
	    var overflow;
	    var a = m._a;

	    if (a && getParsingFlags(m).overflow === -2) {
	        overflow =
	            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
	            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
	            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
	            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
	            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
	            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
	            -1;

	        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
	            overflow = DATE;
	        }
	        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
	            overflow = WEEK;
	        }
	        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
	            overflow = WEEKDAY;
	        }

	        getParsingFlags(m).overflow = overflow;
	    }

	    return m;
	}

	// Pick the first defined of two or three arguments.
	function defaults(a, b, c) {
	    if (a != null) {
	        return a;
	    }
	    if (b != null) {
	        return b;
	    }
	    return c;
	}

	function currentDateArray(config) {
	    // hooks is actually the exported moment object
	    var nowValue = new Date(hooks.now());
	    if (config._useUTC) {
	        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
	    }
	    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
	}

	// convert an array to a date.
	// the array should mirror the parameters below
	// note: all values past the year are optional and will default to the lowest possible value.
	// [year, month, day , hour, minute, second, millisecond]
	function configFromArray (config) {
	    var i, date, input = [], currentDate, expectedWeekday, yearToUse;

	    if (config._d) {
	        return;
	    }

	    currentDate = currentDateArray(config);

	    //compute day of the year from weeks and weekdays
	    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
	        dayOfYearFromWeekInfo(config);
	    }

	    //if the day of the year is set, figure out what it is
	    if (config._dayOfYear != null) {
	        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

	        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
	            getParsingFlags(config)._overflowDayOfYear = true;
	        }

	        date = createUTCDate(yearToUse, 0, config._dayOfYear);
	        config._a[MONTH] = date.getUTCMonth();
	        config._a[DATE] = date.getUTCDate();
	    }

	    // Default to current date.
	    // * if no year, month, day of month are given, default to today
	    // * if day of month is given, default month and year
	    // * if month is given, default only year
	    // * if year is given, don't default anything
	    for (i = 0; i < 3 && config._a[i] == null; ++i) {
	        config._a[i] = input[i] = currentDate[i];
	    }

	    // Zero out whatever was not defaulted, including time
	    for (; i < 7; i++) {
	        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
	    }

	    // Check for 24:00:00.000
	    if (config._a[HOUR] === 24 &&
	            config._a[MINUTE] === 0 &&
	            config._a[SECOND] === 0 &&
	            config._a[MILLISECOND] === 0) {
	        config._nextDay = true;
	        config._a[HOUR] = 0;
	    }

	    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
	    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();

	    // Apply timezone offset from input. The actual utcOffset can be changed
	    // with parseZone.
	    if (config._tzm != null) {
	        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
	    }

	    if (config._nextDay) {
	        config._a[HOUR] = 24;
	    }

	    // check for mismatching day of week
	    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {
	        getParsingFlags(config).weekdayMismatch = true;
	    }
	}

	function dayOfYearFromWeekInfo(config) {
	    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

	    w = config._w;
	    if (w.GG != null || w.W != null || w.E != null) {
	        dow = 1;
	        doy = 4;

	        // TODO: We need to take the current isoWeekYear, but that depends on
	        // how we interpret now (local, utc, fixed offset). So create
	        // a now version of current config (take local/utc/offset flags, and
	        // create now).
	        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
	        week = defaults(w.W, 1);
	        weekday = defaults(w.E, 1);
	        if (weekday < 1 || weekday > 7) {
	            weekdayOverflow = true;
	        }
	    } else {
	        dow = config._locale._week.dow;
	        doy = config._locale._week.doy;

	        var curWeek = weekOfYear(createLocal(), dow, doy);

	        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

	        // Default to current week.
	        week = defaults(w.w, curWeek.week);

	        if (w.d != null) {
	            // weekday -- low day numbers are considered next week
	            weekday = w.d;
	            if (weekday < 0 || weekday > 6) {
	                weekdayOverflow = true;
	            }
	        } else if (w.e != null) {
	            // local weekday -- counting starts from begining of week
	            weekday = w.e + dow;
	            if (w.e < 0 || w.e > 6) {
	                weekdayOverflow = true;
	            }
	        } else {
	            // default to begining of week
	            weekday = dow;
	        }
	    }
	    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
	        getParsingFlags(config)._overflowWeeks = true;
	    } else if (weekdayOverflow != null) {
	        getParsingFlags(config)._overflowWeekday = true;
	    } else {
	        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
	        config._a[YEAR] = temp.year;
	        config._dayOfYear = temp.dayOfYear;
	    }
	}

	// iso 8601 regex
	// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
	var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
	var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

	var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

	var isoDates = [
	    ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
	    ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
	    ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
	    ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
	    ['YYYY-DDD', /\d{4}-\d{3}/],
	    ['YYYY-MM', /\d{4}-\d\d/, false],
	    ['YYYYYYMMDD', /[+-]\d{10}/],
	    ['YYYYMMDD', /\d{8}/],
	    // YYYYMM is NOT allowed by the standard
	    ['GGGG[W]WWE', /\d{4}W\d{3}/],
	    ['GGGG[W]WW', /\d{4}W\d{2}/, false],
	    ['YYYYDDD', /\d{7}/]
	];

	// iso time formats and regexes
	var isoTimes = [
	    ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
	    ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
	    ['HH:mm:ss', /\d\d:\d\d:\d\d/],
	    ['HH:mm', /\d\d:\d\d/],
	    ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
	    ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
	    ['HHmmss', /\d\d\d\d\d\d/],
	    ['HHmm', /\d\d\d\d/],
	    ['HH', /\d\d/]
	];

	var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

	// date from iso format
	function configFromISO(config) {
	    var i, l,
	        string = config._i,
	        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
	        allowTime, dateFormat, timeFormat, tzFormat;

	    if (match) {
	        getParsingFlags(config).iso = true;

	        for (i = 0, l = isoDates.length; i < l; i++) {
	            if (isoDates[i][1].exec(match[1])) {
	                dateFormat = isoDates[i][0];
	                allowTime = isoDates[i][2] !== false;
	                break;
	            }
	        }
	        if (dateFormat == null) {
	            config._isValid = false;
	            return;
	        }
	        if (match[3]) {
	            for (i = 0, l = isoTimes.length; i < l; i++) {
	                if (isoTimes[i][1].exec(match[3])) {
	                    // match[2] should be 'T' or space
	                    timeFormat = (match[2] || ' ') + isoTimes[i][0];
	                    break;
	                }
	            }
	            if (timeFormat == null) {
	                config._isValid = false;
	                return;
	            }
	        }
	        if (!allowTime && timeFormat != null) {
	            config._isValid = false;
	            return;
	        }
	        if (match[4]) {
	            if (tzRegex.exec(match[4])) {
	                tzFormat = 'Z';
	            } else {
	                config._isValid = false;
	                return;
	            }
	        }
	        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
	        configFromStringAndFormat(config);
	    } else {
	        config._isValid = false;
	    }
	}

	// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
	var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

	function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
	    var result = [
	        untruncateYear(yearStr),
	        defaultLocaleMonthsShort.indexOf(monthStr),
	        parseInt(dayStr, 10),
	        parseInt(hourStr, 10),
	        parseInt(minuteStr, 10)
	    ];

	    if (secondStr) {
	        result.push(parseInt(secondStr, 10));
	    }

	    return result;
	}

	function untruncateYear(yearStr) {
	    var year = parseInt(yearStr, 10);
	    if (year <= 49) {
	        return 2000 + year;
	    } else if (year <= 999) {
	        return 1900 + year;
	    }
	    return year;
	}

	function preprocessRFC2822(s) {
	    // Remove comments and folding whitespace and replace multiple-spaces with a single space
	    return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').trim();
	}

	function checkWeekday(weekdayStr, parsedInput, config) {
	    if (weekdayStr) {
	        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
	        var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
	            weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
	        if (weekdayProvided !== weekdayActual) {
	            getParsingFlags(config).weekdayMismatch = true;
	            config._isValid = false;
	            return false;
	        }
	    }
	    return true;
	}

	var obsOffsets = {
	    UT: 0,
	    GMT: 0,
	    EDT: -4 * 60,
	    EST: -5 * 60,
	    CDT: -5 * 60,
	    CST: -6 * 60,
	    MDT: -6 * 60,
	    MST: -7 * 60,
	    PDT: -7 * 60,
	    PST: -8 * 60
	};

	function calculateOffset(obsOffset, militaryOffset, numOffset) {
	    if (obsOffset) {
	        return obsOffsets[obsOffset];
	    } else if (militaryOffset) {
	        // the only allowed military tz is Z
	        return 0;
	    } else {
	        var hm = parseInt(numOffset, 10);
	        var m = hm % 100, h = (hm - m) / 100;
	        return h * 60 + m;
	    }
	}

	// date and time from ref 2822 format
	function configFromRFC2822(config) {
	    var match = rfc2822.exec(preprocessRFC2822(config._i));
	    if (match) {
	        var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
	        if (!checkWeekday(match[1], parsedArray, config)) {
	            return;
	        }

	        config._a = parsedArray;
	        config._tzm = calculateOffset(match[8], match[9], match[10]);

	        config._d = createUTCDate.apply(null, config._a);
	        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

	        getParsingFlags(config).rfc2822 = true;
	    } else {
	        config._isValid = false;
	    }
	}

	// date from iso format or fallback
	function configFromString(config) {
	    var matched = aspNetJsonRegex.exec(config._i);

	    if (matched !== null) {
	        config._d = new Date(+matched[1]);
	        return;
	    }

	    configFromISO(config);
	    if (config._isValid === false) {
	        delete config._isValid;
	    } else {
	        return;
	    }

	    configFromRFC2822(config);
	    if (config._isValid === false) {
	        delete config._isValid;
	    } else {
	        return;
	    }

	    // Final attempt, use Input Fallback
	    hooks.createFromInputFallback(config);
	}

	hooks.createFromInputFallback = deprecate(
	    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
	    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
	    'discouraged and will be removed in an upcoming major release. Please refer to ' +
	    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
	    function (config) {
	        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
	    }
	);

	// constant that refers to the ISO standard
	hooks.ISO_8601 = function () {};

	// constant that refers to the RFC 2822 form
	hooks.RFC_2822 = function () {};

	// date from string and format string
	function configFromStringAndFormat(config) {
	    // TODO: Move this to another part of the creation flow to prevent circular deps
	    if (config._f === hooks.ISO_8601) {
	        configFromISO(config);
	        return;
	    }
	    if (config._f === hooks.RFC_2822) {
	        configFromRFC2822(config);
	        return;
	    }
	    config._a = [];
	    getParsingFlags(config).empty = true;

	    // This array is used to make a Date, either with `new Date` or `Date.UTC`
	    var string = '' + config._i,
	        i, parsedInput, tokens, token, skipped,
	        stringLength = string.length,
	        totalParsedInputLength = 0;

	    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

	    for (i = 0; i < tokens.length; i++) {
	        token = tokens[i];
	        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
	        // console.log('token', token, 'parsedInput', parsedInput,
	        //         'regex', getParseRegexForToken(token, config));
	        if (parsedInput) {
	            skipped = string.substr(0, string.indexOf(parsedInput));
	            if (skipped.length > 0) {
	                getParsingFlags(config).unusedInput.push(skipped);
	            }
	            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
	            totalParsedInputLength += parsedInput.length;
	        }
	        // don't parse if it's not a known token
	        if (formatTokenFunctions[token]) {
	            if (parsedInput) {
	                getParsingFlags(config).empty = false;
	            }
	            else {
	                getParsingFlags(config).unusedTokens.push(token);
	            }
	            addTimeToArrayFromToken(token, parsedInput, config);
	        }
	        else if (config._strict && !parsedInput) {
	            getParsingFlags(config).unusedTokens.push(token);
	        }
	    }

	    // add remaining unparsed input length to the string
	    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
	    if (string.length > 0) {
	        getParsingFlags(config).unusedInput.push(string);
	    }

	    // clear _12h flag if hour is <= 12
	    if (config._a[HOUR] <= 12 &&
	        getParsingFlags(config).bigHour === true &&
	        config._a[HOUR] > 0) {
	        getParsingFlags(config).bigHour = undefined;
	    }

	    getParsingFlags(config).parsedDateParts = config._a.slice(0);
	    getParsingFlags(config).meridiem = config._meridiem;
	    // handle meridiem
	    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

	    configFromArray(config);
	    checkOverflow(config);
	}


	function meridiemFixWrap (locale, hour, meridiem) {
	    var isPm;

	    if (meridiem == null) {
	        // nothing to do
	        return hour;
	    }
	    if (locale.meridiemHour != null) {
	        return locale.meridiemHour(hour, meridiem);
	    } else if (locale.isPM != null) {
	        // Fallback
	        isPm = locale.isPM(meridiem);
	        if (isPm && hour < 12) {
	            hour += 12;
	        }
	        if (!isPm && hour === 12) {
	            hour = 0;
	        }
	        return hour;
	    } else {
	        // this is not supposed to happen
	        return hour;
	    }
	}

	// date from string and array of format strings
	function configFromStringAndArray(config) {
	    var tempConfig,
	        bestMoment,

	        scoreToBeat,
	        i,
	        currentScore;

	    if (config._f.length === 0) {
	        getParsingFlags(config).invalidFormat = true;
	        config._d = new Date(NaN);
	        return;
	    }

	    for (i = 0; i < config._f.length; i++) {
	        currentScore = 0;
	        tempConfig = copyConfig({}, config);
	        if (config._useUTC != null) {
	            tempConfig._useUTC = config._useUTC;
	        }
	        tempConfig._f = config._f[i];
	        configFromStringAndFormat(tempConfig);

	        if (!isValid(tempConfig)) {
	            continue;
	        }

	        // if there is any input that was not parsed add a penalty for that format
	        currentScore += getParsingFlags(tempConfig).charsLeftOver;

	        //or tokens
	        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

	        getParsingFlags(tempConfig).score = currentScore;

	        if (scoreToBeat == null || currentScore < scoreToBeat) {
	            scoreToBeat = currentScore;
	            bestMoment = tempConfig;
	        }
	    }

	    extend(config, bestMoment || tempConfig);
	}

	function configFromObject(config) {
	    if (config._d) {
	        return;
	    }

	    var i = normalizeObjectUnits(config._i);
	    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
	        return obj && parseInt(obj, 10);
	    });

	    configFromArray(config);
	}

	function createFromConfig (config) {
	    var res = new Moment(checkOverflow(prepareConfig(config)));
	    if (res._nextDay) {
	        // Adding is smart enough around DST
	        res.add(1, 'd');
	        res._nextDay = undefined;
	    }

	    return res;
	}

	function prepareConfig (config) {
	    var input = config._i,
	        format = config._f;

	    config._locale = config._locale || getLocale(config._l);

	    if (input === null || (format === undefined && input === '')) {
	        return createInvalid({nullInput: true});
	    }

	    if (typeof input === 'string') {
	        config._i = input = config._locale.preparse(input);
	    }

	    if (isMoment(input)) {
	        return new Moment(checkOverflow(input));
	    } else if (isDate(input)) {
	        config._d = input;
	    } else if (isArray(format)) {
	        configFromStringAndArray(config);
	    } else if (format) {
	        configFromStringAndFormat(config);
	    }  else {
	        configFromInput(config);
	    }

	    if (!isValid(config)) {
	        config._d = null;
	    }

	    return config;
	}

	function configFromInput(config) {
	    var input = config._i;
	    if (isUndefined(input)) {
	        config._d = new Date(hooks.now());
	    } else if (isDate(input)) {
	        config._d = new Date(input.valueOf());
	    } else if (typeof input === 'string') {
	        configFromString(config);
	    } else if (isArray(input)) {
	        config._a = map(input.slice(0), function (obj) {
	            return parseInt(obj, 10);
	        });
	        configFromArray(config);
	    } else if (isObject(input)) {
	        configFromObject(config);
	    } else if (isNumber(input)) {
	        // from milliseconds
	        config._d = new Date(input);
	    } else {
	        hooks.createFromInputFallback(config);
	    }
	}

	function createLocalOrUTC (input, format, locale, strict, isUTC) {
	    var c = {};

	    if (locale === true || locale === false) {
	        strict = locale;
	        locale = undefined;
	    }

	    if ((isObject(input) && isObjectEmpty(input)) ||
	            (isArray(input) && input.length === 0)) {
	        input = undefined;
	    }
	    // object construction must be done this way.
	    // https://github.com/moment/moment/issues/1423
	    c._isAMomentObject = true;
	    c._useUTC = c._isUTC = isUTC;
	    c._l = locale;
	    c._i = input;
	    c._f = format;
	    c._strict = strict;

	    return createFromConfig(c);
	}

	function createLocal (input, format, locale, strict) {
	    return createLocalOrUTC(input, format, locale, strict, false);
	}

	var prototypeMin = deprecate(
	    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
	    function () {
	        var other = createLocal.apply(null, arguments);
	        if (this.isValid() && other.isValid()) {
	            return other < this ? this : other;
	        } else {
	            return createInvalid();
	        }
	    }
	);

	var prototypeMax = deprecate(
	    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
	    function () {
	        var other = createLocal.apply(null, arguments);
	        if (this.isValid() && other.isValid()) {
	            return other > this ? this : other;
	        } else {
	            return createInvalid();
	        }
	    }
	);

	// Pick a moment m from moments so that m[fn](other) is true for all
	// other. This relies on the function fn to be transitive.
	//
	// moments should either be an array of moment objects or an array, whose
	// first element is an array of moment objects.
	function pickBy(fn, moments) {
	    var res, i;
	    if (moments.length === 1 && isArray(moments[0])) {
	        moments = moments[0];
	    }
	    if (!moments.length) {
	        return createLocal();
	    }
	    res = moments[0];
	    for (i = 1; i < moments.length; ++i) {
	        if (!moments[i].isValid() || moments[i][fn](res)) {
	            res = moments[i];
	        }
	    }
	    return res;
	}

	// TODO: Use [].sort instead?
	function min () {
	    var args = [].slice.call(arguments, 0);

	    return pickBy('isBefore', args);
	}

	function max () {
	    var args = [].slice.call(arguments, 0);

	    return pickBy('isAfter', args);
	}

	var now = function () {
	    return Date.now ? Date.now() : +(new Date());
	};

	var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

	function isDurationValid(m) {
	    for (var key in m) {
	        if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
	            return false;
	        }
	    }

	    var unitHasDecimal = false;
	    for (var i = 0; i < ordering.length; ++i) {
	        if (m[ordering[i]]) {
	            if (unitHasDecimal) {
	                return false; // only allow non-integers for smallest unit
	            }
	            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
	                unitHasDecimal = true;
	            }
	        }
	    }

	    return true;
	}

	function isValid$1() {
	    return this._isValid;
	}

	function createInvalid$1() {
	    return createDuration(NaN);
	}

	function Duration (duration) {
	    var normalizedInput = normalizeObjectUnits(duration),
	        years = normalizedInput.year || 0,
	        quarters = normalizedInput.quarter || 0,
	        months = normalizedInput.month || 0,
	        weeks = normalizedInput.week || 0,
	        days = normalizedInput.day || 0,
	        hours = normalizedInput.hour || 0,
	        minutes = normalizedInput.minute || 0,
	        seconds = normalizedInput.second || 0,
	        milliseconds = normalizedInput.millisecond || 0;

	    this._isValid = isDurationValid(normalizedInput);

	    // representation for dateAddRemove
	    this._milliseconds = +milliseconds +
	        seconds * 1e3 + // 1000
	        minutes * 6e4 + // 1000 * 60
	        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
	    // Because of dateAddRemove treats 24 hours as different from a
	    // day when working around DST, we need to store them separately
	    this._days = +days +
	        weeks * 7;
	    // It is impossible to translate months into days without knowing
	    // which months you are are talking about, so we have to store
	    // it separately.
	    this._months = +months +
	        quarters * 3 +
	        years * 12;

	    this._data = {};

	    this._locale = getLocale();

	    this._bubble();
	}

	function isDuration (obj) {
	    return obj instanceof Duration;
	}

	function absRound (number) {
	    if (number < 0) {
	        return Math.round(-1 * number) * -1;
	    } else {
	        return Math.round(number);
	    }
	}

	// FORMATTING

	function offset (token, separator) {
	    addFormatToken(token, 0, 0, function () {
	        var offset = this.utcOffset();
	        var sign = '+';
	        if (offset < 0) {
	            offset = -offset;
	            sign = '-';
	        }
	        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
	    });
	}

	offset('Z', ':');
	offset('ZZ', '');

	// PARSING

	addRegexToken('Z',  matchShortOffset);
	addRegexToken('ZZ', matchShortOffset);
	addParseToken(['Z', 'ZZ'], function (input, array, config) {
	    config._useUTC = true;
	    config._tzm = offsetFromString(matchShortOffset, input);
	});

	// HELPERS

	// timezone chunker
	// '+10:00' > ['10',  '00']
	// '-1530'  > ['-15', '30']
	var chunkOffset = /([\+\-]|\d\d)/gi;

	function offsetFromString(matcher, string) {
	    var matches = (string || '').match(matcher);

	    if (matches === null) {
	        return null;
	    }

	    var chunk   = matches[matches.length - 1] || [];
	    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
	    var minutes = +(parts[1] * 60) + toInt(parts[2]);

	    return minutes === 0 ?
	      0 :
	      parts[0] === '+' ? minutes : -minutes;
	}

	// Return a moment from input, that is local/utc/zone equivalent to model.
	function cloneWithOffset(input, model) {
	    var res, diff;
	    if (model._isUTC) {
	        res = model.clone();
	        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
	        // Use low-level api, because this fn is low-level api.
	        res._d.setTime(res._d.valueOf() + diff);
	        hooks.updateOffset(res, false);
	        return res;
	    } else {
	        return createLocal(input).local();
	    }
	}

	function getDateOffset (m) {
	    // On Firefox.24 Date#getTimezoneOffset returns a floating point.
	    // https://github.com/moment/moment/pull/1871
	    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
	}

	// HOOKS

	// This function will be called whenever a moment is mutated.
	// It is intended to keep the offset in sync with the timezone.
	hooks.updateOffset = function () {};

	// MOMENTS

	// keepLocalTime = true means only change the timezone, without
	// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
	// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
	// +0200, so we adjust the time as needed, to be valid.
	//
	// Keeping the time actually adds/subtracts (one hour)
	// from the actual represented time. That is why we call updateOffset
	// a second time. In case it wants us to change the offset again
	// _changeInProgress == true case, then we have to adjust, because
	// there is no such time in the given timezone.
	function getSetOffset (input, keepLocalTime, keepMinutes) {
	    var offset = this._offset || 0,
	        localAdjust;
	    if (!this.isValid()) {
	        return input != null ? this : NaN;
	    }
	    if (input != null) {
	        if (typeof input === 'string') {
	            input = offsetFromString(matchShortOffset, input);
	            if (input === null) {
	                return this;
	            }
	        } else if (Math.abs(input) < 16 && !keepMinutes) {
	            input = input * 60;
	        }
	        if (!this._isUTC && keepLocalTime) {
	            localAdjust = getDateOffset(this);
	        }
	        this._offset = input;
	        this._isUTC = true;
	        if (localAdjust != null) {
	            this.add(localAdjust, 'm');
	        }
	        if (offset !== input) {
	            if (!keepLocalTime || this._changeInProgress) {
	                addSubtract(this, createDuration(input - offset, 'm'), 1, false);
	            } else if (!this._changeInProgress) {
	                this._changeInProgress = true;
	                hooks.updateOffset(this, true);
	                this._changeInProgress = null;
	            }
	        }
	        return this;
	    } else {
	        return this._isUTC ? offset : getDateOffset(this);
	    }
	}

	function getSetZone (input, keepLocalTime) {
	    if (input != null) {
	        if (typeof input !== 'string') {
	            input = -input;
	        }

	        this.utcOffset(input, keepLocalTime);

	        return this;
	    } else {
	        return -this.utcOffset();
	    }
	}

	function setOffsetToUTC (keepLocalTime) {
	    return this.utcOffset(0, keepLocalTime);
	}

	function setOffsetToLocal (keepLocalTime) {
	    if (this._isUTC) {
	        this.utcOffset(0, keepLocalTime);
	        this._isUTC = false;

	        if (keepLocalTime) {
	            this.subtract(getDateOffset(this), 'm');
	        }
	    }
	    return this;
	}

	function setOffsetToParsedOffset () {
	    if (this._tzm != null) {
	        this.utcOffset(this._tzm, false, true);
	    } else if (typeof this._i === 'string') {
	        var tZone = offsetFromString(matchOffset, this._i);
	        if (tZone != null) {
	            this.utcOffset(tZone);
	        }
	        else {
	            this.utcOffset(0, true);
	        }
	    }
	    return this;
	}

	function hasAlignedHourOffset (input) {
	    if (!this.isValid()) {
	        return false;
	    }
	    input = input ? createLocal(input).utcOffset() : 0;

	    return (this.utcOffset() - input) % 60 === 0;
	}

	function isDaylightSavingTime () {
	    return (
	        this.utcOffset() > this.clone().month(0).utcOffset() ||
	        this.utcOffset() > this.clone().month(5).utcOffset()
	    );
	}

	function isDaylightSavingTimeShifted () {
	    if (!isUndefined(this._isDSTShifted)) {
	        return this._isDSTShifted;
	    }

	    var c = {};

	    copyConfig(c, this);
	    c = prepareConfig(c);

	    if (c._a) {
	        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
	        this._isDSTShifted = this.isValid() &&
	            compareArrays(c._a, other.toArray()) > 0;
	    } else {
	        this._isDSTShifted = false;
	    }

	    return this._isDSTShifted;
	}

	function isLocal () {
	    return this.isValid() ? !this._isUTC : false;
	}

	function isUtcOffset () {
	    return this.isValid() ? this._isUTC : false;
	}

	function isUtc () {
	    return this.isValid() ? this._isUTC && this._offset === 0 : false;
	}

	// ASP.NET json date format regex
	var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

	// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
	// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
	// and further modified to allow for strings containing both week and day
	var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

	function createDuration (input, key) {
	    var duration = input,
	        // matching against regexp is expensive, do it on demand
	        match = null,
	        sign,
	        ret,
	        diffRes;

	    if (isDuration(input)) {
	        duration = {
	            ms : input._milliseconds,
	            d  : input._days,
	            M  : input._months
	        };
	    } else if (isNumber(input)) {
	        duration = {};
	        if (key) {
	            duration[key] = input;
	        } else {
	            duration.milliseconds = input;
	        }
	    } else if (!!(match = aspNetRegex.exec(input))) {
	        sign = (match[1] === '-') ? -1 : 1;
	        duration = {
	            y  : 0,
	            d  : toInt(match[DATE])                         * sign,
	            h  : toInt(match[HOUR])                         * sign,
	            m  : toInt(match[MINUTE])                       * sign,
	            s  : toInt(match[SECOND])                       * sign,
	            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
	        };
	    } else if (!!(match = isoRegex.exec(input))) {
	        sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;
	        duration = {
	            y : parseIso(match[2], sign),
	            M : parseIso(match[3], sign),
	            w : parseIso(match[4], sign),
	            d : parseIso(match[5], sign),
	            h : parseIso(match[6], sign),
	            m : parseIso(match[7], sign),
	            s : parseIso(match[8], sign)
	        };
	    } else if (duration == null) {// checks for null or undefined
	        duration = {};
	    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
	        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

	        duration = {};
	        duration.ms = diffRes.milliseconds;
	        duration.M = diffRes.months;
	    }

	    ret = new Duration(duration);

	    if (isDuration(input) && hasOwnProp(input, '_locale')) {
	        ret._locale = input._locale;
	    }

	    return ret;
	}

	createDuration.fn = Duration.prototype;
	createDuration.invalid = createInvalid$1;

	function parseIso (inp, sign) {
	    // We'd normally use ~~inp for this, but unfortunately it also
	    // converts floats to ints.
	    // inp may be undefined, so careful calling replace on it.
	    var res = inp && parseFloat(inp.replace(',', '.'));
	    // apply sign while we're at it
	    return (isNaN(res) ? 0 : res) * sign;
	}

	function positiveMomentsDifference(base, other) {
	    var res = {milliseconds: 0, months: 0};

	    res.months = other.month() - base.month() +
	        (other.year() - base.year()) * 12;
	    if (base.clone().add(res.months, 'M').isAfter(other)) {
	        --res.months;
	    }

	    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

	    return res;
	}

	function momentsDifference(base, other) {
	    var res;
	    if (!(base.isValid() && other.isValid())) {
	        return {milliseconds: 0, months: 0};
	    }

	    other = cloneWithOffset(other, base);
	    if (base.isBefore(other)) {
	        res = positiveMomentsDifference(base, other);
	    } else {
	        res = positiveMomentsDifference(other, base);
	        res.milliseconds = -res.milliseconds;
	        res.months = -res.months;
	    }

	    return res;
	}

	// TODO: remove 'name' arg after deprecation is removed
	function createAdder(direction, name) {
	    return function (val, period) {
	        var dur, tmp;
	        //invert the arguments, but complain about it
	        if (period !== null && !isNaN(+period)) {
	            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
	            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
	            tmp = val; val = period; period = tmp;
	        }

	        val = typeof val === 'string' ? +val : val;
	        dur = createDuration(val, period);
	        addSubtract(this, dur, direction);
	        return this;
	    };
	}

	function addSubtract (mom, duration, isAdding, updateOffset) {
	    var milliseconds = duration._milliseconds,
	        days = absRound(duration._days),
	        months = absRound(duration._months);

	    if (!mom.isValid()) {
	        // No op
	        return;
	    }

	    updateOffset = updateOffset == null ? true : updateOffset;

	    if (months) {
	        setMonth(mom, get(mom, 'Month') + months * isAdding);
	    }
	    if (days) {
	        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
	    }
	    if (milliseconds) {
	        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
	    }
	    if (updateOffset) {
	        hooks.updateOffset(mom, days || months);
	    }
	}

	var add      = createAdder(1, 'add');
	var subtract = createAdder(-1, 'subtract');

	function getCalendarFormat(myMoment, now) {
	    var diff = myMoment.diff(now, 'days', true);
	    return diff < -6 ? 'sameElse' :
	            diff < -1 ? 'lastWeek' :
	            diff < 0 ? 'lastDay' :
	            diff < 1 ? 'sameDay' :
	            diff < 2 ? 'nextDay' :
	            diff < 7 ? 'nextWeek' : 'sameElse';
	}

	function calendar$1 (time, formats) {
	    // We want to compare the start of today, vs this.
	    // Getting start-of-today depends on whether we're local/utc/offset or not.
	    var now = time || createLocal(),
	        sod = cloneWithOffset(now, this).startOf('day'),
	        format = hooks.calendarFormat(this, sod) || 'sameElse';

	    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

	    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
	}

	function clone () {
	    return new Moment(this);
	}

	function isAfter (input, units) {
	    var localInput = isMoment(input) ? input : createLocal(input);
	    if (!(this.isValid() && localInput.isValid())) {
	        return false;
	    }
	    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
	    if (units === 'millisecond') {
	        return this.valueOf() > localInput.valueOf();
	    } else {
	        return localInput.valueOf() < this.clone().startOf(units).valueOf();
	    }
	}

	function isBefore (input, units) {
	    var localInput = isMoment(input) ? input : createLocal(input);
	    if (!(this.isValid() && localInput.isValid())) {
	        return false;
	    }
	    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
	    if (units === 'millisecond') {
	        return this.valueOf() < localInput.valueOf();
	    } else {
	        return this.clone().endOf(units).valueOf() < localInput.valueOf();
	    }
	}

	function isBetween (from, to, units, inclusivity) {
	    inclusivity = inclusivity || '()';
	    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&
	        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
	}

	function isSame (input, units) {
	    var localInput = isMoment(input) ? input : createLocal(input),
	        inputMs;
	    if (!(this.isValid() && localInput.isValid())) {
	        return false;
	    }
	    units = normalizeUnits(units || 'millisecond');
	    if (units === 'millisecond') {
	        return this.valueOf() === localInput.valueOf();
	    } else {
	        inputMs = localInput.valueOf();
	        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
	    }
	}

	function isSameOrAfter (input, units) {
	    return this.isSame(input, units) || this.isAfter(input,units);
	}

	function isSameOrBefore (input, units) {
	    return this.isSame(input, units) || this.isBefore(input,units);
	}

	function diff (input, units, asFloat) {
	    var that,
	        zoneDelta,
	        delta, output;

	    if (!this.isValid()) {
	        return NaN;
	    }

	    that = cloneWithOffset(input, this);

	    if (!that.isValid()) {
	        return NaN;
	    }

	    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

	    units = normalizeUnits(units);

	    switch (units) {
	        case 'year': output = monthDiff(this, that) / 12; break;
	        case 'month': output = monthDiff(this, that); break;
	        case 'quarter': output = monthDiff(this, that) / 3; break;
	        case 'second': output = (this - that) / 1e3; break; // 1000
	        case 'minute': output = (this - that) / 6e4; break; // 1000 * 60
	        case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60
	        case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst
	        case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst
	        default: output = this - that;
	    }

	    return asFloat ? output : absFloor(output);
	}

	function monthDiff (a, b) {
	    // difference in months
	    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
	        // b is in (anchor - 1 month, anchor + 1 month)
	        anchor = a.clone().add(wholeMonthDiff, 'months'),
	        anchor2, adjust;

	    if (b - anchor < 0) {
	        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
	        // linear across the month
	        adjust = (b - anchor) / (anchor - anchor2);
	    } else {
	        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
	        // linear across the month
	        adjust = (b - anchor) / (anchor2 - anchor);
	    }

	    //check for negative zero, return zero if negative zero
	    return -(wholeMonthDiff + adjust) || 0;
	}

	hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
	hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

	function toString () {
	    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
	}

	function toISOString(keepOffset) {
	    if (!this.isValid()) {
	        return null;
	    }
	    var utc = keepOffset !== true;
	    var m = utc ? this.clone().utc() : this;
	    if (m.year() < 0 || m.year() > 9999) {
	        return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');
	    }
	    if (isFunction(Date.prototype.toISOString)) {
	        // native implementation is ~50x faster, use it when we can
	        if (utc) {
	            return this.toDate().toISOString();
	        } else {
	            return new Date(this._d.valueOf()).toISOString().replace('Z', formatMoment(m, 'Z'));
	        }
	    }
	    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');
	}

	/**
	 * Return a human readable representation of a moment that can
	 * also be evaluated to get a new moment which is the same
	 *
	 * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
	 */
	function inspect () {
	    if (!this.isValid()) {
	        return 'moment.invalid(/* ' + this._i + ' */)';
	    }
	    var func = 'moment';
	    var zone = '';
	    if (!this.isLocal()) {
	        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
	        zone = 'Z';
	    }
	    var prefix = '[' + func + '("]';
	    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
	    var datetime = '-MM-DD[T]HH:mm:ss.SSS';
	    var suffix = zone + '[")]';

	    return this.format(prefix + year + datetime + suffix);
	}

	function format (inputString) {
	    if (!inputString) {
	        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
	    }
	    var output = formatMoment(this, inputString);
	    return this.localeData().postformat(output);
	}

	function from (time, withoutSuffix) {
	    if (this.isValid() &&
	            ((isMoment(time) && time.isValid()) ||
	             createLocal(time).isValid())) {
	        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
	    } else {
	        return this.localeData().invalidDate();
	    }
	}

	function fromNow (withoutSuffix) {
	    return this.from(createLocal(), withoutSuffix);
	}

	function to (time, withoutSuffix) {
	    if (this.isValid() &&
	            ((isMoment(time) && time.isValid()) ||
	             createLocal(time).isValid())) {
	        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
	    } else {
	        return this.localeData().invalidDate();
	    }
	}

	function toNow (withoutSuffix) {
	    return this.to(createLocal(), withoutSuffix);
	}

	// If passed a locale key, it will set the locale for this
	// instance.  Otherwise, it will return the locale configuration
	// variables for this instance.
	function locale (key) {
	    var newLocaleData;

	    if (key === undefined) {
	        return this._locale._abbr;
	    } else {
	        newLocaleData = getLocale(key);
	        if (newLocaleData != null) {
	            this._locale = newLocaleData;
	        }
	        return this;
	    }
	}

	var lang = deprecate(
	    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
	    function (key) {
	        if (key === undefined) {
	            return this.localeData();
	        } else {
	            return this.locale(key);
	        }
	    }
	);

	function localeData () {
	    return this._locale;
	}

	function startOf (units) {
	    units = normalizeUnits(units);
	    // the following switch intentionally omits break keywords
	    // to utilize falling through the cases.
	    switch (units) {
	        case 'year':
	            this.month(0);
	            /* falls through */
	        case 'quarter':
	        case 'month':
	            this.date(1);
	            /* falls through */
	        case 'week':
	        case 'isoWeek':
	        case 'day':
	        case 'date':
	            this.hours(0);
	            /* falls through */
	        case 'hour':
	            this.minutes(0);
	            /* falls through */
	        case 'minute':
	            this.seconds(0);
	            /* falls through */
	        case 'second':
	            this.milliseconds(0);
	    }

	    // weeks are a special case
	    if (units === 'week') {
	        this.weekday(0);
	    }
	    if (units === 'isoWeek') {
	        this.isoWeekday(1);
	    }

	    // quarters are also special
	    if (units === 'quarter') {
	        this.month(Math.floor(this.month() / 3) * 3);
	    }

	    return this;
	}

	function endOf (units) {
	    units = normalizeUnits(units);
	    if (units === undefined || units === 'millisecond') {
	        return this;
	    }

	    // 'date' is an alias for 'day', so it should be considered as such.
	    if (units === 'date') {
	        units = 'day';
	    }

	    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
	}

	function valueOf () {
	    return this._d.valueOf() - ((this._offset || 0) * 60000);
	}

	function unix () {
	    return Math.floor(this.valueOf() / 1000);
	}

	function toDate () {
	    return new Date(this.valueOf());
	}

	function toArray () {
	    var m = this;
	    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
	}

	function toObject () {
	    var m = this;
	    return {
	        years: m.year(),
	        months: m.month(),
	        date: m.date(),
	        hours: m.hours(),
	        minutes: m.minutes(),
	        seconds: m.seconds(),
	        milliseconds: m.milliseconds()
	    };
	}

	function toJSON () {
	    // new Date(NaN).toJSON() === null
	    return this.isValid() ? this.toISOString() : null;
	}

	function isValid$2 () {
	    return isValid(this);
	}

	function parsingFlags () {
	    return extend({}, getParsingFlags(this));
	}

	function invalidAt () {
	    return getParsingFlags(this).overflow;
	}

	function creationData() {
	    return {
	        input: this._i,
	        format: this._f,
	        locale: this._locale,
	        isUTC: this._isUTC,
	        strict: this._strict
	    };
	}

	// FORMATTING

	addFormatToken(0, ['gg', 2], 0, function () {
	    return this.weekYear() % 100;
	});

	addFormatToken(0, ['GG', 2], 0, function () {
	    return this.isoWeekYear() % 100;
	});

	function addWeekYearFormatToken (token, getter) {
	    addFormatToken(0, [token, token.length], 0, getter);
	}

	addWeekYearFormatToken('gggg',     'weekYear');
	addWeekYearFormatToken('ggggg',    'weekYear');
	addWeekYearFormatToken('GGGG',  'isoWeekYear');
	addWeekYearFormatToken('GGGGG', 'isoWeekYear');

	// ALIASES

	addUnitAlias('weekYear', 'gg');
	addUnitAlias('isoWeekYear', 'GG');

	// PRIORITY

	addUnitPriority('weekYear', 1);
	addUnitPriority('isoWeekYear', 1);


	// PARSING

	addRegexToken('G',      matchSigned);
	addRegexToken('g',      matchSigned);
	addRegexToken('GG',     match1to2, match2);
	addRegexToken('gg',     match1to2, match2);
	addRegexToken('GGGG',   match1to4, match4);
	addRegexToken('gggg',   match1to4, match4);
	addRegexToken('GGGGG',  match1to6, match6);
	addRegexToken('ggggg',  match1to6, match6);

	addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
	    week[token.substr(0, 2)] = toInt(input);
	});

	addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
	    week[token] = hooks.parseTwoDigitYear(input);
	});

	// MOMENTS

	function getSetWeekYear (input) {
	    return getSetWeekYearHelper.call(this,
	            input,
	            this.week(),
	            this.weekday(),
	            this.localeData()._week.dow,
	            this.localeData()._week.doy);
	}

	function getSetISOWeekYear (input) {
	    return getSetWeekYearHelper.call(this,
	            input, this.isoWeek(), this.isoWeekday(), 1, 4);
	}

	function getISOWeeksInYear () {
	    return weeksInYear(this.year(), 1, 4);
	}

	function getWeeksInYear () {
	    var weekInfo = this.localeData()._week;
	    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
	}

	function getSetWeekYearHelper(input, week, weekday, dow, doy) {
	    var weeksTarget;
	    if (input == null) {
	        return weekOfYear(this, dow, doy).year;
	    } else {
	        weeksTarget = weeksInYear(input, dow, doy);
	        if (week > weeksTarget) {
	            week = weeksTarget;
	        }
	        return setWeekAll.call(this, input, week, weekday, dow, doy);
	    }
	}

	function setWeekAll(weekYear, week, weekday, dow, doy) {
	    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
	        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

	    this.year(date.getUTCFullYear());
	    this.month(date.getUTCMonth());
	    this.date(date.getUTCDate());
	    return this;
	}

	// FORMATTING

	addFormatToken('Q', 0, 'Qo', 'quarter');

	// ALIASES

	addUnitAlias('quarter', 'Q');

	// PRIORITY

	addUnitPriority('quarter', 7);

	// PARSING

	addRegexToken('Q', match1);
	addParseToken('Q', function (input, array) {
	    array[MONTH] = (toInt(input) - 1) * 3;
	});

	// MOMENTS

	function getSetQuarter (input) {
	    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
	}

	// FORMATTING

	addFormatToken('D', ['DD', 2], 'Do', 'date');

	// ALIASES

	addUnitAlias('date', 'D');

	// PRIOROITY
	addUnitPriority('date', 9);

	// PARSING

	addRegexToken('D',  match1to2);
	addRegexToken('DD', match1to2, match2);
	addRegexToken('Do', function (isStrict, locale) {
	    // TODO: Remove "ordinalParse" fallback in next major release.
	    return isStrict ?
	      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
	      locale._dayOfMonthOrdinalParseLenient;
	});

	addParseToken(['D', 'DD'], DATE);
	addParseToken('Do', function (input, array) {
	    array[DATE] = toInt(input.match(match1to2)[0]);
	});

	// MOMENTS

	var getSetDayOfMonth = makeGetSet('Date', true);

	// FORMATTING

	addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

	// ALIASES

	addUnitAlias('dayOfYear', 'DDD');

	// PRIORITY
	addUnitPriority('dayOfYear', 4);

	// PARSING

	addRegexToken('DDD',  match1to3);
	addRegexToken('DDDD', match3);
	addParseToken(['DDD', 'DDDD'], function (input, array, config) {
	    config._dayOfYear = toInt(input);
	});

	// HELPERS

	// MOMENTS

	function getSetDayOfYear (input) {
	    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
	    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
	}

	// FORMATTING

	addFormatToken('m', ['mm', 2], 0, 'minute');

	// ALIASES

	addUnitAlias('minute', 'm');

	// PRIORITY

	addUnitPriority('minute', 14);

	// PARSING

	addRegexToken('m',  match1to2);
	addRegexToken('mm', match1to2, match2);
	addParseToken(['m', 'mm'], MINUTE);

	// MOMENTS

	var getSetMinute = makeGetSet('Minutes', false);

	// FORMATTING

	addFormatToken('s', ['ss', 2], 0, 'second');

	// ALIASES

	addUnitAlias('second', 's');

	// PRIORITY

	addUnitPriority('second', 15);

	// PARSING

	addRegexToken('s',  match1to2);
	addRegexToken('ss', match1to2, match2);
	addParseToken(['s', 'ss'], SECOND);

	// MOMENTS

	var getSetSecond = makeGetSet('Seconds', false);

	// FORMATTING

	addFormatToken('S', 0, 0, function () {
	    return ~~(this.millisecond() / 100);
	});

	addFormatToken(0, ['SS', 2], 0, function () {
	    return ~~(this.millisecond() / 10);
	});

	addFormatToken(0, ['SSS', 3], 0, 'millisecond');
	addFormatToken(0, ['SSSS', 4], 0, function () {
	    return this.millisecond() * 10;
	});
	addFormatToken(0, ['SSSSS', 5], 0, function () {
	    return this.millisecond() * 100;
	});
	addFormatToken(0, ['SSSSSS', 6], 0, function () {
	    return this.millisecond() * 1000;
	});
	addFormatToken(0, ['SSSSSSS', 7], 0, function () {
	    return this.millisecond() * 10000;
	});
	addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
	    return this.millisecond() * 100000;
	});
	addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
	    return this.millisecond() * 1000000;
	});


	// ALIASES

	addUnitAlias('millisecond', 'ms');

	// PRIORITY

	addUnitPriority('millisecond', 16);

	// PARSING

	addRegexToken('S',    match1to3, match1);
	addRegexToken('SS',   match1to3, match2);
	addRegexToken('SSS',  match1to3, match3);

	var token;
	for (token = 'SSSS'; token.length <= 9; token += 'S') {
	    addRegexToken(token, matchUnsigned);
	}

	function parseMs(input, array) {
	    array[MILLISECOND] = toInt(('0.' + input) * 1000);
	}

	for (token = 'S'; token.length <= 9; token += 'S') {
	    addParseToken(token, parseMs);
	}
	// MOMENTS

	var getSetMillisecond = makeGetSet('Milliseconds', false);

	// FORMATTING

	addFormatToken('z',  0, 0, 'zoneAbbr');
	addFormatToken('zz', 0, 0, 'zoneName');

	// MOMENTS

	function getZoneAbbr () {
	    return this._isUTC ? 'UTC' : '';
	}

	function getZoneName () {
	    return this._isUTC ? 'Coordinated Universal Time' : '';
	}

	var proto = Moment.prototype;

	proto.add               = add;
	proto.calendar          = calendar$1;
	proto.clone             = clone;
	proto.diff              = diff;
	proto.endOf             = endOf;
	proto.format            = format;
	proto.from              = from;
	proto.fromNow           = fromNow;
	proto.to                = to;
	proto.toNow             = toNow;
	proto.get               = stringGet;
	proto.invalidAt         = invalidAt;
	proto.isAfter           = isAfter;
	proto.isBefore          = isBefore;
	proto.isBetween         = isBetween;
	proto.isSame            = isSame;
	proto.isSameOrAfter     = isSameOrAfter;
	proto.isSameOrBefore    = isSameOrBefore;
	proto.isValid           = isValid$2;
	proto.lang              = lang;
	proto.locale            = locale;
	proto.localeData        = localeData;
	proto.max               = prototypeMax;
	proto.min               = prototypeMin;
	proto.parsingFlags      = parsingFlags;
	proto.set               = stringSet;
	proto.startOf           = startOf;
	proto.subtract          = subtract;
	proto.toArray           = toArray;
	proto.toObject          = toObject;
	proto.toDate            = toDate;
	proto.toISOString       = toISOString;
	proto.inspect           = inspect;
	proto.toJSON            = toJSON;
	proto.toString          = toString;
	proto.unix              = unix;
	proto.valueOf           = valueOf;
	proto.creationData      = creationData;

	// Year
	proto.year       = getSetYear;
	proto.isLeapYear = getIsLeapYear;

	// Week Year
	proto.weekYear    = getSetWeekYear;
	proto.isoWeekYear = getSetISOWeekYear;

	// Quarter
	proto.quarter = proto.quarters = getSetQuarter;

	// Month
	proto.month       = getSetMonth;
	proto.daysInMonth = getDaysInMonth;

	// Week
	proto.week           = proto.weeks        = getSetWeek;
	proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
	proto.weeksInYear    = getWeeksInYear;
	proto.isoWeeksInYear = getISOWeeksInYear;

	// Day
	proto.date       = getSetDayOfMonth;
	proto.day        = proto.days             = getSetDayOfWeek;
	proto.weekday    = getSetLocaleDayOfWeek;
	proto.isoWeekday = getSetISODayOfWeek;
	proto.dayOfYear  = getSetDayOfYear;

	// Hour
	proto.hour = proto.hours = getSetHour;

	// Minute
	proto.minute = proto.minutes = getSetMinute;

	// Second
	proto.second = proto.seconds = getSetSecond;

	// Millisecond
	proto.millisecond = proto.milliseconds = getSetMillisecond;

	// Offset
	proto.utcOffset            = getSetOffset;
	proto.utc                  = setOffsetToUTC;
	proto.local                = setOffsetToLocal;
	proto.parseZone            = setOffsetToParsedOffset;
	proto.hasAlignedHourOffset = hasAlignedHourOffset;
	proto.isDST                = isDaylightSavingTime;
	proto.isLocal              = isLocal;
	proto.isUtcOffset          = isUtcOffset;
	proto.isUtc                = isUtc;
	proto.isUTC                = isUtc;

	// Timezone
	proto.zoneAbbr = getZoneAbbr;
	proto.zoneName = getZoneName;

	// Deprecations
	proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
	proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
	proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
	proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
	proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

	function createUnix (input) {
	    return createLocal(input * 1000);
	}

	function createInZone () {
	    return createLocal.apply(null, arguments).parseZone();
	}

	function preParsePostFormat (string) {
	    return string;
	}

	var proto$1 = Locale.prototype;

	proto$1.calendar        = calendar;
	proto$1.longDateFormat  = longDateFormat;
	proto$1.invalidDate     = invalidDate;
	proto$1.ordinal         = ordinal;
	proto$1.preparse        = preParsePostFormat;
	proto$1.postformat      = preParsePostFormat;
	proto$1.relativeTime    = relativeTime;
	proto$1.pastFuture      = pastFuture;
	proto$1.set             = set;

	// Month
	proto$1.months            =        localeMonths;
	proto$1.monthsShort       =        localeMonthsShort;
	proto$1.monthsParse       =        localeMonthsParse;
	proto$1.monthsRegex       = monthsRegex;
	proto$1.monthsShortRegex  = monthsShortRegex;

	// Week
	proto$1.week = localeWeek;
	proto$1.firstDayOfYear = localeFirstDayOfYear;
	proto$1.firstDayOfWeek = localeFirstDayOfWeek;

	// Day of Week
	proto$1.weekdays       =        localeWeekdays;
	proto$1.weekdaysMin    =        localeWeekdaysMin;
	proto$1.weekdaysShort  =        localeWeekdaysShort;
	proto$1.weekdaysParse  =        localeWeekdaysParse;

	proto$1.weekdaysRegex       =        weekdaysRegex;
	proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
	proto$1.weekdaysMinRegex    =        weekdaysMinRegex;

	// Hours
	proto$1.isPM = localeIsPM;
	proto$1.meridiem = localeMeridiem;

	function get$1 (format, index, field, setter) {
	    var locale = getLocale();
	    var utc = createUTC().set(setter, index);
	    return locale[field](utc, format);
	}

	function listMonthsImpl (format, index, field) {
	    if (isNumber(format)) {
	        index = format;
	        format = undefined;
	    }

	    format = format || '';

	    if (index != null) {
	        return get$1(format, index, field, 'month');
	    }

	    var i;
	    var out = [];
	    for (i = 0; i < 12; i++) {
	        out[i] = get$1(format, i, field, 'month');
	    }
	    return out;
	}

	// ()
	// (5)
	// (fmt, 5)
	// (fmt)
	// (true)
	// (true, 5)
	// (true, fmt, 5)
	// (true, fmt)
	function listWeekdaysImpl (localeSorted, format, index, field) {
	    if (typeof localeSorted === 'boolean') {
	        if (isNumber(format)) {
	            index = format;
	            format = undefined;
	        }

	        format = format || '';
	    } else {
	        format = localeSorted;
	        index = format;
	        localeSorted = false;

	        if (isNumber(format)) {
	            index = format;
	            format = undefined;
	        }

	        format = format || '';
	    }

	    var locale = getLocale(),
	        shift = localeSorted ? locale._week.dow : 0;

	    if (index != null) {
	        return get$1(format, (index + shift) % 7, field, 'day');
	    }

	    var i;
	    var out = [];
	    for (i = 0; i < 7; i++) {
	        out[i] = get$1(format, (i + shift) % 7, field, 'day');
	    }
	    return out;
	}

	function listMonths (format, index) {
	    return listMonthsImpl(format, index, 'months');
	}

	function listMonthsShort (format, index) {
	    return listMonthsImpl(format, index, 'monthsShort');
	}

	function listWeekdays (localeSorted, format, index) {
	    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
	}

	function listWeekdaysShort (localeSorted, format, index) {
	    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
	}

	function listWeekdaysMin (localeSorted, format, index) {
	    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
	}

	getSetGlobalLocale('en', {
	    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (toInt(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    }
	});

	// Side effect imports
	hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
	hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

	var mathAbs = Math.abs;

	function abs () {
	    var data           = this._data;

	    this._milliseconds = mathAbs(this._milliseconds);
	    this._days         = mathAbs(this._days);
	    this._months       = mathAbs(this._months);

	    data.milliseconds  = mathAbs(data.milliseconds);
	    data.seconds       = mathAbs(data.seconds);
	    data.minutes       = mathAbs(data.minutes);
	    data.hours         = mathAbs(data.hours);
	    data.months        = mathAbs(data.months);
	    data.years         = mathAbs(data.years);

	    return this;
	}

	function addSubtract$1 (duration, input, value, direction) {
	    var other = createDuration(input, value);

	    duration._milliseconds += direction * other._milliseconds;
	    duration._days         += direction * other._days;
	    duration._months       += direction * other._months;

	    return duration._bubble();
	}

	// supports only 2.0-style add(1, 's') or add(duration)
	function add$1 (input, value) {
	    return addSubtract$1(this, input, value, 1);
	}

	// supports only 2.0-style subtract(1, 's') or subtract(duration)
	function subtract$1 (input, value) {
	    return addSubtract$1(this, input, value, -1);
	}

	function absCeil (number) {
	    if (number < 0) {
	        return Math.floor(number);
	    } else {
	        return Math.ceil(number);
	    }
	}

	function bubble () {
	    var milliseconds = this._milliseconds;
	    var days         = this._days;
	    var months       = this._months;
	    var data         = this._data;
	    var seconds, minutes, hours, years, monthsFromDays;

	    // if we have a mix of positive and negative values, bubble down first
	    // check: https://github.com/moment/moment/issues/2166
	    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
	            (milliseconds <= 0 && days <= 0 && months <= 0))) {
	        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
	        days = 0;
	        months = 0;
	    }

	    // The following code bubbles up values, see the tests for
	    // examples of what that means.
	    data.milliseconds = milliseconds % 1000;

	    seconds           = absFloor(milliseconds / 1000);
	    data.seconds      = seconds % 60;

	    minutes           = absFloor(seconds / 60);
	    data.minutes      = minutes % 60;

	    hours             = absFloor(minutes / 60);
	    data.hours        = hours % 24;

	    days += absFloor(hours / 24);

	    // convert days to months
	    monthsFromDays = absFloor(daysToMonths(days));
	    months += monthsFromDays;
	    days -= absCeil(monthsToDays(monthsFromDays));

	    // 12 months -> 1 year
	    years = absFloor(months / 12);
	    months %= 12;

	    data.days   = days;
	    data.months = months;
	    data.years  = years;

	    return this;
	}

	function daysToMonths (days) {
	    // 400 years have 146097 days (taking into account leap year rules)
	    // 400 years have 12 months === 4800
	    return days * 4800 / 146097;
	}

	function monthsToDays (months) {
	    // the reverse of daysToMonths
	    return months * 146097 / 4800;
	}

	function as (units) {
	    if (!this.isValid()) {
	        return NaN;
	    }
	    var days;
	    var months;
	    var milliseconds = this._milliseconds;

	    units = normalizeUnits(units);

	    if (units === 'month' || units === 'year') {
	        days   = this._days   + milliseconds / 864e5;
	        months = this._months + daysToMonths(days);
	        return units === 'month' ? months : months / 12;
	    } else {
	        // handle milliseconds separately because of floating point math errors (issue #1867)
	        days = this._days + Math.round(monthsToDays(this._months));
	        switch (units) {
	            case 'week'   : return days / 7     + milliseconds / 6048e5;
	            case 'day'    : return days         + milliseconds / 864e5;
	            case 'hour'   : return days * 24    + milliseconds / 36e5;
	            case 'minute' : return days * 1440  + milliseconds / 6e4;
	            case 'second' : return days * 86400 + milliseconds / 1000;
	            // Math.floor prevents floating point math errors here
	            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
	            default: throw new Error('Unknown unit ' + units);
	        }
	    }
	}

	// TODO: Use this.as('ms')?
	function valueOf$1 () {
	    if (!this.isValid()) {
	        return NaN;
	    }
	    return (
	        this._milliseconds +
	        this._days * 864e5 +
	        (this._months % 12) * 2592e6 +
	        toInt(this._months / 12) * 31536e6
	    );
	}

	function makeAs (alias) {
	    return function () {
	        return this.as(alias);
	    };
	}

	var asMilliseconds = makeAs('ms');
	var asSeconds      = makeAs('s');
	var asMinutes      = makeAs('m');
	var asHours        = makeAs('h');
	var asDays         = makeAs('d');
	var asWeeks        = makeAs('w');
	var asMonths       = makeAs('M');
	var asYears        = makeAs('y');

	function clone$1 () {
	    return createDuration(this);
	}

	function get$2 (units) {
	    units = normalizeUnits(units);
	    return this.isValid() ? this[units + 's']() : NaN;
	}

	function makeGetter(name) {
	    return function () {
	        return this.isValid() ? this._data[name] : NaN;
	    };
	}

	var milliseconds = makeGetter('milliseconds');
	var seconds      = makeGetter('seconds');
	var minutes      = makeGetter('minutes');
	var hours        = makeGetter('hours');
	var days         = makeGetter('days');
	var months       = makeGetter('months');
	var years        = makeGetter('years');

	function weeks () {
	    return absFloor(this.days() / 7);
	}

	var round = Math.round;
	var thresholds = {
	    ss: 44,         // a few seconds to seconds
	    s : 45,         // seconds to minute
	    m : 45,         // minutes to hour
	    h : 22,         // hours to day
	    d : 26,         // days to month
	    M : 11          // months to year
	};

	// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
	function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
	    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
	}

	function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
	    var duration = createDuration(posNegDuration).abs();
	    var seconds  = round(duration.as('s'));
	    var minutes  = round(duration.as('m'));
	    var hours    = round(duration.as('h'));
	    var days     = round(duration.as('d'));
	    var months   = round(duration.as('M'));
	    var years    = round(duration.as('y'));

	    var a = seconds <= thresholds.ss && ['s', seconds]  ||
	            seconds < thresholds.s   && ['ss', seconds] ||
	            minutes <= 1             && ['m']           ||
	            minutes < thresholds.m   && ['mm', minutes] ||
	            hours   <= 1             && ['h']           ||
	            hours   < thresholds.h   && ['hh', hours]   ||
	            days    <= 1             && ['d']           ||
	            days    < thresholds.d   && ['dd', days]    ||
	            months  <= 1             && ['M']           ||
	            months  < thresholds.M   && ['MM', months]  ||
	            years   <= 1             && ['y']           || ['yy', years];

	    a[2] = withoutSuffix;
	    a[3] = +posNegDuration > 0;
	    a[4] = locale;
	    return substituteTimeAgo.apply(null, a);
	}

	// This function allows you to set the rounding function for relative time strings
	function getSetRelativeTimeRounding (roundingFunction) {
	    if (roundingFunction === undefined) {
	        return round;
	    }
	    if (typeof(roundingFunction) === 'function') {
	        round = roundingFunction;
	        return true;
	    }
	    return false;
	}

	// This function allows you to set a threshold for relative time strings
	function getSetRelativeTimeThreshold (threshold, limit) {
	    if (thresholds[threshold] === undefined) {
	        return false;
	    }
	    if (limit === undefined) {
	        return thresholds[threshold];
	    }
	    thresholds[threshold] = limit;
	    if (threshold === 's') {
	        thresholds.ss = limit - 1;
	    }
	    return true;
	}

	function humanize (withSuffix) {
	    if (!this.isValid()) {
	        return this.localeData().invalidDate();
	    }

	    var locale = this.localeData();
	    var output = relativeTime$1(this, !withSuffix, locale);

	    if (withSuffix) {
	        output = locale.pastFuture(+this, output);
	    }

	    return locale.postformat(output);
	}

	var abs$1 = Math.abs;

	function sign(x) {
	    return ((x > 0) - (x < 0)) || +x;
	}

	function toISOString$1() {
	    // for ISO strings we do not use the normal bubbling rules:
	    //  * milliseconds bubble up until they become hours
	    //  * days do not bubble at all
	    //  * months bubble up until they become years
	    // This is because there is no context-free conversion between hours and days
	    // (think of clock changes)
	    // and also not between days and months (28-31 days per month)
	    if (!this.isValid()) {
	        return this.localeData().invalidDate();
	    }

	    var seconds = abs$1(this._milliseconds) / 1000;
	    var days         = abs$1(this._days);
	    var months       = abs$1(this._months);
	    var minutes, hours, years;

	    // 3600 seconds -> 60 minutes -> 1 hour
	    minutes           = absFloor(seconds / 60);
	    hours             = absFloor(minutes / 60);
	    seconds %= 60;
	    minutes %= 60;

	    // 12 months -> 1 year
	    years  = absFloor(months / 12);
	    months %= 12;


	    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
	    var Y = years;
	    var M = months;
	    var D = days;
	    var h = hours;
	    var m = minutes;
	    var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
	    var total = this.asSeconds();

	    if (!total) {
	        // this is the same as C#'s (Noda) and python (isodate)...
	        // but not other JS (goog.date)
	        return 'P0D';
	    }

	    var totalSign = total < 0 ? '-' : '';
	    var ymSign = sign(this._months) !== sign(total) ? '-' : '';
	    var daysSign = sign(this._days) !== sign(total) ? '-' : '';
	    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

	    return totalSign + 'P' +
	        (Y ? ymSign + Y + 'Y' : '') +
	        (M ? ymSign + M + 'M' : '') +
	        (D ? daysSign + D + 'D' : '') +
	        ((h || m || s) ? 'T' : '') +
	        (h ? hmsSign + h + 'H' : '') +
	        (m ? hmsSign + m + 'M' : '') +
	        (s ? hmsSign + s + 'S' : '');
	}

	var proto$2 = Duration.prototype;

	proto$2.isValid        = isValid$1;
	proto$2.abs            = abs;
	proto$2.add            = add$1;
	proto$2.subtract       = subtract$1;
	proto$2.as             = as;
	proto$2.asMilliseconds = asMilliseconds;
	proto$2.asSeconds      = asSeconds;
	proto$2.asMinutes      = asMinutes;
	proto$2.asHours        = asHours;
	proto$2.asDays         = asDays;
	proto$2.asWeeks        = asWeeks;
	proto$2.asMonths       = asMonths;
	proto$2.asYears        = asYears;
	proto$2.valueOf        = valueOf$1;
	proto$2._bubble        = bubble;
	proto$2.clone          = clone$1;
	proto$2.get            = get$2;
	proto$2.milliseconds   = milliseconds;
	proto$2.seconds        = seconds;
	proto$2.minutes        = minutes;
	proto$2.hours          = hours;
	proto$2.days           = days;
	proto$2.weeks          = weeks;
	proto$2.months         = months;
	proto$2.years          = years;
	proto$2.humanize       = humanize;
	proto$2.toISOString    = toISOString$1;
	proto$2.toString       = toISOString$1;
	proto$2.toJSON         = toISOString$1;
	proto$2.locale         = locale;
	proto$2.localeData     = localeData;

	// Deprecations
	proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
	proto$2.lang = lang;

	// Side effect imports

	// FORMATTING

	addFormatToken('X', 0, 0, 'unix');
	addFormatToken('x', 0, 0, 'valueOf');

	// PARSING

	addRegexToken('x', matchSigned);
	addRegexToken('X', matchTimestamp);
	addParseToken('X', function (input, array, config) {
	    config._d = new Date(parseFloat(input, 10) * 1000);
	});
	addParseToken('x', function (input, array, config) {
	    config._d = new Date(toInt(input));
	});

	// Side effect imports


	hooks.version = '2.20.1';

	setHookCallback(createLocal);

	hooks.fn                    = proto;
	hooks.min                   = min;
	hooks.max                   = max;
	hooks.now                   = now;
	hooks.utc                   = createUTC;
	hooks.unix                  = createUnix;
	hooks.months                = listMonths;
	hooks.isDate                = isDate;
	hooks.locale                = getSetGlobalLocale;
	hooks.invalid               = createInvalid;
	hooks.duration              = createDuration;
	hooks.isMoment              = isMoment;
	hooks.weekdays              = listWeekdays;
	hooks.parseZone             = createInZone;
	hooks.localeData            = getLocale;
	hooks.isDuration            = isDuration;
	hooks.monthsShort           = listMonthsShort;
	hooks.weekdaysMin           = listWeekdaysMin;
	hooks.defineLocale          = defineLocale;
	hooks.updateLocale          = updateLocale;
	hooks.locales               = listLocales;
	hooks.weekdaysShort         = listWeekdaysShort;
	hooks.normalizeUnits        = normalizeUnits;
	hooks.relativeTimeRounding  = getSetRelativeTimeRounding;
	hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
	hooks.calendarFormat        = getCalendarFormat;
	hooks.prototype             = proto;

	// currently HTML5 input type only supports 24-hour formats
	hooks.HTML5_FMT = {
	    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',             // <input type="datetime-local" />
	    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',  // <input type="datetime-local" step="1" />
	    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',   // <input type="datetime-local" step="0.001" />
	    DATE: 'YYYY-MM-DD',                             // <input type="date" />
	    TIME: 'HH:mm',                                  // <input type="time" />
	    TIME_SECONDS: 'HH:mm:ss',                       // <input type="time" step="1" />
	    TIME_MS: 'HH:mm:ss.SSS',                        // <input type="time" step="0.001" />
	    WEEK: 'YYYY-[W]WW',                             // <input type="week" />
	    MONTH: 'YYYY-MM'                                // <input type="month" />
	};

	return hooks;

	})));

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(25)(module)))

/***/ }),
/* 25 */
/***/ (function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

	var map = {
		"./de": 27,
		"./de-at": 28,
		"./de-at.js": 28,
		"./de-ch": 29,
		"./de-ch.js": 29,
		"./de.js": 27,
		"./en-au": 30,
		"./en-au.js": 30,
		"./en-ca": 31,
		"./en-ca.js": 31,
		"./en-gb": 32,
		"./en-gb.js": 32,
		"./en-ie": 33,
		"./en-ie.js": 33,
		"./en-nz": 34,
		"./en-nz.js": 34,
		"./es": 35,
		"./es-do": 36,
		"./es-do.js": 36,
		"./es-us": 37,
		"./es-us.js": 37,
		"./es.js": 35,
		"./fr": 38,
		"./fr-ca": 39,
		"./fr-ca.js": 39,
		"./fr-ch": 40,
		"./fr-ch.js": 40,
		"./fr.js": 38,
		"./it": 41,
		"./it.js": 41,
		"./ja": 42,
		"./ja.js": 42,
		"./zh-cn": 43,
		"./zh-cn.js": 43
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 26;


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : German [de]
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire
	//! author : Mikolaj Dadela : https://github.com/mik01aj

	;(function (global, factory) {
	    true ? factory(__webpack_require__(24)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	function processRelativeTime(number, withoutSuffix, key, isFuture) {
	    var format = {
	        'm': ['eine Minute', 'einer Minute'],
	        'h': ['eine Stunde', 'einer Stunde'],
	        'd': ['ein Tag', 'einem Tag'],
	        'dd': [number + ' Tage', number + ' Tagen'],
	        'M': ['ein Monat', 'einem Monat'],
	        'MM': [number + ' Monate', number + ' Monaten'],
	        'y': ['ein Jahr', 'einem Jahr'],
	        'yy': [number + ' Jahre', number + ' Jahren']
	    };
	    return withoutSuffix ? format[key][0] : format[key][1];
	}

	var de = moment.defineLocale('de', {
	    months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	    monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	    weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT: 'HH:mm',
	        LTS: 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY HH:mm',
	        LLLL : 'dddd, D. MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[heute um] LT [Uhr]',
	        sameElse: 'L',
	        nextDay: '[morgen um] LT [Uhr]',
	        nextWeek: 'dddd [um] LT [Uhr]',
	        lastDay: '[gestern um] LT [Uhr]',
	        lastWeek: '[letzten] dddd [um] LT [Uhr]'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : 'vor %s',
	        s : 'ein paar Sekunden',
	        ss : '%d Sekunden',
	        m : processRelativeTime,
	        mm : '%d Minuten',
	        h : processRelativeTime,
	        hh : '%d Stunden',
	        d : processRelativeTime,
	        dd : processRelativeTime,
	        M : processRelativeTime,
	        MM : processRelativeTime,
	        y : processRelativeTime,
	        yy : processRelativeTime
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return de;

	})));


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : German (Austria) [de-at]
	//! author : lluchs : https://github.com/lluchs
	//! author: Menelion Elensúle: https://github.com/Oire
	//! author : Martin Groller : https://github.com/MadMG
	//! author : Mikolaj Dadela : https://github.com/mik01aj

	;(function (global, factory) {
	    true ? factory(__webpack_require__(24)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	function processRelativeTime(number, withoutSuffix, key, isFuture) {
	    var format = {
	        'm': ['eine Minute', 'einer Minute'],
	        'h': ['eine Stunde', 'einer Stunde'],
	        'd': ['ein Tag', 'einem Tag'],
	        'dd': [number + ' Tage', number + ' Tagen'],
	        'M': ['ein Monat', 'einem Monat'],
	        'MM': [number + ' Monate', number + ' Monaten'],
	        'y': ['ein Jahr', 'einem Jahr'],
	        'yy': [number + ' Jahre', number + ' Jahren']
	    };
	    return withoutSuffix ? format[key][0] : format[key][1];
	}

	var deAt = moment.defineLocale('de-at', {
	    months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	    monthsShort : 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	    weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
	    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT: 'HH:mm',
	        LTS: 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY HH:mm',
	        LLLL : 'dddd, D. MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[heute um] LT [Uhr]',
	        sameElse: 'L',
	        nextDay: '[morgen um] LT [Uhr]',
	        nextWeek: 'dddd [um] LT [Uhr]',
	        lastDay: '[gestern um] LT [Uhr]',
	        lastWeek: '[letzten] dddd [um] LT [Uhr]'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : 'vor %s',
	        s : 'ein paar Sekunden',
	        ss : '%d Sekunden',
	        m : processRelativeTime,
	        mm : '%d Minuten',
	        h : processRelativeTime,
	        hh : '%d Stunden',
	        d : processRelativeTime,
	        dd : processRelativeTime,
	        M : processRelativeTime,
	        MM : processRelativeTime,
	        y : processRelativeTime,
	        yy : processRelativeTime
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return deAt;

	})));


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : German (Switzerland) [de-ch]
	//! author : sschueller : https://github.com/sschueller

	;(function (global, factory) {
	    true ? factory(__webpack_require__(24)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	// based on: https://www.bk.admin.ch/dokumentation/sprachen/04915/05016/index.html?lang=de#

	function processRelativeTime(number, withoutSuffix, key, isFuture) {
	    var format = {
	        'm': ['eine Minute', 'einer Minute'],
	        'h': ['eine Stunde', 'einer Stunde'],
	        'd': ['ein Tag', 'einem Tag'],
	        'dd': [number + ' Tage', number + ' Tagen'],
	        'M': ['ein Monat', 'einem Monat'],
	        'MM': [number + ' Monate', number + ' Monaten'],
	        'y': ['ein Jahr', 'einem Jahr'],
	        'yy': [number + ' Jahre', number + ' Jahren']
	    };
	    return withoutSuffix ? format[key][0] : format[key][1];
	}

	var deCh = moment.defineLocale('de-ch', {
	    months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
	    monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
	    weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT: 'HH:mm',
	        LTS: 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D. MMMM YYYY',
	        LLL : 'D. MMMM YYYY HH:mm',
	        LLLL : 'dddd, D. MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[heute um] LT [Uhr]',
	        sameElse: 'L',
	        nextDay: '[morgen um] LT [Uhr]',
	        nextWeek: 'dddd [um] LT [Uhr]',
	        lastDay: '[gestern um] LT [Uhr]',
	        lastWeek: '[letzten] dddd [um] LT [Uhr]'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : 'vor %s',
	        s : 'ein paar Sekunden',
	        ss : '%d Sekunden',
	        m : processRelativeTime,
	        mm : '%d Minuten',
	        h : processRelativeTime,
	        hh : '%d Stunden',
	        d : processRelativeTime,
	        dd : processRelativeTime,
	        M : processRelativeTime,
	        MM : processRelativeTime,
	        y : processRelativeTime,
	        yy : processRelativeTime
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}\./,
	    ordinal : '%d.',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return deCh;

	})));


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : English (Australia) [en-au]
	//! author : Jared Morse : https://github.com/jarcoal

	;(function (global, factory) {
	    true ? factory(__webpack_require__(24)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var enAu = moment.defineLocale('en-au', {
	    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY h:mm A',
	        LLLL : 'dddd, D MMMM YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : '%s ago',
	        s : 'a few seconds',
	        ss : '%d seconds',
	        m : 'a minute',
	        mm : '%d minutes',
	        h : 'an hour',
	        hh : '%d hours',
	        d : 'a day',
	        dd : '%d days',
	        M : 'a month',
	        MM : '%d months',
	        y : 'a year',
	        yy : '%d years'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return enAu;

	})));


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : English (Canada) [en-ca]
	//! author : Jonathan Abourbih : https://github.com/jonbca

	;(function (global, factory) {
	    true ? factory(__webpack_require__(24)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var enCa = moment.defineLocale('en-ca', {
	    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'YYYY-MM-DD',
	        LL : 'MMMM D, YYYY',
	        LLL : 'MMMM D, YYYY h:mm A',
	        LLLL : 'dddd, MMMM D, YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : '%s ago',
	        s : 'a few seconds',
	        ss : '%d seconds',
	        m : 'a minute',
	        mm : '%d minutes',
	        h : 'an hour',
	        hh : '%d hours',
	        d : 'a day',
	        dd : '%d days',
	        M : 'a month',
	        MM : '%d months',
	        y : 'a year',
	        yy : '%d years'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    }
	});

	return enCa;

	})));


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : English (United Kingdom) [en-gb]
	//! author : Chris Gedrim : https://github.com/chrisgedrim

	;(function (global, factory) {
	    true ? factory(__webpack_require__(24)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var enGb = moment.defineLocale('en-gb', {
	    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd, D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : '%s ago',
	        s : 'a few seconds',
	        ss : '%d seconds',
	        m : 'a minute',
	        mm : '%d minutes',
	        h : 'an hour',
	        hh : '%d hours',
	        d : 'a day',
	        dd : '%d days',
	        M : 'a month',
	        MM : '%d months',
	        y : 'a year',
	        yy : '%d years'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return enGb;

	})));


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : English (Ireland) [en-ie]
	//! author : Chris Cartlidge : https://github.com/chriscartlidge

	;(function (global, factory) {
	    true ? factory(__webpack_require__(24)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var enIe = moment.defineLocale('en-ie', {
	    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD-MM-YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : '%s ago',
	        s : 'a few seconds',
	        ss : '%d seconds',
	        m : 'a minute',
	        mm : '%d minutes',
	        h : 'an hour',
	        hh : '%d hours',
	        d : 'a day',
	        dd : '%d days',
	        M : 'a month',
	        MM : '%d months',
	        y : 'a year',
	        yy : '%d years'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return enIe;

	})));


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : English (New Zealand) [en-nz]
	//! author : Luke McGregor : https://github.com/lukemcgregor

	;(function (global, factory) {
	    true ? factory(__webpack_require__(24)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var enNz = moment.defineLocale('en-nz', {
	    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
	    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
	    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
	    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
	    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY h:mm A',
	        LLLL : 'dddd, D MMMM YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : '[Today at] LT',
	        nextDay : '[Tomorrow at] LT',
	        nextWeek : 'dddd [at] LT',
	        lastDay : '[Yesterday at] LT',
	        lastWeek : '[Last] dddd [at] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'in %s',
	        past : '%s ago',
	        s : 'a few seconds',
	        ss : '%d seconds',
	        m : 'a minute',
	        mm : '%d minutes',
	        h : 'an hour',
	        hh : '%d hours',
	        d : 'a day',
	        dd : '%d days',
	        M : 'a month',
	        MM : '%d months',
	        y : 'a year',
	        yy : '%d years'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
	    ordinal : function (number) {
	        var b = number % 10,
	            output = (~~(number % 100 / 10) === 1) ? 'th' :
	            (b === 1) ? 'st' :
	            (b === 2) ? 'nd' :
	            (b === 3) ? 'rd' : 'th';
	        return number + output;
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return enNz;

	})));


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Spanish [es]
	//! author : Julio Napurí : https://github.com/julionc

	;(function (global, factory) {
	    true ? factory(__webpack_require__(24)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
	var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

	var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
	var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

	var es = moment.defineLocale('es', {
	    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	    monthsShort : function (m, format) {
	        if (!m) {
	            return monthsShortDot;
	        } else if (/-MMM-/.test(format)) {
	            return monthsShort[m.month()];
	        } else {
	            return monthsShortDot[m.month()];
	        }
	    },
	    monthsRegex : monthsRegex,
	    monthsShortRegex : monthsRegex,
	    monthsStrictRegex : /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
	    monthsShortStrictRegex : /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
	    monthsParse : monthsParse,
	    longMonthsParse : monthsParse,
	    shortMonthsParse : monthsParse,
	    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'H:mm',
	        LTS : 'H:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D [de] MMMM [de] YYYY',
	        LLL : 'D [de] MMMM [de] YYYY H:mm',
	        LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
	    },
	    calendar : {
	        sameDay : function () {
	            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        nextDay : function () {
	            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        nextWeek : function () {
	            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        lastDay : function () {
	            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        lastWeek : function () {
	            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'en %s',
	        past : 'hace %s',
	        s : 'unos segundos',
	        ss : '%d segundos',
	        m : 'un minuto',
	        mm : '%d minutos',
	        h : 'una hora',
	        hh : '%d horas',
	        d : 'un día',
	        dd : '%d días',
	        M : 'un mes',
	        MM : '%d meses',
	        y : 'un año',
	        yy : '%d años'
	    },
	    dayOfMonthOrdinalParse : /\d{1,2}º/,
	    ordinal : '%dº',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return es;

	})));


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Spanish (Dominican Republic) [es-do]

	;(function (global, factory) {
	    true ? factory(__webpack_require__(24)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
	var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

	var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
	var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

	var esDo = moment.defineLocale('es-do', {
	    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	    monthsShort : function (m, format) {
	        if (!m) {
	            return monthsShortDot;
	        } else if (/-MMM-/.test(format)) {
	            return monthsShort[m.month()];
	        } else {
	            return monthsShortDot[m.month()];
	        }
	    },
	    monthsRegex: monthsRegex,
	    monthsShortRegex: monthsRegex,
	    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
	    monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
	    monthsParse: monthsParse,
	    longMonthsParse: monthsParse,
	    shortMonthsParse: monthsParse,
	    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'DD/MM/YYYY',
	        LL : 'D [de] MMMM [de] YYYY',
	        LLL : 'D [de] MMMM [de] YYYY h:mm A',
	        LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : function () {
	            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        nextDay : function () {
	            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        nextWeek : function () {
	            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        lastDay : function () {
	            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        lastWeek : function () {
	            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'en %s',
	        past : 'hace %s',
	        s : 'unos segundos',
	        ss : '%d segundos',
	        m : 'un minuto',
	        mm : '%d minutos',
	        h : 'una hora',
	        hh : '%d horas',
	        d : 'un día',
	        dd : '%d días',
	        M : 'un mes',
	        MM : '%d meses',
	        y : 'un año',
	        yy : '%d años'
	    },
	    dayOfMonthOrdinalParse : /\d{1,2}º/,
	    ordinal : '%dº',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return esDo;

	})));


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Spanish (United States) [es-us]
	//! author : bustta : https://github.com/bustta

	;(function (global, factory) {
	    true ? factory(__webpack_require__(24)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
	var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

	var esUs = moment.defineLocale('es-us', {
	    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
	    monthsShort : function (m, format) {
	        if (!m) {
	            return monthsShortDot;
	        } else if (/-MMM-/.test(format)) {
	            return monthsShort[m.month()];
	        } else {
	            return monthsShortDot[m.month()];
	        }
	    },
	    monthsParseExact : true,
	    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
	    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
	    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'h:mm A',
	        LTS : 'h:mm:ss A',
	        L : 'MM/DD/YYYY',
	        LL : 'MMMM [de] D [de] YYYY',
	        LLL : 'MMMM [de] D [de] YYYY h:mm A',
	        LLLL : 'dddd, MMMM [de] D [de] YYYY h:mm A'
	    },
	    calendar : {
	        sameDay : function () {
	            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        nextDay : function () {
	            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        nextWeek : function () {
	            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        lastDay : function () {
	            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        lastWeek : function () {
	            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
	        },
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'en %s',
	        past : 'hace %s',
	        s : 'unos segundos',
	        ss : '%d segundos',
	        m : 'un minuto',
	        mm : '%d minutos',
	        h : 'una hora',
	        hh : '%d horas',
	        d : 'un día',
	        dd : '%d días',
	        M : 'un mes',
	        MM : '%d meses',
	        y : 'un año',
	        yy : '%d años'
	    },
	    dayOfMonthOrdinalParse : /\d{1,2}º/,
	    ordinal : '%dº',
	    week : {
	        dow : 0, // Sunday is the first day of the week.
	        doy : 6  // The week that contains Jan 1st is the first week of the year.
	    }
	});

	return esUs;

	})));


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : French [fr]
	//! author : John Fischer : https://github.com/jfroffice

	;(function (global, factory) {
	    true ? factory(__webpack_require__(24)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var fr = moment.defineLocale('fr', {
	    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	    weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Aujourd’hui à] LT',
	        nextDay : '[Demain à] LT',
	        nextWeek : 'dddd [à] LT',
	        lastDay : '[Hier à] LT',
	        lastWeek : 'dddd [dernier à] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'dans %s',
	        past : 'il y a %s',
	        s : 'quelques secondes',
	        ss : '%d secondes',
	        m : 'une minute',
	        mm : '%d minutes',
	        h : 'une heure',
	        hh : '%d heures',
	        d : 'un jour',
	        dd : '%d jours',
	        M : 'un mois',
	        MM : '%d mois',
	        y : 'un an',
	        yy : '%d ans'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
	    ordinal : function (number, period) {
	        switch (period) {
	            // TODO: Return 'e' when day of month > 1. Move this case inside
	            // block for masculine words below.
	            // See https://github.com/moment/moment/issues/3375
	            case 'D':
	                return number + (number === 1 ? 'er' : '');

	            // Words with masculine grammatical gender: mois, trimestre, jour
	            default:
	            case 'M':
	            case 'Q':
	            case 'DDD':
	            case 'd':
	                return number + (number === 1 ? 'er' : 'e');

	            // Words with feminine grammatical gender: semaine
	            case 'w':
	            case 'W':
	                return number + (number === 1 ? 're' : 'e');
	        }
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return fr;

	})));


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : French (Canada) [fr-ca]
	//! author : Jonathan Abourbih : https://github.com/jonbca

	;(function (global, factory) {
	    true ? factory(__webpack_require__(24)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var frCa = moment.defineLocale('fr-ca', {
	    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	    weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'YYYY-MM-DD',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Aujourd’hui à] LT',
	        nextDay : '[Demain à] LT',
	        nextWeek : 'dddd [à] LT',
	        lastDay : '[Hier à] LT',
	        lastWeek : 'dddd [dernier à] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'dans %s',
	        past : 'il y a %s',
	        s : 'quelques secondes',
	        ss : '%d secondes',
	        m : 'une minute',
	        mm : '%d minutes',
	        h : 'une heure',
	        hh : '%d heures',
	        d : 'un jour',
	        dd : '%d jours',
	        M : 'un mois',
	        MM : '%d mois',
	        y : 'un an',
	        yy : '%d ans'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
	    ordinal : function (number, period) {
	        switch (period) {
	            // Words with masculine grammatical gender: mois, trimestre, jour
	            default:
	            case 'M':
	            case 'Q':
	            case 'D':
	            case 'DDD':
	            case 'd':
	                return number + (number === 1 ? 'er' : 'e');

	            // Words with feminine grammatical gender: semaine
	            case 'w':
	            case 'W':
	                return number + (number === 1 ? 're' : 'e');
	        }
	    }
	});

	return frCa;

	})));


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : French (Switzerland) [fr-ch]
	//! author : Gaspard Bucher : https://github.com/gaspard

	;(function (global, factory) {
	    true ? factory(__webpack_require__(24)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var frCh = moment.defineLocale('fr-ch', {
	    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
	    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
	    monthsParseExact : true,
	    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
	    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
	    weekdaysMin : 'di_lu_ma_me_je_ve_sa'.split('_'),
	    weekdaysParseExact : true,
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD.MM.YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay : '[Aujourd’hui à] LT',
	        nextDay : '[Demain à] LT',
	        nextWeek : 'dddd [à] LT',
	        lastDay : '[Hier à] LT',
	        lastWeek : 'dddd [dernier à] LT',
	        sameElse : 'L'
	    },
	    relativeTime : {
	        future : 'dans %s',
	        past : 'il y a %s',
	        s : 'quelques secondes',
	        ss : '%d secondes',
	        m : 'une minute',
	        mm : '%d minutes',
	        h : 'une heure',
	        hh : '%d heures',
	        d : 'un jour',
	        dd : '%d jours',
	        M : 'un mois',
	        MM : '%d mois',
	        y : 'un an',
	        yy : '%d ans'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
	    ordinal : function (number, period) {
	        switch (period) {
	            // Words with masculine grammatical gender: mois, trimestre, jour
	            default:
	            case 'M':
	            case 'Q':
	            case 'D':
	            case 'DDD':
	            case 'd':
	                return number + (number === 1 ? 'er' : 'e');

	            // Words with feminine grammatical gender: semaine
	            case 'w':
	            case 'W':
	                return number + (number === 1 ? 're' : 'e');
	        }
	    },
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return frCh;

	})));


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Italian [it]
	//! author : Lorenzo : https://github.com/aliem
	//! author: Mattia Larentis: https://github.com/nostalgiaz

	;(function (global, factory) {
	    true ? factory(__webpack_require__(24)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var it = moment.defineLocale('it', {
	    months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
	    monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
	    weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
	    weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
	    weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'DD/MM/YYYY',
	        LL : 'D MMMM YYYY',
	        LLL : 'D MMMM YYYY HH:mm',
	        LLLL : 'dddd D MMMM YYYY HH:mm'
	    },
	    calendar : {
	        sameDay: '[Oggi alle] LT',
	        nextDay: '[Domani alle] LT',
	        nextWeek: 'dddd [alle] LT',
	        lastDay: '[Ieri alle] LT',
	        lastWeek: function () {
	            switch (this.day()) {
	                case 0:
	                    return '[la scorsa] dddd [alle] LT';
	                default:
	                    return '[lo scorso] dddd [alle] LT';
	            }
	        },
	        sameElse: 'L'
	    },
	    relativeTime : {
	        future : function (s) {
	            return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
	        },
	        past : '%s fa',
	        s : 'alcuni secondi',
	        ss : '%d secondi',
	        m : 'un minuto',
	        mm : '%d minuti',
	        h : 'un\'ora',
	        hh : '%d ore',
	        d : 'un giorno',
	        dd : '%d giorni',
	        M : 'un mese',
	        MM : '%d mesi',
	        y : 'un anno',
	        yy : '%d anni'
	    },
	    dayOfMonthOrdinalParse : /\d{1,2}º/,
	    ordinal: '%dº',
	    week : {
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return it;

	})));


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Japanese [ja]
	//! author : LI Long : https://github.com/baryon

	;(function (global, factory) {
	    true ? factory(__webpack_require__(24)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var ja = moment.defineLocale('ja', {
	    months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	    weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
	    weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
	    weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'YYYY/MM/DD',
	        LL : 'YYYY年M月D日',
	        LLL : 'YYYY年M月D日 HH:mm',
	        LLLL : 'YYYY年M月D日 HH:mm dddd',
	        l : 'YYYY/MM/DD',
	        ll : 'YYYY年M月D日',
	        lll : 'YYYY年M月D日 HH:mm',
	        llll : 'YYYY年M月D日 HH:mm dddd'
	    },
	    meridiemParse: /午前|午後/i,
	    isPM : function (input) {
	        return input === '午後';
	    },
	    meridiem : function (hour, minute, isLower) {
	        if (hour < 12) {
	            return '午前';
	        } else {
	            return '午後';
	        }
	    },
	    calendar : {
	        sameDay : '[今日] LT',
	        nextDay : '[明日] LT',
	        nextWeek : '[来週]dddd LT',
	        lastDay : '[昨日] LT',
	        lastWeek : '[前週]dddd LT',
	        sameElse : 'L'
	    },
	    dayOfMonthOrdinalParse : /\d{1,2}日/,
	    ordinal : function (number, period) {
	        switch (period) {
	            case 'd':
	            case 'D':
	            case 'DDD':
	                return number + '日';
	            default:
	                return number;
	        }
	    },
	    relativeTime : {
	        future : '%s後',
	        past : '%s前',
	        s : '数秒',
	        ss : '%d秒',
	        m : '1分',
	        mm : '%d分',
	        h : '1時間',
	        hh : '%d時間',
	        d : '1日',
	        dd : '%d日',
	        M : '1ヶ月',
	        MM : '%dヶ月',
	        y : '1年',
	        yy : '%d年'
	    }
	});

	return ja;

	})));


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

	//! moment.js locale configuration
	//! locale : Chinese (China) [zh-cn]
	//! author : suupic : https://github.com/suupic
	//! author : Zeno Zeng : https://github.com/zenozeng

	;(function (global, factory) {
	    true ? factory(__webpack_require__(24)) :
	   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
	   factory(global.moment)
	}(this, (function (moment) { 'use strict';


	var zhCn = moment.defineLocale('zh-cn', {
	    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
	    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
	    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
	    weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
	    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
	    longDateFormat : {
	        LT : 'HH:mm',
	        LTS : 'HH:mm:ss',
	        L : 'YYYY/MM/DD',
	        LL : 'YYYY年M月D日',
	        LLL : 'YYYY年M月D日Ah点mm分',
	        LLLL : 'YYYY年M月D日ddddAh点mm分',
	        l : 'YYYY/M/D',
	        ll : 'YYYY年M月D日',
	        lll : 'YYYY年M月D日 HH:mm',
	        llll : 'YYYY年M月D日dddd HH:mm'
	    },
	    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
	    meridiemHour: function (hour, meridiem) {
	        if (hour === 12) {
	            hour = 0;
	        }
	        if (meridiem === '凌晨' || meridiem === '早上' ||
	                meridiem === '上午') {
	            return hour;
	        } else if (meridiem === '下午' || meridiem === '晚上') {
	            return hour + 12;
	        } else {
	            // '中午'
	            return hour >= 11 ? hour : hour + 12;
	        }
	    },
	    meridiem : function (hour, minute, isLower) {
	        var hm = hour * 100 + minute;
	        if (hm < 600) {
	            return '凌晨';
	        } else if (hm < 900) {
	            return '早上';
	        } else if (hm < 1130) {
	            return '上午';
	        } else if (hm < 1230) {
	            return '中午';
	        } else if (hm < 1800) {
	            return '下午';
	        } else {
	            return '晚上';
	        }
	    },
	    calendar : {
	        sameDay : '[今天]LT',
	        nextDay : '[明天]LT',
	        nextWeek : '[下]ddddLT',
	        lastDay : '[昨天]LT',
	        lastWeek : '[上]ddddLT',
	        sameElse : 'L'
	    },
	    dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
	    ordinal : function (number, period) {
	        switch (period) {
	            case 'd':
	            case 'D':
	            case 'DDD':
	                return number + '日';
	            case 'M':
	                return number + '月';
	            case 'w':
	            case 'W':
	                return number + '周';
	            default:
	                return number;
	        }
	    },
	    relativeTime : {
	        future : '%s内',
	        past : '%s前',
	        s : '几秒',
	        ss : '%d 秒',
	        m : '1 分钟',
	        mm : '%d 分钟',
	        h : '1 小时',
	        hh : '%d 小时',
	        d : '1 天',
	        dd : '%d 天',
	        M : '1 个月',
	        MM : '%d 个月',
	        y : '1 年',
	        yy : '%d 年'
	    },
	    week : {
	        // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
	        dow : 1, // Monday is the first day of the week.
	        doy : 4  // The week that contains Jan 4th is the first week of the year.
	    }
	});

	return zhCn;

	})));


/***/ })
/******/ ]);